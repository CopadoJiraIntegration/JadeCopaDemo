'use strict';

System.register('app.js', ['common/common.routes.js', 'dealdesk/dealdesk.routes.js', 'advapprovals/advapprovals.routes.js', 'common/core/AppContext.js', 'common/core/sb-router/Router.js', 'common/data/sb-db/Db.js', 'common/data/sb-db/adapter/leveljs/LevelAdapter.js', 'common/data/sb-db/Metadata.js', 'common/common.js', 'dealdesk/dealdesk.js'], function (_export, _context) {
	var common, dealdesk, advapprovals, AppContext, Router, Db, LevelAdapter, Metadata, _createClass, App;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_commonCommonRoutesJs) {
			common = _commonCommonRoutesJs;
		}, function (_dealdeskDealdeskRoutesJs) {
			dealdesk = _dealdeskDealdeskRoutesJs;
		}, function (_advapprovalsAdvapprovalsRoutesJs) {
			advapprovals = _advapprovalsAdvapprovalsRoutesJs;
		}, function (_commonCoreAppContextJs) {
			AppContext = _commonCoreAppContextJs.AppContext;
		}, function (_commonCoreSbRouterRouterJs) {
			Router = _commonCoreSbRouterRouterJs.Router;
		}, function (_commonDataSbDbDbJs) {
			Db = _commonDataSbDbDbJs.Db;
		}, function (_commonDataSbDbAdapterLeveljsLevelAdapterJs) {
			LevelAdapter = _commonDataSbDbAdapterLeveljsLevelAdapterJs.LevelAdapter;
		}, function (_commonDataSbDbMetadataJs) {
			Metadata = _commonDataSbDbMetadataJs;
		}, function (_commonCommonJs) {}, function (_dealdeskDealdeskJs) {}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('App', App = function () {
				function App() {
					_classCallCheck(this, App);
				}

				_createClass(App, null, [{
					key: 'init',
					value: function init(pageContainer, dbName, orgPrefix) {
						AppContext.org.prefix = orgPrefix || 'sbaa';

						var r = {};
						r[common.PREFIX] = common.ROUTES;
						r[dealdesk.PREFIX] = dealdesk.ROUTES;
						r[advapprovals.PREFIX] = advapprovals.ROUTES;

						pageContainer.allRoutes = r;

						Db.adapter = new LevelAdapter();

						return Promise.all([AppContext.init(true), Db.adapter.open(dbName || 'sbaa')]);
					}
				}]);

				return App;
			}());

			_export('App', App);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjb21tb24iLCJkZWFsZGVzayIsImFkdmFwcHJvdmFscyIsIkFwcENvbnRleHQiLCJSb3V0ZXIiLCJEYiIsIkxldmVsQWRhcHRlciIsIk1ldGFkYXRhIiwiQXBwIiwicGFnZUNvbnRhaW5lciIsImRiTmFtZSIsIm9yZ1ByZWZpeCIsIm9yZyIsInByZWZpeCIsInIiLCJQUkVGSVgiLCJST1VURVMiLCJhbGxSb3V0ZXMiLCJhZGFwdGVyIiwiUHJvbWlzZSIsImFsbCIsImluaXQiLCJvcGVuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQVlBLFM7O0FBQ0FDLFc7O0FBQ0FDLGU7O0FBQ0pDLGEsMkJBQUFBLFU7O0FBQ0FDLFMsK0JBQUFBLE07O0FBQ0FDLEssdUJBQUFBLEU7O0FBQ0FDLGUsK0NBQUFBLFk7O0FBQ0lDLFc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztrQkFPQ0MsRzs7Ozs7OzswQkFDQ0MsYSxFQUFlQyxNLEVBQVFDLFMsRUFBWTtBQUMvQ1IsaUJBQVdTLEdBQVgsQ0FBZUMsTUFBZixHQUF3QkYsYUFBYSxNQUFyQzs7QUFFQSxVQUFJRyxJQUFJLEVBQVI7QUFDQUEsUUFBRWQsT0FBT2UsTUFBVCxJQUFtQmYsT0FBT2dCLE1BQTFCO0FBQ0FGLFFBQUViLFNBQVNjLE1BQVgsSUFBcUJkLFNBQVNlLE1BQTlCO0FBQ0FGLFFBQUVaLGFBQWFhLE1BQWYsSUFBeUJiLGFBQWFjLE1BQXRDOztBQUdBUCxvQkFBY1EsU0FBZCxHQUEwQkgsQ0FBMUI7O0FBRUFULFNBQUdhLE9BQUgsR0FBYSxJQUFJWixZQUFKLEVBQWI7O0FBRUEsYUFBT2EsUUFBUUMsR0FBUixDQUFZLENBQ2xCakIsV0FBV2tCLElBQVgsQ0FBaUIsSUFBakIsQ0FEa0IsRUFFbEJoQixHQUFHYSxPQUFILENBQVdJLElBQVgsQ0FBaUJaLFVBQVUsTUFBM0IsQ0FGa0IsQ0FBWixDQUFQO0FBSUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29tbW9uIGZyb20gJ2NvbW1vbi9jb21tb24ucm91dGVzLmpzJztcbmltcG9ydCAqIGFzIGRlYWxkZXNrIGZyb20gJ2RlYWxkZXNrL2RlYWxkZXNrLnJvdXRlcy5qcyc7XG5pbXBvcnQgKiBhcyBhZHZhcHByb3ZhbHMgZnJvbSAnYWR2YXBwcm92YWxzL2FkdmFwcHJvdmFscy5yb3V0ZXMuanMnO1xuaW1wb3J0IHtBcHBDb250ZXh0fSBmcm9tICdjb21tb24vY29yZS9BcHBDb250ZXh0LmpzJztcbmltcG9ydCB7Um91dGVyfSBmcm9tICdjb21tb24vY29yZS9zYi1yb3V0ZXIvUm91dGVyLmpzJztcbmltcG9ydCB7RGJ9IGZyb20gJ2NvbW1vbi9kYXRhL3NiLWRiL0RiLmpzJztcbmltcG9ydCB7TGV2ZWxBZGFwdGVyfSBmcm9tICdjb21tb24vZGF0YS9zYi1kYi9hZGFwdGVyL2xldmVsanMvTGV2ZWxBZGFwdGVyLmpzJztcbmltcG9ydCAqIGFzIE1ldGFkYXRhIGZyb20gJ2NvbW1vbi9kYXRhL3NiLWRiL01ldGFkYXRhLmpzJztcblxuLy8gaW1wb3J0IHRoZSBcImJvb3RzdHJhcFwiIG1vZHVsZXMgZnJvbSBhbGwgZmVhdHVyZSBmb2xkZXJzXG4vLyB0aGV5IGFyZSBoZXJlIGp1c3Qgc28gd2UgZG9uJ3QgaGF2ZSB0byBleHBsaWNpdGx5IGNhbGwgU3lzdGVtLmltcG9ydCgpIG9uIGluZGl2aWR1YWwgbW9kdWxlcy5cbmltcG9ydCAnY29tbW9uL2NvbW1vbi5qcyc7XG5pbXBvcnQgJ2RlYWxkZXNrL2RlYWxkZXNrLmpzJztcblxuZXhwb3J0IGNsYXNzIEFwcCB7XG5cdHN0YXRpYyBpbml0KCBwYWdlQ29udGFpbmVyLCBkYk5hbWUsIG9yZ1ByZWZpeCApIHtcblx0XHRBcHBDb250ZXh0Lm9yZy5wcmVmaXggPSBvcmdQcmVmaXggfHwgJ3NiYWEnO1xuXG5cdFx0bGV0IHIgPSB7fTtcblx0XHRyW2NvbW1vbi5QUkVGSVhdID0gY29tbW9uLlJPVVRFUztcblx0XHRyW2RlYWxkZXNrLlBSRUZJWF0gPSBkZWFsZGVzay5ST1VURVM7XG5cdFx0clthZHZhcHByb3ZhbHMuUFJFRklYXSA9IGFkdmFwcHJvdmFscy5ST1VURVM7XG5cblx0XHQvLyBpbml0aWFsaXplIGFwcCB3aXRoIGFsbCBVUkwgcm91dGVzXG5cdFx0cGFnZUNvbnRhaW5lci5hbGxSb3V0ZXMgPSByO1xuXG5cdFx0RGIuYWRhcHRlciA9IG5ldyBMZXZlbEFkYXB0ZXIoKTtcblxuXHRcdHJldHVybiBQcm9taXNlLmFsbChbXG5cdFx0XHRBcHBDb250ZXh0LmluaXQoIHRydWUgKSxcblx0XHRcdERiLmFkYXB0ZXIub3BlbiggZGJOYW1lIHx8ICdzYmFhJyApXG5cdFx0XSk7XG5cdH1cbn1cbiJdfQ==
"use strict";

System.register("labels_en.js", [], function (_export, _context) {
  var LABELS;
  return {
    setters: [],
    execute: function () {
      _export("LABELS", LABELS = { "Yes": "Yes", "Delete": "Delete", "New": "New", "Recently Viewed": "Recently Viewed" });

      _export("LABELS", LABELS);
    }
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxhYmVsc19lbi5qcyJdLCJuYW1lcyI6WyJMQUJFTFMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7d0JBQ2FBLE0sR0FBUyxFQUFDLE9BQU0sS0FBUCxFQUFhLFVBQVMsUUFBdEIsRUFBK0IsT0FBTSxLQUFyQyxFQUEyQyxtQkFBa0IsaUJBQTdELEUiLCJmaWxlIjoibGFiZWxzX2VuLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVEhJUyBGSUxFIElTIEdFTkVSQVRFRC4gIERPIE5PVCBFRElUISEhIVxuZXhwb3J0IGNvbnN0IExBQkVMUyA9IHtcIlllc1wiOlwiWWVzXCIsXCJEZWxldGVcIjpcIkRlbGV0ZVwiLFwiTmV3XCI6XCJOZXdcIixcIlJlY2VudGx5IFZpZXdlZFwiOlwiUmVjZW50bHkgVmlld2VkXCJ9OyJdfQ==
'use strict';

System.register('advapprovals/advapprovals.routes.js', [], function (_export, _context) {
	var PREFIX, ROUTES;
	return {
		setters: [],
		execute: function () {
			_export('PREFIX', PREFIX = '/advapprovals');

			_export('PREFIX', PREFIX);

			_export('ROUTES', ROUTES = {
				'/hi': { comp: 'sb-aa-example-page', mod: 'advapprovals/sb-aa-example-page/ExamplePage.js' }
			});

			_export('ROUTES', ROUTES);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkdmFwcHJvdmFscy5yb3V0ZXMuanMiXSwibmFtZXMiOlsiUFJFRklYIiwiUk9VVEVTIiwiY29tcCIsIm1vZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztxQkFBYUEsTSxHQUFTLGU7Ozs7cUJBQ1RDLE0sR0FBUztBQUNyQixXQUFPLEVBQUVDLE1BQU0sb0JBQVIsRUFBOEJDLEtBQUssZ0RBQW5DO0FBRGMsSSIsImZpbGUiOiJhZHZhcHByb3ZhbHMucm91dGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBSRUZJWCA9ICcvYWR2YXBwcm92YWxzJztcbmV4cG9ydCBjb25zdCBST1VURVMgPSB7XG5cdCcvaGknOiB7IGNvbXA6ICdzYi1hYS1leGFtcGxlLXBhZ2UnLCBtb2Q6ICdhZHZhcHByb3ZhbHMvc2ItYWEtZXhhbXBsZS1wYWdlL0V4YW1wbGVQYWdlLmpzJyB9XG59XG4iXX0=
'use strict';

System.register('common/Util.js', [], function (_export, _context) {
	var _createClass, Util, frame;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('Util', Util = function () {
				function Util() {
					_classCallCheck(this, Util);
				}

				_createClass(Util, null, [{
					key: 'pad',
					value: function pad(n, width, z) {
						z = z || '0';
						n = n + '';
						return n.length >= width ? n : new Array(width - n.length + 1).join(z) + n;
					}
				}, {
					key: 'toIsoDate',
					value: function toIsoDate(d) {
						d = typeof d === 'number' ? new Date(d) : d;
						return d.getUTCFullYear() + '-' + Util.pad(d.getUTCMonth() + 1, 2) + '-' + Util.pad(d.getUTCDate(), 2) + 'T' + Util.pad(d.getUTCHours(), 2) + ':' + Util.pad(d.getUTCMinutes(), 2) + ':' + Util.pad(d.getUTCSeconds(), 2) + 'Z';
					}
				}, {
					key: 'notifyTopObjects',
					value: function notifyTopObjects(ctxComponent, object, strProp) {
						var _iteratorNormalCompletion = true;
						var _didIteratorError = false;
						var _iteratorError = undefined;

						try {
							for (var _iterator = Object.keys(object)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
								var prop = _step.value;

								ctxComponent.notifyPath(strProp + '.' + prop, object[prop]);
							}
						} catch (err) {
							_didIteratorError = true;
							_iteratorError = err;
						} finally {
							try {
								if (!_iteratorNormalCompletion && _iterator.return) {
									_iterator.return();
								}
							} finally {
								if (_didIteratorError) {
									throw _iteratorError;
								}
							}
						}
					}
				}]);

				return Util;
			}());

			_export('Util', Util);

			Util.Map = Map;
			if (!Map || !Map.prototype.get || !Map.prototype.set) {
				frame = document.createElement('iframe');

				document.body.appendChild(frame);
				Util.Map = frame.contentWindow.Map;
				frame.parentNode.removeChild(frame);
			}
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlV0aWwuanMiXSwibmFtZXMiOlsiVXRpbCIsIm4iLCJ3aWR0aCIsInoiLCJsZW5ndGgiLCJBcnJheSIsImpvaW4iLCJkIiwiRGF0ZSIsImdldFVUQ0Z1bGxZZWFyIiwicGFkIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwiZ2V0VVRDSG91cnMiLCJnZXRVVENNaW51dGVzIiwiZ2V0VVRDU2Vjb25kcyIsImN0eENvbXBvbmVudCIsIm9iamVjdCIsInN0clByb3AiLCJPYmplY3QiLCJrZXlzIiwicHJvcCIsIm5vdGlmeVBhdGgiLCJNYXAiLCJwcm90b3R5cGUiLCJnZXQiLCJzZXQiLCJmcmFtZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNvbnRlbnRXaW5kb3ciLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21CQUdhQSxJOzs7Ozs7O3lCQVFBQyxDLEVBQUdDLEssRUFBT0MsQyxFQUFJO0FBQ3pCQSxVQUFJQSxLQUFLLEdBQVQ7QUFDQUYsVUFBSUEsSUFBSSxFQUFSO0FBQ0EsYUFBT0EsRUFBRUcsTUFBRixJQUFZRixLQUFaLEdBQW9CRCxDQUFwQixHQUF3QixJQUFJSSxLQUFKLENBQVVILFFBQVFELEVBQUVHLE1BQVYsR0FBbUIsQ0FBN0IsRUFBZ0NFLElBQWhDLENBQXFDSCxDQUFyQyxJQUEwQ0YsQ0FBekU7QUFDQTs7OytCQU9nQk0sQyxFQUFHO0FBQ25CQSxVQUFJLE9BQU9BLENBQVAsS0FBYSxRQUFiLEdBQXdCLElBQUlDLElBQUosQ0FBU0QsQ0FBVCxDQUF4QixHQUFzQ0EsQ0FBMUM7QUFDQSxhQUFPQSxFQUFFRSxjQUFGLEtBQXFCLEdBQXJCLEdBQ0hULEtBQUtVLEdBQUwsQ0FBVUgsRUFBRUksV0FBRixLQUFnQixDQUExQixFQUE2QixDQUE3QixDQURHLEdBQ2dDLEdBRGhDLEdBRUhYLEtBQUtVLEdBQUwsQ0FBVUgsRUFBRUssVUFBRixFQUFWLEVBQTBCLENBQTFCLENBRkcsR0FFNkIsR0FGN0IsR0FHSFosS0FBS1UsR0FBTCxDQUFVSCxFQUFFTSxXQUFGLEVBQVYsRUFBMkIsQ0FBM0IsQ0FIRyxHQUc4QixHQUg5QixHQUlIYixLQUFLVSxHQUFMLENBQVVILEVBQUVPLGFBQUYsRUFBVixFQUE2QixDQUE3QixDQUpHLEdBSWdDLEdBSmhDLEdBS0hkLEtBQUtVLEdBQUwsQ0FBVUgsRUFBRVEsYUFBRixFQUFWLEVBQTZCLENBQTdCLENBTEcsR0FLZ0MsR0FMdkM7QUFNQTs7O3NDQUV1QkMsWSxFQUFjQyxNLEVBQVFDLE8sRUFBUztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUN0RCw0QkFBaUJDLE9BQU9DLElBQVAsQ0FBWUgsTUFBWixDQUFqQiw4SEFBc0M7QUFBQSxZQUE3QkksSUFBNkI7O0FBQ3JDTCxxQkFBYU0sVUFBYixDQUF3QkosVUFBVSxHQUFWLEdBQWdCRyxJQUF4QyxFQUE4Q0osT0FBT0ksSUFBUCxDQUE5QztBQUNBO0FBSHFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJdEQ7Ozs7Ozs7O0FBT0ZyQixRQUFLdUIsR0FBTCxHQUFXQSxHQUFYO0FBQ0EsT0FBSSxDQUFDQSxHQUFELElBQVEsQ0FBQ0EsSUFBSUMsU0FBSixDQUFjQyxHQUF2QixJQUE4QixDQUFDRixJQUFJQyxTQUFKLENBQWNFLEdBQWpELEVBQXVEO0FBQ2xEQyxTQURrRCxHQUMxQ0MsU0FBU0MsYUFBVCxDQUF3QixRQUF4QixDQUQwQzs7QUFFdERELGFBQVNFLElBQVQsQ0FBY0MsV0FBZCxDQUEyQkosS0FBM0I7QUFDQTNCLFNBQUt1QixHQUFMLEdBQVdJLE1BQU1LLGFBQU4sQ0FBb0JULEdBQS9CO0FBQ0FJLFVBQU1NLFVBQU4sQ0FBaUJDLFdBQWpCLENBQThCUCxLQUE5QjtBQUNBIiwiZmlsZSI6IlV0aWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgY29sbGVjdGlvbiBvZiBqYXZhc2NyaXB0IHV0aWxpdHkgZnVuY3Rpb25zXG4gKi9cbmV4cG9ydCBjbGFzcyBVdGlsIHtcblx0LyoqXG5cdCAqIFBhZCBhIG51bWJlciB3aXRoIGxlZnQgemVyb3Ncblx0ICogQHBhcmFtICB7SW50ZWdlcn0gbiAgICAgdGhlIG51bWVyaWMgdmFsdWVcblx0ICogQHBhcmFtICB7SW50ZWdlcn0gd2lkdGggdGhlIG51bWJlciBvZiB6ZXJvcyB0byBwYWRcblx0ICogQHBhcmFtICB7U3RyaW5nfSB6ICAgICB0aGUgcGFkIGNoYXJhY3RlciwgZGVmYXVsdHMgdG8gJzAnXG5cdCAqIEByZXR1cm4ge1N0cmluZ30gICAgICAgdGhlIHBhZGRlZCBudW1iZXJcblx0ICovXG5cdHN0YXRpYyBwYWQoIG4sIHdpZHRoLCB6ICkge1xuXHRcdHogPSB6IHx8ICcwJztcblx0XHRuID0gbiArICcnO1xuXHRcdHJldHVybiBuLmxlbmd0aCA+PSB3aWR0aCA/IG4gOiBuZXcgQXJyYXkod2lkdGggLSBuLmxlbmd0aCArIDEpLmpvaW4oeikgKyBuO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJldHVybnMgYW4gXCJJU08gZGF0ZSBzdHJpbmdcIiBpbiBSRkMgMzMzOSBmb3JtYXRcblx0ICogQHBhcmFtICB7TnVtYmVyfERhdGV9IGQgdGhlIG51bWJlciBvZiBtaWxsaXNlY29uZHMgZnJvbSBlcG9jaCBvciBEYXRlIG9iamVjdFxuXHQgKiBAcmV0dXJuIHtTdHJpbmd9ICAgdGhlIFJGQyAzMzM5IGRhdGUgc3RyaW5nXG5cdCAqL1xuXHRzdGF0aWMgdG9Jc29EYXRlKGQpIHtcblx0XHRkID0gdHlwZW9mIGQgPT09ICdudW1iZXInID8gbmV3IERhdGUoZCkgOiBkO1xuXHRcdHJldHVybiBkLmdldFVUQ0Z1bGxZZWFyKCkgKyAnLSdcblx0XHRcdFx0KyBVdGlsLnBhZCggZC5nZXRVVENNb250aCgpKzEsIDIgKSArICctJ1xuXHRcdFx0XHQrIFV0aWwucGFkKCBkLmdldFVUQ0RhdGUoKSwgMiApICsgJ1QnXG5cdFx0XHRcdCsgVXRpbC5wYWQoIGQuZ2V0VVRDSG91cnMoKSwgMiApICsgJzonXG5cdFx0XHRcdCsgVXRpbC5wYWQoIGQuZ2V0VVRDTWludXRlcygpLCAyICkgKyAnOidcblx0XHRcdFx0KyBVdGlsLnBhZCggZC5nZXRVVENTZWNvbmRzKCksIDIgKSArICdaJ1xuXHR9XG5cblx0c3RhdGljIG5vdGlmeVRvcE9iamVjdHMoY3R4Q29tcG9uZW50LCBvYmplY3QsIHN0clByb3ApIHtcblx0XHRmb3IgKGxldCBwcm9wIG9mIE9iamVjdC5rZXlzKG9iamVjdCkpIHtcblx0XHRcdGN0eENvbXBvbmVudC5ub3RpZnlQYXRoKHN0clByb3AgKyAnLicgKyBwcm9wLCBvYmplY3RbcHJvcF0pO1xuXHRcdH1cblx0fVxufVxuXG4vKipcbiAqIFNGIEFsb2hhIFVJIGNyZWF0ZXMgaXRzIG93biBNYXAgb2JqZWN0IGluIHRoZSBnbG9iYWwgbmFtZXNwYWNlIGFuZCBpdCBpcyBhbnl3aGVyZSBuZWFyIHN0YW5kYXJkcyBjb21wbGlhbnRcbiAqIFRoaXMgaXMgYSBzdHVwaWQgaGFjayB0aGF0IGNoZWNrcyBmb3IgdGhlaXIgZHVtYiBpbXBsZW1lbmF0aW9uIGFuZCBnZXRzIHRoZSByZWFsIE1hcCBjbGFzcyBpZiBuZWVkZWQuXG4gKi9cblV0aWwuTWFwID0gTWFwO1xuaWYoICFNYXAgfHwgIU1hcC5wcm90b3R5cGUuZ2V0IHx8ICFNYXAucHJvdG90eXBlLnNldCApIHtcblx0bGV0IGZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggJ2lmcmFtZScgKTtcblx0ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCggZnJhbWUgKTtcblx0VXRpbC5NYXAgPSBmcmFtZS5jb250ZW50V2luZG93Lk1hcDtcblx0ZnJhbWUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZnJhbWUgKTtcbn0iXX0=
'use strict';

System.register('common/common.js', ['common/core/sb-i18n/I18n.js', 'common/core/sb-loading-spinner/LoadingSpinner.js', 'common/core/sb-page-container/PageContainer.js', 'common/core/sb-message-container/MessageContainer.js', 'common/core/sb-page-header/PageHeader.js', 'common/entities/sb-entity-field/EntityField.js', 'common/data/sb-service/Service.js', 'common/forms/sb-field/Field.js', 'common/forms/sb-typeahead/Typeahead.js', 'common/forms/sb-datepicker/Datepicker.js', 'common/forms/sb-pagination/Pagination.js', 'common/layout/sb-div/Div.js', 'common/layout/sb-group/Group.js', 'common/layout/sb-side-panel/SidePanel.js', 'common/layout/sb-table-cell/TableCell.js', 'common/layout/sb-table-header/TableHeader.js', 'common/layout/sb-table-row/TableRow.js', 'common/services/sb-line-editor-read/LineEditorReader.js', 'common/services/sb-line-editor-cache-save/LineEditorCacheSaver.js'], function (_export, _context) {
  return {
    setters: [function (_commonCoreSbI18nI18nJs) {}, function (_commonCoreSbLoadingSpinnerLoadingSpinnerJs) {}, function (_commonCoreSbPageContainerPageContainerJs) {}, function (_commonCoreSbMessageContainerMessageContainerJs) {}, function (_commonCoreSbPageHeaderPageHeaderJs) {}, function (_commonEntitiesSbEntityFieldEntityFieldJs) {}, function (_commonDataSbServiceServiceJs) {}, function (_commonFormsSbFieldFieldJs) {}, function (_commonFormsSbTypeaheadTypeaheadJs) {}, function (_commonFormsSbDatepickerDatepickerJs) {}, function (_commonFormsSbPaginationPaginationJs) {}, function (_commonLayoutSbDivDivJs) {}, function (_commonLayoutSbGroupGroupJs) {}, function (_commonLayoutSbSidePanelSidePanelJs) {}, function (_commonLayoutSbTableCellTableCellJs) {}, function (_commonLayoutSbTableHeaderTableHeaderJs) {}, function (_commonLayoutSbTableRowTableRowJs) {}, function (_commonServicesSbLineEditorReadLineEditorReaderJs) {}, function (_commonServicesSbLineEditorCacheSaveLineEditorCacheSaverJs) {}],
    execute: function () {}
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21tb24uanMiLCJzb3VyY2VzQ29udGVudCI6W119
'use strict';

System.register('common/common.routes.js', [], function (_export, _context) {
	var PREFIX, ROUTES;
	return {
		setters: [],
		execute: function () {
			_export('PREFIX', PREFIX = '/entities');

			_export('PREFIX', PREFIX);

			_export('ROUTES', ROUTES = {
				'/:type': { comp: 'sb-entity-list', mod: 'common/entities/sb-entity-list/EntityList.js' },
				'/:type/new': { comp: 'sb-entity-detail', mod: 'common/entities/sb-entity-detail/EntityDetail.js' },
				'/:type/detail': { comp: 'sb-entity-detail', mod: 'common/entities/sb-entity-detail/EntityDetail.js' }
			});

			_export('ROUTES', ROUTES);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1vbi5yb3V0ZXMuanMiXSwibmFtZXMiOlsiUFJFRklYIiwiUk9VVEVTIiwiY29tcCIsIm1vZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztxQkFBYUEsTSxHQUFTLFc7Ozs7cUJBQ1RDLE0sR0FBUztBQUNyQixjQUFVLEVBQUVDLE1BQU0sZ0JBQVIsRUFBMEJDLEtBQUssOENBQS9CLEVBRFc7QUFFckIsa0JBQWMsRUFBRUQsTUFBTSxrQkFBUixFQUE0QkMsS0FBSyxrREFBakMsRUFGTztBQUdyQixxQkFBaUIsRUFBRUQsTUFBTSxrQkFBUixFQUE0QkMsS0FBSyxrREFBakM7QUFISSxJIiwiZmlsZSI6ImNvbW1vbi5yb3V0ZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgUFJFRklYID0gJy9lbnRpdGllcyc7XG5leHBvcnQgY29uc3QgUk9VVEVTID0ge1xuXHQnLzp0eXBlJzogeyBjb21wOiAnc2ItZW50aXR5LWxpc3QnLCBtb2Q6ICdjb21tb24vZW50aXRpZXMvc2ItZW50aXR5LWxpc3QvRW50aXR5TGlzdC5qcycgfSxcblx0Jy86dHlwZS9uZXcnOiB7IGNvbXA6ICdzYi1lbnRpdHktZGV0YWlsJywgbW9kOiAnY29tbW9uL2VudGl0aWVzL3NiLWVudGl0eS1kZXRhaWwvRW50aXR5RGV0YWlsLmpzJyB9LFxuXHQnLzp0eXBlL2RldGFpbCc6IHsgY29tcDogJ3NiLWVudGl0eS1kZXRhaWwnLCBtb2Q6ICdjb21tb24vZW50aXRpZXMvc2ItZW50aXR5LWRldGFpbC9FbnRpdHlEZXRhaWwuanMnIH1cbn1cbiJdfQ==
"use strict";

System.register("common/common.tests.js", [], function (_export, _context) {
  return {
    setters: [],
    execute: function () {}
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb21tb24udGVzdHMuanMiLCJzb3VyY2VzQ29udGVudCI6W119
'use strict';

System.register('dealdesk/dealdesk.js', ['dealdesk/services/services.js', 'dealdesk/validations/validations.js', 'dealdesk/sb-dd-record-summary/DealDeskRecordSummary.js', 'dealdesk/sb-dd-line-details/DealDeskLineDetails.js', 'dealdesk/sb-dd-line-table/DealDeskLineTable.js', 'dealdesk/sb-dd-sforce-console/DealDeskSForceConsole.js'], function (_export, _context) {
  return {
    setters: [function (_dealdeskServicesServicesJs) {}, function (_dealdeskValidationsValidationsJs) {}, function (_dealdeskSbDdRecordSummaryDealDeskRecordSummaryJs) {}, function (_dealdeskSbDdLineDetailsDealDeskLineDetailsJs) {}, function (_dealdeskSbDdLineTableDealDeskLineTableJs) {}, function (_dealdeskSbDdSforceConsoleDealDeskSForceConsoleJs) {}],
    execute: function () {}
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWFsZGVzay5qcyIsInNvdXJjZXNDb250ZW50IjpbXX0=
'use strict';

System.register('dealdesk/dealdesk.routes.js', [], function (_export, _context) {
	var PREFIX, ROUTES;
	return {
		setters: [],
		execute: function () {
			_export('PREFIX', PREFIX = '/dealdesk');

			_export('PREFIX', PREFIX);

			_export('ROUTES', ROUTES = {
				'/home': { comp: 'sb-deal-desk', mod: 'dealdesk/sb-deal-desk/DealDesk.js' }
			});

			_export('ROUTES', ROUTES);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlYWxkZXNrLnJvdXRlcy5qcyJdLCJuYW1lcyI6WyJQUkVGSVgiLCJST1VURVMiLCJjb21wIiwibW9kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQUFhQSxNLEdBQVMsVzs7OztxQkFDVEMsTSxHQUFTO0FBQ3JCLGFBQVMsRUFBRUMsTUFBTSxjQUFSLEVBQXdCQyxLQUFLLG1DQUE3QjtBQURZLEkiLCJmaWxlIjoiZGVhbGRlc2sucm91dGVzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBSRUZJWCA9ICcvZGVhbGRlc2snO1xuZXhwb3J0IGNvbnN0IFJPVVRFUyA9IHtcblx0Jy9ob21lJzogeyBjb21wOiAnc2ItZGVhbC1kZXNrJywgbW9kOiAnZGVhbGRlc2svc2ItZGVhbC1kZXNrL0RlYWxEZXNrLmpzJyB9XG59XG4iXX0=
'use strict';

System.register('advapprovals/sb-aa-example-page/ExamplePage.js', ['../../common/core/Page.js'], function (_export, _context) {
	var Page, _createClass, ExamplePage;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_commonCorePageJs) {
			Page = _commonCorePageJs.Page;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('ExamplePage', ExamplePage = function (_Page) {
				_inherits(ExamplePage, _Page);

				function ExamplePage() {
					_classCallCheck(this, ExamplePage);

					return _possibleConstructorReturn(this, (ExamplePage.__proto__ || Object.getPrototypeOf(ExamplePage)).apply(this, arguments));
				}

				_createClass(ExamplePage, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-aa-example-page';
						this.properties = Polymer.Base.extend({
							prop1: {
								type: String,
								value: function value() {
									return 'default value for prop1';
								}
							}
						}, Page.properties);
					}
				}, {
					key: 'ready',
					value: function ready() {
						console.log('Example page is ready.  prop1 == ' + this.prop1);
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.Page];
					}
				}]);

				return ExamplePage;
			}(Page));

			_export('ExamplePage', ExamplePage);

			Polymer(ExamplePage);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkV4YW1wbGVQYWdlLmpzIl0sIm5hbWVzIjpbIlBhZ2UiLCJFeGFtcGxlUGFnZSIsImlzIiwicHJvcGVydGllcyIsIlBvbHltZXIiLCJCYXNlIiwiZXh0ZW5kIiwicHJvcDEiLCJ0eXBlIiwiU3RyaW5nIiwidmFsdWUiLCJjb25zb2xlIiwibG9nIiwic2IiLCJjb21tb24iLCJjb3JlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQVFBLE8scUJBQUFBLEk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFFS0MsVzs7Ozs7Ozs7Ozs7c0NBTUs7QUFDaEIsV0FBS0MsRUFBTCxHQUFVLG9CQUFWO0FBQ0EsV0FBS0MsVUFBTCxHQUFrQkMsUUFBUUMsSUFBUixDQUFhQyxNQUFiLENBQXFCO0FBQ3RDQyxjQUFPO0FBQ05DLGNBQU1DLE1BREE7QUFFTkMsZUFBTyxpQkFBVztBQUFFLGdCQUFPLHlCQUFQO0FBQW1DO0FBRmpEO0FBRCtCLE9BQXJCLEVBS2ZWLEtBQUtHLFVBTFUsQ0FBbEI7QUFNQTs7OzZCQUVPO0FBQ1BRLGNBQVFDLEdBQVIsQ0FBYSxzQ0FBc0MsS0FBS0wsS0FBeEQ7QUFDQTs7O3lCQWhCZTtBQUNmLGFBQU8sQ0FBQ00sR0FBR0MsTUFBSCxDQUFVQyxJQUFWLENBQWVmLElBQWhCLENBQVA7QUFDQTs7OztLQUorQkEsSTs7OztBQXFCakNJLFdBQVNILFdBQVQiLCJmaWxlIjoiRXhhbXBsZVBhZ2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhZ2V9IGZyb20gJy4uLy4uL2NvbW1vbi9jb3JlL1BhZ2UuanMnO1xuXG5leHBvcnQgY2xhc3MgRXhhbXBsZVBhZ2UgZXh0ZW5kcyBQYWdlIHtcblxuXHRnZXQgYmVoYXZpb3JzKCkge1xuXHRcdHJldHVybiBbc2IuY29tbW9uLmNvcmUuUGFnZV07XG5cdH1cblxuXHRiZWZvcmVSZWdpc3RlcigpIHtcblx0XHR0aGlzLmlzID0gJ3NiLWFhLWV4YW1wbGUtcGFnZSc7XG5cdFx0dGhpcy5wcm9wZXJ0aWVzID0gUG9seW1lci5CYXNlLmV4dGVuZCgge1xuXHRcdFx0cHJvcDE6IHtcblx0XHRcdFx0dHlwZTogU3RyaW5nLFxuXHRcdFx0XHR2YWx1ZTogZnVuY3Rpb24oKSB7IHJldHVybiAnZGVmYXVsdCB2YWx1ZSBmb3IgcHJvcDEnOyB9XG5cdFx0XHR9XG5cdFx0fSwgUGFnZS5wcm9wZXJ0aWVzICk7XG5cdH1cblxuXHRyZWFkeSgpIHtcblx0XHRjb25zb2xlLmxvZyggJ0V4YW1wbGUgcGFnZSBpcyByZWFkeS4gIHByb3AxID09ICcgKyB0aGlzLnByb3AxICk7XG5cdH1cbn1cblxuUG9seW1lciggRXhhbXBsZVBhZ2UgKTtcbiJdfQ==
'use strict';

System.register('common/core/AppContext.js', [], function (_export, _context) {
	var _createClass, labels, org, md, user, i18n, sb, localUser, AppContext;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			labels = {};
			org = { prefix: '' };
			md = {};
			user = {};
			i18n = {};
			sb = window ? window.sb || {} : {};

			sb.ui = sb.ui || {};
			sb.common = sb.common || {};
			sb.common.core = sb.common.core || {};
			window.sb = sb;

			localUser = {
				lang: 'en',
				locale: 'en-US',
				id: 'user_123456789',
				fullname: 'Joe User',
				username: 'joe@user.com'
			};

			_export('AppContext', AppContext = function () {
				function AppContext() {
					_classCallCheck(this, AppContext);
				}

				_createClass(AppContext, [{
					key: 'user',
					get: function get() {
						return user;
					}
				}, {
					key: 'labels',
					get: function get() {
						return labels;
					}
				}, {
					key: 'org',
					get: function get() {
						return org;
					}
				}], [{
					key: 'init',
					value: function init(useLocal) {
						var i18nClass = null;
						System.import('common/core/sb-i18n/I18n.js').then(function (m) {
							i18nClass = m.I18n;
						});

						return new Promise(function (resolve, reject) {
							user = localUser;
							System.import('labels_en.js').then(function (m) {
								labels = m.LABELS;
								var ret = { labels: m.LABELS, user: localUser };

								if (i18nClass) i18n = new i18nClass(ret);

								resolve(ret);
							}).catch(function (e) {
								reject(e);
							});
						});
					}
				}, {
					key: 'properties',
					get: function get() {
						return {
							app: {
								type: Object,
								value: function value() {
									return {
										user: user,
										labels: labels,
										org: org
									};
								}
							},

							i18n: {
								type: Object,
								value: function value() {
									return i18n;
								}
							}
						};
					}
				}, {
					key: 'user',
					get: function get() {
						return user;
					}
				}, {
					key: 'labels',
					get: function get() {
						return labels;
					}
				}, {
					key: 'org',
					get: function get() {
						return org;
					}
				}]);

				return AppContext;
			}());

			_export('AppContext', AppContext);

			sb.common.core.AppContext = AppContext.prototype;
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcENvbnRleHQuanMiXSwibmFtZXMiOlsibGFiZWxzIiwib3JnIiwicHJlZml4IiwibWQiLCJ1c2VyIiwiaTE4biIsInNiIiwid2luZG93IiwidWkiLCJjb21tb24iLCJjb3JlIiwibG9jYWxVc2VyIiwibGFuZyIsImxvY2FsZSIsImlkIiwiZnVsbG5hbWUiLCJ1c2VybmFtZSIsIkFwcENvbnRleHQiLCJ1c2VMb2NhbCIsImkxOG5DbGFzcyIsIlN5c3RlbSIsImltcG9ydCIsInRoZW4iLCJtIiwiSTE4biIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiTEFCRUxTIiwicmV0IiwiY2F0Y2giLCJlIiwiYXBwIiwidHlwZSIsIk9iamVjdCIsInZhbHVlIiwicHJvdG90eXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNJQSxTLEdBQVMsRTtBQUNYQyxNLEdBQU0sRUFBRUMsUUFBUSxFQUFWLEU7QUFDTkMsSyxHQUFLLEU7QUFDTEMsTyxHQUFPLEU7QUFDUEMsTyxHQUFPLEU7QUFFTEMsSyxHQUFLQyxTQUFTQSxPQUFPRCxFQUFQLElBQWEsRUFBdEIsR0FBMkIsRTs7QUFDcENBLE1BQUdFLEVBQUgsR0FBUUYsR0FBR0UsRUFBSCxJQUFTLEVBQWpCO0FBQ0FGLE1BQUdHLE1BQUgsR0FBWUgsR0FBR0csTUFBSCxJQUFhLEVBQXpCO0FBQ0FILE1BQUdHLE1BQUgsQ0FBVUMsSUFBVixHQUFpQkosR0FBR0csTUFBSCxDQUFVQyxJQUFWLElBQWtCLEVBQW5DO0FBQ0FILFVBQU9ELEVBQVAsR0FBWUEsRUFBWjs7QUFFSUssWSxHQUFZO0FBQ2ZDLFVBQU0sSUFEUztBQUVmQyxZQUFRLE9BRk87QUFHZkMsUUFBSSxnQkFIVztBQUlmQyxjQUFVLFVBSks7QUFLZkMsY0FBVTtBQUxLLEk7O3lCQXFCSEMsVTs7Ozs7Ozt5QkF5REQ7QUFDVixhQUFPYixJQUFQO0FBQ0E7Ozt5QkFFWTtBQUNaLGFBQU9KLE1BQVA7QUFDQTs7O3lCQUVTO0FBQ1QsYUFBT0MsR0FBUDtBQUNBOzs7MEJBM0RZaUIsUSxFQUFXO0FBQ3ZCLFVBQUlDLFlBQVksSUFBaEI7QUFDQUMsYUFBT0MsTUFBUCxDQUFlLDZCQUFmLEVBQStDQyxJQUEvQyxDQUFxRCxVQUFTQyxDQUFULEVBQVk7QUFDaEVKLG1CQUFZSSxFQUFFQyxJQUFkO0FBQ0EsT0FGRDs7QUFJQSxhQUFPLElBQUlDLE9BQUosQ0FBYSxVQUFTQyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQjtBQUU1Q3ZCLGNBQU9PLFNBQVA7QUFDQVMsY0FBT0MsTUFBUCxDQUFlLGNBQWYsRUFBZ0NDLElBQWhDLENBQXNDLFVBQVNDLENBQVQsRUFBWTtBQUNqRHZCLGlCQUFTdUIsRUFBRUssTUFBWDtBQUNBLFlBQUlDLE1BQU0sRUFBRTdCLFFBQVF1QixFQUFFSyxNQUFaLEVBQW9CeEIsTUFBTU8sU0FBMUIsRUFBVjs7QUFFQSxZQUFJUSxTQUFKLEVBQ0NkLE9BQU8sSUFBSWMsU0FBSixDQUFlVSxHQUFmLENBQVA7O0FBRURILGdCQUFTRyxHQUFUO0FBQ0EsUUFSRCxFQVFHQyxLQVJILENBUVUsVUFBU0MsQ0FBVCxFQUFZO0FBQ3JCSixlQUFPSSxDQUFQO0FBQ0EsUUFWRDtBQWVELE9BbEJNLENBQVA7QUFtQkE7Ozt5QkFNdUI7QUFDdkIsYUFBTztBQUNOQyxZQUFLO0FBQ0pDLGNBQU1DLE1BREY7QUFFSkMsZUFBTyxpQkFBVztBQUFFLGdCQUFPO0FBQzFCL0IsZ0JBQU1BLElBRG9CO0FBRTFCSixrQkFBUUEsTUFGa0I7QUFHMUJDLGVBQUtBO0FBSHFCLFVBQVA7QUFJbEI7QUFORSxRQURDOztBQVVOSSxhQUFNO0FBQ0w0QixjQUFNQyxNQUREO0FBRUxDLGVBQU8saUJBQVc7QUFBRSxnQkFBTzlCLElBQVA7QUFBYztBQUY3QjtBQVZBLE9BQVA7QUFlQTs7O3lCQWNpQjtBQUNqQixhQUFPRCxJQUFQO0FBQ0E7Ozt5QkFFbUI7QUFDbkIsYUFBT0osTUFBUDtBQUNBOzs7eUJBRWdCO0FBQ2hCLGFBQU9DLEdBQVA7QUFDQTs7Ozs7Ozs7QUFLRkssTUFBR0csTUFBSCxDQUFVQyxJQUFWLENBQWVPLFVBQWYsR0FBNEJBLFdBQVdtQixTQUF2QyIsImZpbGUiOiJBcHBDb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU2luZ2xldG9uL2luc3RhbmNlIGRhdGEgZXhwb3NlZCBieSB0aGlzIGNsYXNzXG5sZXQgbGFiZWxzID0ge30sXG5cdFx0b3JnID0geyBwcmVmaXg6ICcnIH0sXG5cdFx0bWQgPSB7fSxcblx0XHR1c2VyID0ge30sXG5cdFx0aTE4biA9IHt9OyAgLy8gaW5zdGFuY2Ugb2YgSTE4bi5qcywgd2hpY2ggd2UgY2FuJ3QgaW1wb3J0IG5vcm1hbGx5IGR1ZSB0byBjaXJjdWxhciBkZXBlbmRlbmN5XG5cbmxldCBzYiA9IHdpbmRvdyA/IHdpbmRvdy5zYiB8fCB7fSA6IHt9O1xuc2IudWkgPSBzYi51aSB8fCB7fTtcbnNiLmNvbW1vbiA9IHNiLmNvbW1vbiB8fCB7fTtcbnNiLmNvbW1vbi5jb3JlID0gc2IuY29tbW9uLmNvcmUgfHwge307XG53aW5kb3cuc2IgPSBzYjtcblxubGV0IGxvY2FsVXNlciA9IHsgLy8gZGVmYXVsdCB2YWx1ZXNcblx0bGFuZzogJ2VuJyxcblx0bG9jYWxlOiAnZW4tVVMnLFxuXHRpZDogJ3VzZXJfMTIzNDU2Nzg5Jyxcblx0ZnVsbG5hbWU6ICdKb2UgVXNlcicsXG5cdHVzZXJuYW1lOiAnam9lQHVzZXIuY29tJ1xufTtcblxuLyoqXG4gKiBBIFwiY29udGV4dFwiIGNsYXNzIGZvciB0aGUgZW50aXJlIEFwcGxpY2F0aW9uLiAgSXQga25vd3MgaG93IHRvIGluaXRpYWxpemUvZ2V0IGFsbCB0aGUgY29tbW9uIHN0dWZmXG4gKiB0aGF0IGFueSBwYWdlIG9mIHRoZSBhcHBsaWNhdGlvbiBtaWdodCBuZWVkLiAgVGhpcyBpbmNsdWRlczpcbiAqXG4gKiBVc2VyIHNldHRpbmdzIChsYW5ndWFnZSwgbG9jYWxlLCB0aW1lem9uZSwgZnVsbG5hbWUsIGVtYWlsLCBldGMpXG4gKiBMb2NhbGl6ZWQgbGFiZWxzXG4gKiBPcmcgc2V0dGluZ3NcbiAqIE9yZyBNZXRhZGF0YVxuICogVUkgVGhlbWVzXG4gKlxuICogSXQgZXhwb3NlcyB0aGVzZSBhcyBib3RoIHN0YXRpYyBhbmQgaW5zdGFuY2UgcHJvcGVydGllcyBzbyB0aGF0IHJlZ3VsYXIgamF2YXNjcmlwdCBjYW4gcmVmZXJlbmNlXG4gKiBpbiBlaXRoZXIgd2F5LCBhbmQgd2UgY2FuIGFsc28gdXNlIGNsYXNzIGluaGVyaXRlbmNlIHNvIFBvbHltZXIgcHJvcGVydGllcyBjYW4gYmUgZGF0YSBib3VuZC5cbiAqL1xuZXhwb3J0IGNsYXNzIEFwcENvbnRleHQge1xuXG5cdC8qKlxuXHQgKiBJbml0aWFsaXplIHRoZSBhcHBsaWNhdGlvbiBjb250ZXh0IGRhdGEuICBUaGlzIG5lZWRzIHRvIGJlIGNhbGxlZCAoYXQgbGVhc3Qgb25jZSkgYmVmb3JlXG5cdCAqIG90aGVyIG1ldGhvZHMgYXJlIHVzZWQgdG8gYWNjZXNzIGluc3RhbmNlIGRhdGEuXG5cdCAqIEBwYXJhbSAge2Jvb2xlYW59IHVzZUxvY2FsIGxvYWQgdGhlIFwibG9jYWxob3N0XCIgYXBwIGRhdGEgaW5zdGVhZCBvZiBnb2luZyB0byB0aGUgc2VydmVyXG5cdCAqIEByZXR1cm4ge1Byb21pc2V9XG5cdCAqL1xuXHRzdGF0aWMgaW5pdCggdXNlTG9jYWwgKSB7XG5cdFx0bGV0IGkxOG5DbGFzcyA9IG51bGw7XG5cdFx0U3lzdGVtLmltcG9ydCggJ2NvbW1vbi9jb3JlL3NiLWkxOG4vSTE4bi5qcycgKS50aGVuKCBmdW5jdGlvbihtKSB7XG5cdFx0XHRpMThuQ2xhc3MgPSBtLkkxOG47ICAvLyBub3QgZ29vZCBhc3luYyBwcmFjdGljZSBidXQgdGhpcyBzaG91bGQgYWx3YXlzIGZpbmlzaCBmaXJzdCBiZWZvcmUgbmV4dCBpbXBvcnRcblx0XHR9KTtcblxuXHRcdHJldHVybiBuZXcgUHJvbWlzZSggZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG5cdFx0XHQvLyBpZiggdXNlTG9jYWwgKSB7XG5cdFx0XHRcdHVzZXIgPSBsb2NhbFVzZXI7XG5cdFx0XHRcdFN5c3RlbS5pbXBvcnQoICdsYWJlbHNfZW4uanMnICkudGhlbiggZnVuY3Rpb24obSkge1xuXHRcdFx0XHRcdGxhYmVscyA9IG0uTEFCRUxTO1xuXHRcdFx0XHRcdGxldCByZXQgPSB7IGxhYmVsczogbS5MQUJFTFMsIHVzZXI6IGxvY2FsVXNlciB9O1xuXG5cdFx0XHRcdFx0aWYoIGkxOG5DbGFzcyApXG5cdFx0XHRcdFx0XHRpMThuID0gbmV3IGkxOG5DbGFzcyggcmV0ICk7ICAvLyBjcmVhdGUgc2luZ2xldG9uIGluc3RhbmNlXG5cblx0XHRcdFx0XHRyZXNvbHZlKCByZXQgKTtcblx0XHRcdFx0fSkuY2F0Y2goIGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0XHRyZWplY3QoZSk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0Ly8gfVxuXHRcdFx0Ly8gZWxzZSB7XG5cdFx0XHRcdC8vIHJlc29sdmUoKTsgLy8gVE9ET1xuXHRcdFx0Ly8gfVxuXHRcdH0pO1xuXHR9XG5cblx0LyoqXG5cdCAqIFRoZSBwcm9wZXJ0aWVzIG9iamVjdCwgaW4gUG9seW1lciBmb3JtYXQsIHRoYXQgY2FuIGJlIGluaGVyaXRlZCBieSBvdGhlciBjb21wb25lbnRzL2NsYXNzZXMuXG5cdCAqIEByZXR1cm4ge09iamVjdH0gYSBjb21tb24gc2V0IG9mIHByb3BlcnRpZXMgZm9yIGFsbCBjb21wb25lbnRzL2NsYXNzZXMgaW4gb3VyIGFwcC5cblx0ICovXG5cdHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0YXBwOiB7XG5cdFx0XHRcdHR5cGU6IE9iamVjdCxcblx0XHRcdFx0dmFsdWU6IGZ1bmN0aW9uKCkgeyByZXR1cm4ge1xuXHRcdFx0XHRcdHVzZXI6IHVzZXIsXG5cdFx0XHRcdFx0bGFiZWxzOiBsYWJlbHMsXG5cdFx0XHRcdFx0b3JnOiBvcmdcblx0XHRcdFx0fX1cblx0XHRcdH0sXG5cdFx0XHQvKiogQSBpbnN0YW5jZSBvZiBzYi1pMThuIGluIHB1cmUgRVM2IGNsYXNzIGZvcm0sIGZvciBkaXJlY3QgcHJvZ3JhbW1hdGljIGFjY2VzcyBpbiBhbnkgaW5oZXJpdGVkIGNvbXBvbmVudCAqL1xuXHRcdFx0aTE4bjoge1xuXHRcdFx0XHR0eXBlOiBPYmplY3QsXG5cdFx0XHRcdHZhbHVlOiBmdW5jdGlvbigpIHsgcmV0dXJuIGkxOG47IH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG5cblx0Z2V0IHVzZXIoKSB7XG5cdFx0cmV0dXJuIHVzZXI7XG5cdH1cblxuXHRnZXQgbGFiZWxzKCkge1xuXHRcdHJldHVybiBsYWJlbHM7XG5cdH1cblxuXHRnZXQgb3JnKCkge1xuXHRcdHJldHVybiBvcmc7XG5cdH1cblxuXHRzdGF0aWMgZ2V0IHVzZXIoKSB7XG5cdFx0cmV0dXJuIHVzZXI7XG5cdH1cblxuXHRzdGF0aWMgZ2V0IGxhYmVscygpIHtcblx0XHRyZXR1cm4gbGFiZWxzO1xuXHR9XG5cblx0c3RhdGljIGdldCBvcmcoKSB7XG5cdFx0cmV0dXJuIG9yZztcblx0fVxufVxuXG4vLyBleHBvc2UgYW4gaW5zdGFuY2Ugb2YgQXBwQ29udGV4dCBhcyBnbG9iYWwgb2JqZWN0IHNvIGl0IGNhbiBiZSB1c2VkIGFzIGEgUG9seW1lciBiZWhhdmlvcnNcbi8vIFBvbHltZXIgZG9lc24ndCBjcmVhdGUgaW5zdGFuY2VzIG9mIEVTNiBjbGFzcywganVzdCByZWd1bGFyIEVTNSBvYmplY3RzIDooXG5zYi5jb21tb24uY29yZS5BcHBDb250ZXh0ID0gQXBwQ29udGV4dC5wcm90b3R5cGU7XG4iXX0=
'use strict';

System.register('common/core/Page.js', ['common/core/sb-page-container/PageContainer.js', 'common/core/AppContext.js'], function (_export, _context) {
	var PageContainer, AppContext, _createClass, sb, SIZE_S, SIZE_M, SIZE_L, SIZE_XL, Page;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_commonCoreSbPageContainerPageContainerJs) {
			PageContainer = _commonCoreSbPageContainerPageContainerJs.PageContainer;
		}, function (_commonCoreAppContextJs) {
			AppContext = _commonCoreAppContextJs.AppContext;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			sb = window ? window.sb || {} : {};

			sb.ui = sb.ui || {};
			sb.common = sb.common || {};
			sb.common.core = sb.common.core || {};
			window.sb = sb;

			_export('SIZE_S', SIZE_S = 'S');

			_export('SIZE_S', SIZE_S);

			_export('SIZE_M', SIZE_M = 'M');

			_export('SIZE_M', SIZE_M);

			_export('SIZE_L', SIZE_L = 'L');

			_export('SIZE_L', SIZE_L);

			_export('SIZE_XL', SIZE_XL = 'XL');

			_export('SIZE_XL', SIZE_XL);

			_export('Page', Page = function (_AppContext) {
				_inherits(Page, _AppContext);

				function Page() {
					_classCallCheck(this, Page);

					return _possibleConstructorReturn(this, (Page.__proto__ || Object.getPrototypeOf(Page)).apply(this, arguments));
				}

				_createClass(Page, [{
					key: 'ready',
					value: function ready() {
						this.handleViewportChangeEvent();
					}
				}, {
					key: 'nav',
					value: function nav(url, queryParams, pathParams, newWin) {
						var u = url,
						    pLen = pathParams ? pathParams.length : 0,
						    pKeys = queryParams ? Object.keys(queryParams) : [],
						    kLen = pKeys.length;

						if (pathParams) {
							for (var i = 0; i < pLen; i++) {
								if (pathParams[i] != null && pathParams[i] != undefined && pathParams[i] != '') u += '/' + encodeURIComponent(pathParams[i]);
							}
						}

						for (var _i = 0; _i < kLen; _i++) {
							u += _i == 0 ? '?' : '&';
							u += encodeURIComponent(pKeys[_i]) + '=' + encodeURIComponent(queryParams[pKeys[_i]]);
						}

						window.location.hash = u;
					}
				}, {
					key: 'handleViewportChangeEvent',
					value: function handleViewportChangeEvent() {
						var con = document.querySelector('#' + PageContainer.domId);
						if (!con) return;

						con.addEventListener('sb-viewport-changed', function (e) {
							this.fire('sb-page-viewport-changed', { viewport: e.detail.viewport });
						}.bind(this));
					}
				}], [{
					key: 'properties',
					get: function get() {
						return Polymer.Base.extend({
							ctx: {
								type: Object,
								value: function value() {
									return {};
								}
							},
							viewport: Object
						}, AppContext.properties);
					}
				}]);

				return Page;
			}(AppContext));

			_export('Page', Page);

			sb.common.core.Page = Page.prototype;
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhZ2UuanMiXSwibmFtZXMiOlsiUGFnZUNvbnRhaW5lciIsIkFwcENvbnRleHQiLCJzYiIsIndpbmRvdyIsInVpIiwiY29tbW9uIiwiY29yZSIsIlNJWkVfUyIsIlNJWkVfTSIsIlNJWkVfTCIsIlNJWkVfWEwiLCJQYWdlIiwiaGFuZGxlVmlld3BvcnRDaGFuZ2VFdmVudCIsInVybCIsInF1ZXJ5UGFyYW1zIiwicGF0aFBhcmFtcyIsIm5ld1dpbiIsInUiLCJwTGVuIiwibGVuZ3RoIiwicEtleXMiLCJPYmplY3QiLCJrZXlzIiwia0xlbiIsImkiLCJ1bmRlZmluZWQiLCJlbmNvZGVVUklDb21wb25lbnQiLCJsb2NhdGlvbiIsImhhc2giLCJjb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJkb21JZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZmlyZSIsInZpZXdwb3J0IiwiZGV0YWlsIiwiYmluZCIsIlBvbHltZXIiLCJCYXNlIiwiZXh0ZW5kIiwiY3R4IiwidHlwZSIsInZhbHVlIiwicHJvcGVydGllcyIsInByb3RvdHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFRQSxnQiw2Q0FBQUEsYTs7QUFDQUMsYSwyQkFBQUEsVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUpDLEssR0FBS0MsU0FBU0EsT0FBT0QsRUFBUCxJQUFhLEVBQXRCLEdBQTJCLEU7O0FBQ3BDQSxNQUFHRSxFQUFILEdBQVFGLEdBQUdFLEVBQUgsSUFBUyxFQUFqQjtBQUNBRixNQUFHRyxNQUFILEdBQVlILEdBQUdHLE1BQUgsSUFBYSxFQUF6QjtBQUNBSCxNQUFHRyxNQUFILENBQVVDLElBQVYsR0FBaUJKLEdBQUdHLE1BQUgsQ0FBVUMsSUFBVixJQUFrQixFQUFuQztBQUNBSCxVQUFPRCxFQUFQLEdBQVlBLEVBQVo7O3FCQUdhSyxNLEdBQVMsRzs7OztxQkFDVEMsTSxHQUFTLEc7Ozs7cUJBQ1RDLE0sR0FBUyxHOzs7O3NCQUNUQyxPLEdBQVUsSTs7OzttQkFLVkMsSTs7Ozs7Ozs7Ozs7NkJBRUo7QUFDUCxXQUFLQyx5QkFBTDtBQUNBOzs7eUJBVUlDLEcsRUFBS0MsVyxFQUFhQyxVLEVBQVlDLE0sRUFBUztBQUMzQyxVQUFJQyxJQUFJSixHQUFSO0FBQUEsVUFDQ0ssT0FBT0gsYUFBYUEsV0FBV0ksTUFBeEIsR0FBaUMsQ0FEekM7QUFBQSxVQUVDQyxRQUFRTixjQUFjTyxPQUFPQyxJQUFQLENBQWFSLFdBQWIsQ0FBZCxHQUEyQyxFQUZwRDtBQUFBLFVBR0NTLE9BQU9ILE1BQU1ELE1BSGQ7O0FBS0EsVUFBSUosVUFBSixFQUFpQjtBQUNoQixZQUFNLElBQUlTLElBQUksQ0FBZCxFQUFpQkEsSUFBSU4sSUFBckIsRUFBMkJNLEdBQTNCLEVBQWlDO0FBQ2hDLFlBQUtULFdBQVlTLENBQVosS0FBbUIsSUFBbkIsSUFBMkJULFdBQVlTLENBQVosS0FBbUJDLFNBQTlDLElBQTJEVixXQUFZUyxDQUFaLEtBQW1CLEVBQW5GLEVBQ0NQLEtBQUssTUFBTVMsbUJBQW9CWCxXQUFZUyxDQUFaLENBQXBCLENBQVg7QUFDRDtBQUNEOztBQUVELFdBQUssSUFBSUEsS0FBSSxDQUFiLEVBQWdCQSxLQUFJRCxJQUFwQixFQUEwQkMsSUFBMUIsRUFBZ0M7QUFDL0JQLFlBQUtPLE1BQUssQ0FBTCxHQUFTLEdBQVQsR0FBZSxHQUFwQjtBQUNBUCxZQUFLUyxtQkFBb0JOLE1BQU9JLEVBQVAsQ0FBcEIsSUFBbUMsR0FBbkMsR0FBeUNFLG1CQUFvQlosWUFBYU0sTUFBT0ksRUFBUCxDQUFiLENBQXBCLENBQTlDO0FBQ0E7O0FBRURyQixhQUFPd0IsUUFBUCxDQUFnQkMsSUFBaEIsR0FBdUJYLENBQXZCO0FBQ0E7OztpREFFMkI7QUFDM0IsVUFBSVksTUFBTUMsU0FBU0MsYUFBVCxDQUF3QixNQUFNL0IsY0FBY2dDLEtBQTVDLENBQVY7QUFDQSxVQUFHLENBQUNILEdBQUosRUFDQzs7QUFFREEsVUFBSUksZ0JBQUosQ0FBc0IscUJBQXRCLEVBQTZDLFVBQVNDLENBQVQsRUFBWTtBQUV4RCxZQUFLQyxJQUFMLENBQVUsMEJBQVYsRUFBc0MsRUFBQ0MsVUFBVUYsRUFBRUcsTUFBRixDQUFTRCxRQUFwQixFQUF0QztBQUNBLE9BSDRDLENBRzNDRSxJQUgyQyxDQUd0QyxJQUhzQyxDQUE3QztBQUlBOzs7eUJBTXVCO0FBQ3ZCLGFBQU9DLFFBQVFDLElBQVIsQ0FBYUMsTUFBYixDQUFvQjtBQUMxQkMsWUFBSztBQUNKQyxjQUFNdEIsTUFERjtBQUVKdUIsZUFBTyxpQkFBVztBQUFFLGdCQUFPLEVBQVA7QUFBVztBQUYzQixRQURxQjtBQUsxQlIsaUJBQVVmO0FBTGdCLE9BQXBCLEVBTUpwQixXQUFXNEMsVUFOUCxDQUFQO0FBT0E7Ozs7S0ExRHdCNUMsVTs7OztBQStEMUJDLE1BQUdHLE1BQUgsQ0FBVUMsSUFBVixDQUFlSyxJQUFmLEdBQXNCQSxLQUFLbUMsU0FBM0IiLCJmaWxlIjoiUGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFnZUNvbnRhaW5lcn0gZnJvbSAnY29tbW9uL2NvcmUvc2ItcGFnZS1jb250YWluZXIvUGFnZUNvbnRhaW5lci5qcyc7XG5pbXBvcnQge0FwcENvbnRleHR9IGZyb20gJ2NvbW1vbi9jb3JlL0FwcENvbnRleHQuanMnO1xuXG52YXIgc2IgPSB3aW5kb3cgPyB3aW5kb3cuc2IgfHwge30gOiB7fTtcbnNiLnVpID0gc2IudWkgfHwge307XG5zYi5jb21tb24gPSBzYi5jb21tb24gfHwge307XG5zYi5jb21tb24uY29yZSA9IHNiLmNvbW1vbi5jb3JlIHx8IHt9O1xud2luZG93LnNiID0gc2I7XG5cbi8vIFNjcmVlbi1pc2ggLyB2aWV3cG9ydCBzaXplc1xuZXhwb3J0IGNvbnN0IFNJWkVfUyA9ICdTJztcbmV4cG9ydCBjb25zdCBTSVpFX00gPSAnTSc7XG5leHBvcnQgY29uc3QgU0laRV9MID0gJ0wnO1xuZXhwb3J0IGNvbnN0IFNJWkVfWEwgPSAnWEwnO1xuXG4vKipcbiAqIFRoZSBjb21tb24gYmFzZSBjbGFzcyBmb3IgYWxsIFBhZ2Ugb2JqZWN0cy4gIEEgUGFnZSBpcyBhIHBoeXNpY2FsIGxhbmRpbmcgcG9pbnQgb2YgY29udGVudCB3aGVuIGEgdXNlciBuYXZpZ2F0ZXMgaW4gdGhlIGFwcC5cbiAqL1xuZXhwb3J0IGNsYXNzIFBhZ2UgZXh0ZW5kcyBBcHBDb250ZXh0IHtcblxuXHRyZWFkeSgpIHtcblx0XHR0aGlzLmhhbmRsZVZpZXdwb3J0Q2hhbmdlRXZlbnQoKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBBIG5hdmlnYXRlIGZ1bmN0aW9uIGZvciBpbXBlcmF0aXZlIG5hZ2l2Z2F0aW9uIGV2ZW50cyBcImluc2lkZVwiIG91ciBhcHBsaWNhdGlvbi5cblx0ICogQHBhcmFtICB7U3RyaW5nfSB1cmwgICAgICAgICB0aGUgcmVsYXRpdmUgVVJMIHRvIG5hdmlnYXRlIHRvXG5cdCAqIEBwYXJhbSAge09iamVjdH0gcXVlcnlQYXJhbXMgYSBtYXAgb2YgcXVlcnkgcGFyYW1ldGVycyB0byBhcHBlbmQgdG8gdGhlIFVSTFxuXHQgKiBAcGFyYW0gIHtPYmplY3R9IHBhdGhQYXJhbXMgIGFycmF5IG9mIHBhdGggc3RyaW5ncyB0byBhcHBlbmQgdG8gdGhlIFVSTFxuXHQgKiBAcGFyYW0gIHtib29sZWFufSBuZXdXaW4gICAgIHRydWUgdG8gb3BlbiBpbiBhIG5ldyBicm93c2VyIHdpbmRvd1xuXHQgKiBAcmV0dXJuIHtudWxsfVxuXHQgKi9cblx0bmF2KCB1cmwsIHF1ZXJ5UGFyYW1zLCBwYXRoUGFyYW1zLCBuZXdXaW4gKSB7XG5cdFx0bGV0IHUgPSB1cmwsXG5cdFx0XHRwTGVuID0gcGF0aFBhcmFtcyA/IHBhdGhQYXJhbXMubGVuZ3RoIDogMCxcblx0XHRcdHBLZXlzID0gcXVlcnlQYXJhbXMgPyBPYmplY3Qua2V5cyggcXVlcnlQYXJhbXMgKSA6IFtdLFxuXHRcdFx0a0xlbiA9IHBLZXlzLmxlbmd0aDtcblxuXHRcdGlmKCBwYXRoUGFyYW1zICkge1xuXHRcdFx0Zm9yICggdmFyIGkgPSAwOyBpIDwgcExlbjsgaSsrICkge1xuXHRcdFx0XHRpZiAoIHBhdGhQYXJhbXNbIGkgXSAhPSBudWxsICYmIHBhdGhQYXJhbXNbIGkgXSAhPSB1bmRlZmluZWQgJiYgcGF0aFBhcmFtc1sgaSBdICE9ICcnIClcblx0XHRcdFx0XHR1ICs9ICcvJyArIGVuY29kZVVSSUNvbXBvbmVudCggcGF0aFBhcmFtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Zm9yKCBsZXQgaSA9IDA7IGkgPCBrTGVuOyBpKysgKSB7XG5cdFx0XHR1ICs9IGkgPT0gMCA/ICc/JyA6ICcmJztcblx0XHRcdHUgKz0gZW5jb2RlVVJJQ29tcG9uZW50KCBwS2V5c1sgaSBdICkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQoIHF1ZXJ5UGFyYW1zWyBwS2V5c1sgaSBdIF0gKTtcblx0XHR9XG5cblx0XHR3aW5kb3cubG9jYXRpb24uaGFzaCA9IHU7XG5cdH1cblxuXHRoYW5kbGVWaWV3cG9ydENoYW5nZUV2ZW50KCkge1xuXHRcdHZhciBjb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCAnIycgKyBQYWdlQ29udGFpbmVyLmRvbUlkICk7XG5cdFx0aWYoIWNvbilcblx0XHRcdHJldHVybjtcblxuXHRcdGNvbi5hZGRFdmVudExpc3RlbmVyKCAnc2Itdmlld3BvcnQtY2hhbmdlZCcsIGZ1bmN0aW9uKGUpIHtcblx0XHRcdC8vIGZpcmUgdGhpcyBldmVudCBhZ2FpbnN0IHRoZSBwYWdlXG5cdFx0XHR0aGlzLmZpcmUoJ3NiLXBhZ2Utdmlld3BvcnQtY2hhbmdlZCcsIHt2aWV3cG9ydDogZS5kZXRhaWwudmlld3BvcnR9KTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFRoZSBiYXNlIHByb3BlcnRpZXMgb2JqZWN0LCBpbiBQb2x5bWVyIGZvcm1hdCwgdGhhdCBhbGwgUGFnZXMgaGF2ZSBpbiBjb21tb25cblx0ICogQHJldHVybiB7T2JqZWN0fSBhIGNvbW1vbiBzZXQgb2YgcHJvcGVydGllcyBmb3IgYWxsIHBhZ2VzXG5cdCAqL1xuXHRzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG5cdFx0cmV0dXJuIFBvbHltZXIuQmFzZS5leHRlbmQoe1xuXHRcdFx0Y3R4OiB7XG5cdFx0XHRcdHR5cGU6IE9iamVjdCxcblx0XHRcdFx0dmFsdWU6IGZ1bmN0aW9uKCkgeyByZXR1cm4ge30gfVxuXHRcdFx0fSxcblx0XHRcdHZpZXdwb3J0OiBPYmplY3Rcblx0XHR9LCBBcHBDb250ZXh0LnByb3BlcnRpZXMgKTtcblx0fVxufVxuXG4vLyBleHBvc2UgYW4gaW5zdGFuY2Ugb2YgUGFnZSBhcyBnbG9iYWwgb2JqZWN0IHNvIGl0IGNhbiBiZSB1c2VkIGFzIGEgUG9seW1lciBiZWhhdmlvcnNcbi8vIFBvbHltZXIgZG9lc24ndCBjcmVhdGUgaW5zdGFuY2VzIG9mIEVTNiBjbGFzcywganVzdCByZWd1bGFyIEVTNSBvYmplY3RzIDooXG5zYi5jb21tb24uY29yZS5QYWdlID0gUGFnZS5wcm90b3R5cGU7XG4iXX0=
"use strict";

System.register("common/l10n/labels_en.js", [], function (_export, _context) {
  var LABELS;
  return {
    setters: [],
    execute: function () {
      _export("LABELS", LABELS = { "Yes": "Yes", "Delete": "Delete", "New": "New", "Recently Viewed": "Recently Viewed", "Product Selection": "Product Selection" });

      _export("LABELS", LABELS);
    }
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxhYmVsc19lbi5qcyJdLCJuYW1lcyI6WyJMQUJFTFMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7d0JBQWFBLE0sR0FBUyxFQUFDLE9BQU0sS0FBUCxFQUFhLFVBQVMsUUFBdEIsRUFBK0IsT0FBTSxLQUFyQyxFQUEyQyxtQkFBa0IsaUJBQTdELEVBQStFLHFCQUFvQixtQkFBbkcsRSIsImZpbGUiOiJsYWJlbHNfZW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgTEFCRUxTID0ge1wiWWVzXCI6XCJZZXNcIixcIkRlbGV0ZVwiOlwiRGVsZXRlXCIsXCJOZXdcIjpcIk5ld1wiLFwiUmVjZW50bHkgVmlld2VkXCI6XCJSZWNlbnRseSBWaWV3ZWRcIixcIlByb2R1Y3QgU2VsZWN0aW9uXCI6XCJQcm9kdWN0IFNlbGVjdGlvblwifTsiXX0=
'use strict';

System.register('common/oauth/OAuth.js', ['common/oauth/oauth.local.js'], function (_export, _context) {
    var OAUTH_KEY, OAUTH_SECRET, _createClass, oauth2, OAuth;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [function (_commonOauthOauthLocalJs) {
            OAUTH_KEY = _commonOauthOauthLocalJs.OAUTH_KEY;
            OAUTH_SECRET = _commonOauthOauthLocalJs.OAUTH_SECRET;
        }],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            oauth2 = {
                clientId: OAUTH_KEY,
                clientSecret: OAUTH_SECRET,
                redirectUri: 'http://localhost:' + location.port + '/common/oauth/callback',
                proxyUrl: 'https://brick-rest-proxy.herokuapp.com/proxy/'
            };

            _export('OAuth', OAuth = function () {
                function OAuth() {
                    _classCallCheck(this, OAuth);

                    if (!oauth2.clientId || !oauth2.clientSecret) throw Error(this._getNoOAuthClientKeyMessage());

                    var storeTokens = jsforce.browser.Client.prototype._storeTokens.bind(jsforce.browser);
                    jsforce.browser.Client.prototype._storeTokens = function (params) {
                        storeTokens(params);
                        localStorage.setItem(this._prefix + '_refresh_token', params.refresh_token);
                    }.bind(jsforce.browser);

                    var removeTokens = jsforce.browser.Client.prototype._removeTokens.bind(jsforce.browser);
                    jsforce.browser.Client.prototype._removeTokens = function () {
                        removeTokens();
                        localStorage.removeItem(this._prefix + '_refresh_token');
                    }.bind(jsforce.browser);

                    var getTokens = jsforce.browser.Client.prototype._getTokens.bind(jsforce.browser);
                    jsforce.browser.Client.prototype._getTokens = function () {
                        var tokens = getTokens();
                        if (tokens) tokens.refreshToken = localStorage.getItem(this._prefix + '_refresh_token');
                        return tokens;
                    }.bind(jsforce.browser);

                    var isLoggedIn = jsforce.browser.Client.prototype.isLoggedIn.bind(jsforce.browser);
                    jsforce.browser.Client.prototype.isLoggedIn = function () {
                        if (!isLoggedIn()) return false;
                        return this.connection.refreshToken;
                    }.bind(jsforce.browser);

                    (function () {
                        localStorage.setItem(this._prefix + '_issued_at', new Date().getTime());
                        document.cookie = this._prefix + '_loggedin=true;';
                    }).bind(jsforce.browser)();

                    jsforce.browser.init(oauth2);
                }

                _createClass(OAuth, [{
                    key: 'login',
                    value: function login() {
                        jsforce.browser.login();
                    }
                }, {
                    key: 'getConnection',
                    value: function getConnection() {
                        if (!jsforce.browser.isLoggedIn()) return Promise.reject('Please login before establishing a connection at http://localhost:' + location.port + '/common/oauth');

                        return new Promise(function (resolve, reject) {
                            jsforce.browser.once('connect', function (conn) {
                                var createRequestParams = conn.apex._createRequestParams.bind(conn.apex);
                                conn.apex._createRequestParams = function (method, path, body) {
                                    var params = createRequestParams(method, path, body);
                                    params.headers = params.headers || {};
                                    params.headers['X-Authorization'] = conn.refreshToken;
                                    return params;
                                };
                                resolve(conn);
                            });
                            jsforce.browser.init(oauth2);
                        });
                    }
                }, {
                    key: '_getNoOAuthClientKeyMessage',
                    value: function _getNoOAuthClientKeyMessage() {
                        return 'Need to add a \'.env.json\' file in the CPQ dir whose contents contains the Consumer Key and Consumer Secret of the Steelbrick CPQ Connected App, and then execute a gulp compile.\n' + '{"oauth_key": "<Consumer Key>, "oauth_secret": "<Consumer Secret>"}';
                    }
                }, {
                    key: 'accessToken',
                    set: function set(accessToken) {
                        localStorage.setItem(jsforce.browser._prefix + '_access_token', accessToken);
                    }
                }, {
                    key: 'tokens',
                    get: function get() {
                        return jsforce.browser._getTokens();
                    },
                    set: function set(tokens) {
                        jsforce.browser._storeTokens(tokens);
                    }
                }]);

                return OAuth;
            }());

            _export('OAuth', OAuth);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/oauth/oauth.local.js', [], function (_export, _context) {
  var OAUTH_KEY, OAUTH_SECRET;
  return {
    setters: [],
    execute: function () {
      _export('OAUTH_KEY', OAUTH_KEY = '3MVG9yZ.WNe6byQBf3KaROSnAINMpMlCRNXj2YJ3NfuFlQ3W5MNuK89Wldb3FsiUK3kdxgMStp.7aOMpdeThJ');

      _export('OAUTH_KEY', OAUTH_KEY);

      _export('OAUTH_SECRET', OAUTH_SECRET = '8653803322759571172');

      _export('OAUTH_SECRET', OAUTH_SECRET);
    }
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9hdXRoLmxvY2FsLmpzIl0sIm5hbWVzIjpbIk9BVVRIX0tFWSIsIk9BVVRIX1NFQ1JFVCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OzsyQkFBYUEsUyxHQUFZLHVGOzs7OzhCQUNaQyxZLEdBQWUscUIiLCJmaWxlIjoib2F1dGgubG9jYWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgT0FVVEhfS0VZID0gJzNNVkc5eVouV05lNmJ5UUJmM0thUk9TbkFJTk1wTWxDUk5YajJZSjNOZnVGbFEzVzVNTnVLODlXbGRiM0ZzaVVLM2tkeGdNU3RwLjdhT01wZGVUaEonO1xuZXhwb3J0IGNvbnN0IE9BVVRIX1NFQ1JFVCA9ICc4NjUzODAzMzIyNzU5NTcxMTcyJzsiXX0=
'use strict';

System.register('dealdesk/sb-dd-line-details/DealDeskLineDetails.js', ['common/core/AppContext.js'], function (_export, _context) {
	var AppContext, _createClass, DealDeskLineDetails;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_commonCoreAppContextJs) {
			AppContext = _commonCoreAppContextJs.AppContext;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('DealDeskLineDetails', DealDeskLineDetails = function () {
				function DealDeskLineDetails() {
					_classCallCheck(this, DealDeskLineDetails);
				}

				_createClass(DealDeskLineDetails, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-dd-line-details';
						this.properties = {
							lineFields: {
								type: Array
							},
							childRecords: {
								type: Object
							},
							customIconUrls: {
								type: Object
							},
							lineArrayByStatus: {
								type: Object
							},
							model: Object,
							statuses: {
								type: Object,
								value: {
									"Pending": "penl",
									"Approved": "appl",
									"Rejected": "rejl",
									"Recalled": "recl"
								}
							},
							statusField: {
								type: String
							},
							actionsDisplayed: {
								type: Boolean
							}
						};
					}
				}, {
					key: 'ready',
					value: function ready() {
						this.statusField = AppContext.org.prefix ? AppContext.org.prefix + '__ApprovalStatus__c' : 'ApprovalStatus__c';
						this.addEventListener('approveLine', this.approveLine);
						this.addEventListener('rejectLine', this.rejectLine);
						this.addEventListener('updateLine', this.updateLine);
						this.addEventListener('sortLines', this.sortLines);
					}
				}, {
					key: 'setUp',
					value: function setUp() {
						this.lineFields = this.model.displayedLineFields;
						this.childRecords = this.model.childRecords;
						this.customIconUrls = this.model.customIconUrls;
						this.actionsDisplayed = this.model.actionsDisplayed;

						this.lineArrayByStatus = {};

						var _iteratorNormalCompletion = true;
						var _didIteratorError = false;
						var _iteratorError = undefined;

						try {
							for (var _iterator = Object.keys(this.statuses)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
								var _status = _step.value;

								this.lineArrayByStatus[_status] = [];
							}
						} catch (err) {
							_didIteratorError = true;
							_iteratorError = err;
						} finally {
							try {
								if (!_iteratorNormalCompletion && _iterator.return) {
									_iterator.return();
								}
							} finally {
								if (_didIteratorError) {
									throw _iteratorError;
								}
							}
						}

						if (this.childRecords.length > 0) {
							if (!this.childRecords[0][this.statusField]) {
								this.statusField = 'ApprovalStatus__c';
							}
						}
						var numChildren = this.childRecords.length;
						for (var i = 0; i < numChildren; i++) {
							var status = this.childRecords[i][this.statusField];
							this.lineArrayByStatus[status].push(this.childRecords[i]);
						}
						this.updateTables();
					}
				}, {
					key: 'changeStatus',
					value: function changeStatus(line, currentStatus, targetStatus, ind, classes) {
						var currentId = this.statuses[currentStatus];
						var targetId = this.statuses[targetStatus];

						line[this.statusField] = targetStatus;
						this.$[currentId].splice("lines", ind, 1);
						this.$[currentId].len = this.lineArrayByStatus[currentStatus].length;
						this.$[targetId].push("lines", line);
						this.$[targetId].len = this.lineArrayByStatus[targetStatus].length;
						if (classes.contains('selected')) {
							delete line.selected;
							this.fire('selectFirst');
							this.$[targetId].updateLines();
							if (this.lineArrayByStatus['Pending'].length > 0) {
								this.$.penl.$.childLines._instances[0]._children[1].classList.add('selected');
							}
						} else {
							this.$[targetId].updateLines();
						}
					}
				}, {
					key: 'approveLine',
					value: function approveLine(e) {
						var line = e.detail.line;
						var statusName = e.detail.line[this.statusField];
						var ind = e.detail.index;
						var classes = e.detail.classes;
						this.changeStatus(line, statusName, "Approved", ind, classes);
					}
				}, {
					key: 'rejectLine',
					value: function rejectLine(e) {
						var line = e.detail.line;
						var statusName = e.detail.line[this.statusField];
						var ind = e.detail.index;
						var classes = e.detail.classes;
						this.changeStatus(line, statusName, "Rejected", ind, classes);
					}
				}, {
					key: 'updateLine',
					value: function updateLine(e) {
						var line = e.detail.line;
						var field = e.detail.field;
						var value = e.detail.value;
						line[field.name] = value;
					}
				}, {
					key: 'sortLines',
					value: function sortLines(e) {
						var lines = this.lineArrayByStatus[e.detail.status];
						lines.sort(function (a, b) {
							var valueA = void 0,
							    valueB = void 0,
							    truncLabel = void 0;
							if (e.detail.headerClassList.contains('asc')) {
								if (e.detail.field.name.substring(e.detail.field.name.length - 2) == "Id" && e.detail.field.type == "REFERENCE") {
									truncLabel = e.detail.field.name.substring(0, e.detail.field.name.length - 2);
									valueA = a[truncLabel].Name;
									valueB = b[truncLabel].Name;
								} else {
									valueA = a[e.detail.field.name];
									valueB = b[e.detail.field.name];
								}
							} else {
								if (e.detail.field.name.substring(e.detail.field.name.length - 2) == "Id" && e.detail.field.type == "REFERENCE") {
									truncLabel = e.detail.field.name.substring(0, e.detail.field.name.length - 2);
									valueA = b[truncLabel].Name;
									valueB = a[truncLabel].Name;
								} else {
									valueA = b[e.detail.field.name];
									valueB = a[e.detail.field.name];
								}
							}
							if (!valueA && !valueB) return 0;else if (!valueA) return -1;else if (!valueB) return 1;else if (valueA < valueB) return -1;else if (valueA > valueB) return 1;else return 0;
						});
					}
				}, {
					key: 'updateTables',
					value: function updateTables() {
						var _iteratorNormalCompletion2 = true;
						var _didIteratorError2 = false;
						var _iteratorError2 = undefined;

						try {
							for (var _iterator2 = Object.keys(this.statuses)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
								var status = _step2.value;

								var id = this.statuses[status];
								if (this.lineArrayByStatus[status] != null) {
									this.$[id].lines = this.lineArrayByStatus[status];
									this.$[id].fields = this.lineFields;
									this.$[id].len = this.$[id].lines.length;
								}
							}
						} catch (err) {
							_didIteratorError2 = true;
							_iteratorError2 = err;
						} finally {
							try {
								if (!_iteratorNormalCompletion2 && _iterator2.return) {
									_iterator2.return();
								}
							} finally {
								if (_didIteratorError2) {
									throw _iteratorError2;
								}
							}
						}
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['setUp(model)'];
					}
				}]);

				return DealDeskLineDetails;
			}());

			_export('DealDeskLineDetails', DealDeskLineDetails);

			Polymer(DealDeskLineDetails);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('dealdesk/sb-dd-line-table/DealDeskLineTable.js', [], function (_export, _context) {
	var _createClass, DealDeskLineTable;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('DealDeskLineTable', DealDeskLineTable = function () {
				function DealDeskLineTable() {
					_classCallCheck(this, DealDeskLineTable);
				}

				_createClass(DealDeskLineTable, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-dd-line-table', this.properties = {
							isEmpty: {
								type: Boolean,
								value: true
							},
							isCollapsed: {
								type: Boolean,
								value: false
							},
							lines: Array,
							model: Object,
							actionsDisplayed: Boolean,
							customApprove: Boolean,
							customReject: Boolean
						};
					}
				}, {
					key: 'setIcons',
					value: function setIcons() {
						if (this.id == 'penl') {
							this.customApprove = this.model.customIconUrls.activeApproveCustomIconURL ? true : false;
							this.customReject = this.model.customIconUrls.activeRejectCustomIconURL ? true : false;
						} else if (this.id == 'appl') {
							this.customApprove = this.model.customIconUrls.inactiveApproveCustomIconURL ? true : false;
							this.customReject = this.model.customIconUrls.activeRejectCustomIconURL ? true : false;
						} else if (this.id == 'rejl') {
							this.customApprove = this.model.customIconUrls.activeApproveCustomIconURL ? true : false;
							this.customReject = this.model.customIconUrls.inactiveRejectCustomIconURL ? true : false;
						} else if (this.id == 'recl') {
							this.customApprove = this.model.customIconUrls.inactiveApproveCustomIconURL ? true : false;
							this.customReject = this.model.customIconUrls.inactiveRejectCustomIconURL ? true : false;
						}
					}
				}, {
					key: 'sortLines',
					value: function sortLines(e) {
						var newSort = '';
						var target = null;
						if (e.target.classList.contains('handle') || e.target.classList.contains('header-text') || e.target.classList.contains('nomod')) {
							target = e.target.parentElement;
						} else {
							target = e.target;
						}
						var headerClassList = target.classList;
						if (headerClassList.contains('asc')) {
							newSort = 'desc';
						} else {
							newSort = 'asc';
						}
						var numChildren = target.parentElement.children.length;
						for (var i = 0; i < numChildren - 1; i++) {
							target.parentElement.children[i].classList.remove('asc');
							target.parentElement.children[i].classList.remove('desc');
						}
						target.classList.add(newSort);
						this.fire('sortLines', {
							status: this.status,
							field: e.model.__data__.field,
							headerClassList: headerClassList
						});
						this.updateLines();
					}
				}, {
					key: 'unsort',
					value: function unsort() {
						var headerRow = this.$$('.tr');
						var numFields = this.model.displayedLineFields.length;
						for (var i = 0; i < numFields; i++) {
							var targetColumn = headerRow.children[i];
							if (targetColumn.classList.contains('asc')) targetColumn.classList.remove('asc');else if (targetColumn.classList.contains('desc')) targetColumn.classList.remove('desc');
						}
					}
				}, {
					key: 'toggleTableView',
					value: function toggleTableView(e) {
						this.isCollapsed = !this.isCollapsed;
						var tableClassList = e.target.classList;
						var lineCountSpan = e.target.parentElement.getElementsByClassName('line-count')[0];
						if (tableClassList.contains('sf-icon-chevronright')) {
							lineCountSpan.hidden = false;
							tableClassList.remove('sf-icon-chevronright');
							tableClassList.add('sf-icon-chevrondown');
						} else {
							lineCountSpan.hidden = true;
							tableClassList.remove('sf-icon-chevrondown');
							tableClassList.add('sf-icon-chevronright');
						}
						this.updateLines();
					}
				}, {
					key: 'collapseTable',
					value: function collapseTable() {
						return this.isCollapsed;
					}
				}, {
					key: 'updateFieldValue',
					value: function updateFieldValue(e) {
						this.fire('updateLine', {
							line: e.model.__data__.line,
							field: e.model.__data__.field,
							value: e.target.innerHTML
						});
					}
				}, {
					key: 'hideTable',
					value: function hideTable() {
						return this.isEmpty;
					}
				}, {
					key: 'displayTable',
					value: function displayTable() {
						if (this.len == 0) {
							this.isEmpty = true;
						} else {
							this.isEmpty = false;
						}
					}
				}, {
					key: 'approveLine',
					value: function approveLine(e) {
						if (this.id != 'appl' && this.id != 'recl') {
							this.fire('approveLine', {
								line: e.target.parentElement.parentElement.line,
								index: e.target.parentElement.parentElement.index,
								classes: e.target.parentNode.parentNode.classList
							});
							this.displayTable(this.len);
							this.updateLines();
						}
					}
				}, {
					key: 'rejectLine',
					value: function rejectLine(e) {
						if (this.id != 'rejl' && this.id != 'recl') {
							this.fire('rejectLine', {
								line: e.target.parentElement.parentElement.line,
								index: e.target.parentElement.parentElement.index,
								classes: e.target.parentNode.parentNode.classList
							});
							this.displayTable(this.len);
							this.updateLines();
						}
					}
				}, {
					key: 'updateLines',
					value: function updateLines() {
						this.displayTable();
						this.$.childLines.render();
					}
				}, {
					key: 'setApproveIcon',
					value: function setApproveIcon() {
						if (this.customApprove) {
							return null;
						}

						if (this.id == 'appl' || this.id == 'recl') {
							return 'icon sf-icon-like inactive';
						} else {
							return 'icon sf-icon-like';
						}
					}
				}, {
					key: 'setRejectIcon',
					value: function setRejectIcon() {
						if (this.customReject) {
							return null;
						}

						if (this.id == 'rejl' || this.id == 'recl') {
							return 'icon sf-icon-like flip inactive';
						} else {
							return 'icon sf-icon-like flip';
						}
					}
				}, {
					key: 'setCustomApprove',
					value: function setCustomApprove() {
						if (!this.customApprove) {
							return null;
						}

						if (this.id == 'appl' || this.id == 'recl') {
							return this.model.customIconUrls.inactiveApproveCustomIconURL;
						} else {
							return this.model.customIconUrls.activeApproveCustomIconURL;
						}
					}
				}, {
					key: 'setCustomReject',
					value: function setCustomReject() {
						if (!this.customReject) {
							return null;
						}
						if (this.id == 'rejl' || this.id == 'recl') {
							return this.model.customIconUrls.inactiveRejectCustomIconURL;
						} else {
							return this.model.customIconUrls.activeRejectCustomIconURL;
						}
					}
				}, {
					key: 'getColumnSize',
					value: function getColumnSize() {
						if (this.actionsDisplayed) {
							var output = 97 / this.model.displayedLineFields.length;
							return 'width: ' + output + '%;';
						} else {
							var _output = 100 / this.model.displayedLineFields.length;
							return 'width: ' + _output + '%;';
						}
					}
				}, {
					key: 'selectLine',
					value: function selectLine(e) {
						var clickedTag = Polymer.dom(e).localTarget.tagName;
						var clickedElement = Polymer.dom(e).localTarget;
						if (clickedTag == 'DIV') {
							this.fire('selectTableLine', {
								uid: e.model.__data__.line.Id,
								line: e.model.__data__.line,
								table: this.id,
								htmlLine: clickedElement.parentElement
							});
						} else {
							if (!clickedElement.editing && !clickedElement.$$('.link')) {
								this.fire('selectTableLine', {
									uid: e.model.__data__.line.Id,
									line: e.model.__data__.line,
									table: this.id,
									htmlLine: clickedElement.parentElement.parentElement
								});
							}
						}
					}
				}, {
					key: 'isSelected',
					value: function isSelected(line) {
						if (line.selected) {
							return 'selected';
						}
						return null;
					}
				}, {
					key: 'deselectLines',
					value: function deselectLines() {
						var numLines = this.$.childLines._instances.length;
						for (var i = 0; i < numLines; i++) {
							this.$.childLines._instances[i]._children[1].classList.remove('selected');
						}
					}
				}, {
					key: 'generateObjAndRef',
					value: function generateObjAndRef(line) {
						var objAndRef = {
							lineRecord: line,
							referencedObjects: this.model.referencedObjects
						};
						return objAndRef;
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['displayTable(len)', 'setIcons(actionsDisplayed, model)'];
					}
				}]);

				return DealDeskLineTable;
			}());

			_export('DealDeskLineTable', DealDeskLineTable);

			Polymer(DealDeskLineTable);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('dealdesk/sb-dd-record-summary/DealDeskRecordSummary.js', [], function (_export, _context) {
	var _createClass, DealDeskRecordSummary;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('DealDeskRecordSummary', DealDeskRecordSummary = function () {
				function DealDeskRecordSummary() {
					_classCallCheck(this, DealDeskRecordSummary);
				}

				_createClass(DealDeskRecordSummary, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-dd-record-summary';
						this.properties = {
							model: Object
						};
					}
				}]);

				return DealDeskRecordSummary;
			}());

			_export('DealDeskRecordSummary', DealDeskRecordSummary);

			Polymer(DealDeskRecordSummary);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlYWxEZXNrUmVjb3JkU3VtbWFyeS5qcyJdLCJuYW1lcyI6WyJEZWFsRGVza1JlY29yZFN1bW1hcnkiLCJpcyIsInByb3BlcnRpZXMiLCJtb2RlbCIsIk9iamVjdCIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29DQUFhQSxxQjs7Ozs7OztzQ0FFSztBQUNoQixXQUFLQyxFQUFMLEdBQVUsc0JBQVY7QUFDQSxXQUFLQyxVQUFMLEdBQWtCO0FBQ2pCQyxjQUFPQztBQURVLE9BQWxCO0FBR0E7Ozs7Ozs7O0FBRUZDLFdBQVNMLHFCQUFUIiwiZmlsZSI6IkRlYWxEZXNrUmVjb3JkU3VtbWFyeS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEZWFsRGVza1JlY29yZFN1bW1hcnkge1xuXG5cdGJlZm9yZVJlZ2lzdGVyKCkge1xuXHRcdHRoaXMuaXMgPSAnc2ItZGQtcmVjb3JkLXN1bW1hcnknO1xuXHRcdHRoaXMucHJvcGVydGllcyA9IHtcblx0XHRcdG1vZGVsOiBPYmplY3Rcblx0XHR9XG5cdH1cbn1cblBvbHltZXIoIERlYWxEZXNrUmVjb3JkU3VtbWFyeSApO1xuIl19
'use strict';

System.register('dealdesk/sb-dd-sforce-console/DealDeskSForceConsole.js', [], function (_export, _context) {
	var _createClass, DealDeskSForceConsole;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('DealDeskSForceConsole', DealDeskSForceConsole = function () {
				function DealDeskSForceConsole() {
					_classCallCheck(this, DealDeskSForceConsole);
				}

				_createClass(DealDeskSForceConsole, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-dd-sforce-console';
						this.properties = {};
					}
				}, {
					key: 'ready',
					value: function ready() {
						this.setTabTitle();
					}
				}, {
					key: 'setTabTitle',
					value: function setTabTitle() {
						if (window.sforce && window.sforce.console != null && this.params.consoleTabTitle) {
							window.sforce.console.setTabTitle(this.params.consoleTabTitle);
						}
					}
				}]);

				return DealDeskSForceConsole;
			}());

			_export('DealDeskSForceConsole', DealDeskSForceConsole);

			Polymer(DealDeskSForceConsole);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlYWxEZXNrU0ZvcmNlQ29uc29sZS5qcyJdLCJuYW1lcyI6WyJEZWFsRGVza1NGb3JjZUNvbnNvbGUiLCJpcyIsInByb3BlcnRpZXMiLCJzZXRUYWJUaXRsZSIsIndpbmRvdyIsInNmb3JjZSIsImNvbnNvbGUiLCJwYXJhbXMiLCJjb25zb2xlVGFiVGl0bGUiLCJQb2x5bWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQ0FBYUEscUI7Ozs7Ozs7c0NBRUs7QUFDaEIsV0FBS0MsRUFBTCxHQUFVLHNCQUFWO0FBQ0EsV0FBS0MsVUFBTCxHQUFrQixFQUFsQjtBQUVBOzs7NkJBRU87QUFDUCxXQUFLQyxXQUFMO0FBQ0E7OzttQ0FFYTtBQUNiLFVBQUlDLE9BQU9DLE1BQVAsSUFBaUJELE9BQU9DLE1BQVAsQ0FBY0MsT0FBZCxJQUF5QixJQUExQyxJQUFrRCxLQUFLQyxNQUFMLENBQVlDLGVBQWxFLEVBQW1GO0FBQ2xGSixjQUFPQyxNQUFQLENBQWNDLE9BQWQsQ0FBc0JILFdBQXRCLENBQWtDLEtBQUtJLE1BQUwsQ0FBWUMsZUFBOUM7QUFDQTtBQUNEOzs7Ozs7OztBQUdGQyxXQUFTVCxxQkFBVCIsImZpbGUiOiJEZWFsRGVza1NGb3JjZUNvbnNvbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRGVhbERlc2tTRm9yY2VDb25zb2xlIHtcblxuXHRiZWZvcmVSZWdpc3RlcigpIHtcblx0XHR0aGlzLmlzID0gJ3NiLWRkLXNmb3JjZS1jb25zb2xlJztcblx0XHR0aGlzLnByb3BlcnRpZXMgPSB7XG5cdFx0fVxuXHR9XG5cblx0cmVhZHkoKSB7XG5cdFx0dGhpcy5zZXRUYWJUaXRsZSgpO1xuXHR9XG5cblx0c2V0VGFiVGl0bGUoKSB7XG5cdFx0aWYgKHdpbmRvdy5zZm9yY2UgJiYgd2luZG93LnNmb3JjZS5jb25zb2xlICE9IG51bGwgJiYgdGhpcy5wYXJhbXMuY29uc29sZVRhYlRpdGxlKSB7XG5cdFx0XHR3aW5kb3cuc2ZvcmNlLmNvbnNvbGUuc2V0VGFiVGl0bGUodGhpcy5wYXJhbXMuY29uc29sZVRhYlRpdGxlKTtcblx0XHR9XG5cdH1cblxufVxuUG9seW1lciggRGVhbERlc2tTRm9yY2VDb25zb2xlICk7XG4iXX0=
'use strict';

System.register('dealdesk/sb-deal-desk/DealDesk.js', ['common/core/Page.js'], function (_export, _context) {
	var Page, _createClass, DealDesk;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_commonCorePageJs) {
			Page = _commonCorePageJs.Page;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('DealDesk', DealDesk = function (_Page) {
				_inherits(DealDesk, _Page);

				function DealDesk() {
					_classCallCheck(this, DealDesk);

					return _possibleConstructorReturn(this, (DealDesk.__proto__ || Object.getPrototypeOf(DealDesk)).apply(this, arguments));
				}

				_createClass(DealDesk, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-deal-desk';
						this.properties = Polymer.Base.extend({
							showDetails: {
								type: Boolean,
								value: false
							},
							recordDetailUrl: {
								type: String,
								value: null
							},
							lineiFrameUrl: {
								type: String,
								value: null
							},
							isLineSelected: {
								type: Boolean,
								value: false
							},
							isIFrameRendered: {
								type: Boolean,
								value: false
							},
							lastSelected: {
								type: Object,
								value: {
									"targetLine": null,
									"uid": null
								}
							},
							statuses: {
								type: Object,
								value: {
									"Pending": "penl",
									"Approved": "appl",
									"Rejected": "rejl",
									"Recalled": "recl"
								}
							}
						}, Page.properties);
					}
				}, {
					key: 'ready',
					value: function ready() {
						this.addEventListener('setIFrame', this.setIFrame);
						this.addEventListener('showDealDesk', this.showDealDesk);
						this.addEventListener('selectTableLine', this.selectPageLine);
						this.addEventListener('selectFirst', this.selectFirst);
						this.addEventListener('addMessages', this.addMessages);
						this.addEventListener('cleanAfterSave', this.cleanAfterSave);
						this.addEventListener('reloadIFrame', this.reloadIFrame);
						this.addEventListener('newModelReceived', this.setup);
					}
				}, {
					key: 'addMessages',
					value: function addMessages(e) {
						this.$.mc.messages = e.detail.value;
					}
				}, {
					key: 'setup',
					value: function setup() {
						var _iteratorNormalCompletion = true;
						var _didIteratorError = false;
						var _iteratorError = undefined;

						try {
							for (var _iterator = Object.keys(this.statuses)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
								var status = _step.value;

								var id = this.statuses[status];
								if (this.$.ld.lineArrayByStatus[status].length > 0) {
									this.$.ld.$[id].unsort();
								}
							}
						} catch (err) {
							_didIteratorError = true;
							_iteratorError = err;
						} finally {
							try {
								if (!_iteratorNormalCompletion && _iterator.return) {
									_iterator.return();
								}
							} finally {
								if (_didIteratorError) {
									throw _iteratorError;
								}
							}
						}

						Polymer.dom.flush();
					}
				}, {
					key: 'hasModel',
					value: function hasModel() {
						if (this.dealDeskModel != null) {
							var buttonsWithoutModel = this.$.pageHeader.getElementsByClassName('withoutModel');

							var numButtons = buttonsWithoutModel.length;
							for (var i = 0; i < numButtons; i++) {
								buttonsWithoutModel[0].remove();
							}

							if (buttonsWithoutModel.length > 0) {
								var numNodes = this.$$('.withoutModel').childNodes.length;
								var removedNode = this.$$('.withoutModel');
								for (var j = 0; j < numNodes; j++) {
									removedNode.removeChild(removedNode.firstChild);
								}
							}
							return true;
						} else {
							return false;
						}
					}
				}, {
					key: 'showDealDesk',
					value: function showDealDesk() {
						this.$.dealdesk.hidden = false;
					}
				}, {
					key: 'assign',
					value: function assign() {
						if (this.lastSelected.targetLine) {
							delete this.lastSelected.targetLine.selected;
						}
						this.$.mc.hasMessage = false;
						this.$.mc.messages = [];
						this.$.dds.closeAfterSave = false;
						this.dealDeskModel.dealDeskEvent = 'Assign';
						if (this.originalOwnerId == null) {
							this.originalOwnerId = this.dealDeskModel.parentRecord.OwnerId;
						}
						this.dealDeskModel.parentRecord.OwnerId = this.dealDeskModel.currentUserId;
						this.$.dds.dealDeskModelSave = this.dealDeskModel;
					}
				}, {
					key: 'saveModel',
					value: function saveModel() {
						if (this.lastSelected.targetLine) {
							delete this.lastSelected.targetLine.selected;
						}
						this.$.mc.hasMessage = false;
						this.$.mc.messages = [];
						this.$.dds.closeAfterSave = false;
						this.dealDeskModel.dealDeskEvent = 'Save';
						this.$.dds.dealDeskModelSave = this.dealDeskModel;
					}
				}, {
					key: 'saveModelAndClose',
					value: function saveModelAndClose() {
						if (this.lastSelected.targetLine) {
							delete this.lastSelected.targetLine.selected;
						}
						this.$.mc.hasMessage = false;
						this.$.mc.messages = [];
						this.$.dds.closeAfterSave = true;
						this.dealDeskModel.dealDeskEvent = 'Save and Close';
						if (this.originalOwnerId) {
							this.dealDeskModel.parentRecord.OwnerId = this.originalOwnerId;
						}
						this.$.dds.dealDeskModelSave = this.dealDeskModel;
					}
				}, {
					key: 'cleanAfterSave',
					value: function cleanAfterSave() {
						this.lastSelected.uid = null;
						this.lastSelected.targetLine = null;
						this.lineiFrameUrl = null;
						this.isLineSelected = false;
						this.isIFrameRendered = false;
					}
				}, {
					key: 'cancel',
					value: function cancel() {
						if (this.dealDeskModel) {
							if (this.originalOwnerId) {
								this.dealDeskModel.originalOwnerId = this.originalOwnerId;
								this.dealDeskModel.parentRecord.OwnerId = this.originalOwnerId;
								this.$.dds.closeAfterSave = true;
								this.dealDeskModel.dealDeskEvent = 'Cancel';
								this.$.dds.dealDeskModelSave = this.dealDeskModel;
							} else {
								if (this.lastSelected.targetLine) {
									delete this.lastSelected.targetLine.selected;
								}
								this.$.dds.closeAfterSave = true;
								this.dealDeskModel.dealDeskEvent = 'Cancel';
								this.$.dds.dealDeskModelSave = this.dealDeskModel;
							}
						} else {
							window.history.back();
						}
					}
				}, {
					key: 'toggleView',
					value: function toggleView() {
						return this.showDetails;
					}
				}, {
					key: 'viewLines',
					value: function viewLines() {
						this.showDetails = false;
						this.$.lines.classList.add("lines-selected");
						this.$.details.classList.remove("details-selected");
					}
				}, {
					key: 'viewDetails',
					value: function viewDetails() {
						this.showDetails = true;
						this.$.details.classList.add("details-selected");
						this.$.lines.classList.remove("lines-selected");
					}
				}, {
					key: 'setIFrame',
					value: function setIFrame() {
						this.selectFirst();
						this.recordDetailUrl = window.location.origin + '/apex/RecordView?id=' + this.dealDeskModel.parentRecord.Id;
					}
				}, {
					key: 'reloadIFrame',
					value: function reloadIFrame() {
						this.$.recordiframe.contentWindow.location.reload(true);
					}
				}, {
					key: 'iFrameDisplayed',
					value: function iFrameDisplayed() {
						var detailCol = this.$$(".detail-column");
						var iframeCol = this.$$(".iframe-column");
						if (this.isIFrameRendered) {
							detailCol.classList.add("with-iframe");
							iframeCol.classList.add("display");
						} else {
							detailCol.classList.remove("with-iframe");
							iframeCol.classList.remove("display");
						}
						return this.isIFrameRendered;
					}
				}, {
					key: 'selectPageLine',
					value: function selectPageLine(e) {
						var clickedLine = e.detail.line;
						var clickedUid = e.detail.uid;
						var clickedHtml = e.detail.htmlLine;
						var clickedTable = e.detail.table;
						var prefixedLineDetailField = this.dealDeskModel.developerPrefix + 'DealDeskDetailURL__c';
						if (!this.isLineSelected) {
							this.isLineSelected = true;
							if (clickedLine[prefixedLineDetailField] != null) {
								this.isIFrameRendered = true;
								this.lineiFrameUrl = clickedLine[prefixedLineDetailField];
							}
							clickedLine.selected = true;
							clickedHtml.classList.add('selected');
							this.lastSelected['targetLine'] = clickedLine;
							this.lastSelected['uid'] = clickedUid;
							this.$.ld.$[clickedTable].$.childLines.render();
						} else if (clickedUid == this.lastSelected['uid']) {
							delete clickedLine.selected;
							clickedHtml.classList.remove('selected');
							this.lastSelected['targetLine'] = null;
							this.lastSelected['uid'] = null;
							this.isLineSelected = false;
							this.isIFrameRendered = false;
							this.$.ld.$[clickedTable].$.childLines.render();
						} else {
							delete this.lastSelected['targetLine'].selected;
							var _iteratorNormalCompletion2 = true;
							var _didIteratorError2 = false;
							var _iteratorError2 = undefined;

							try {
								for (var _iterator2 = Object.keys(this.statuses)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
									var status = _step2.value;

									var id = this.statuses[status];
									if (this.$.ld.lineArrayByStatus[status].length > 0) {
										this.$.ld.$[id].deselectLines();
									}
								}
							} catch (err) {
								_didIteratorError2 = true;
								_iteratorError2 = err;
							} finally {
								try {
									if (!_iteratorNormalCompletion2 && _iterator2.return) {
										_iterator2.return();
									}
								} finally {
									if (_didIteratorError2) {
										throw _iteratorError2;
									}
								}
							}

							if (clickedLine[prefixedLineDetailField] != null) {
								this.isIFrameRendered = true;
								this.lineiFrameUrl = clickedLine[prefixedLineDetailField];
							}
							clickedLine.selected = true;
							clickedHtml.classList.add('selected');
							this.lastSelected['targetLine'] = clickedLine;
							this.lastSelected['uid'] = clickedUid;
							this.$.ld.$[clickedTable].$.childLines.render();
						}
					}
				}, {
					key: 'selectFirst',
					value: function selectFirst() {
						if (this.$.ld.lineArrayByStatus['Pending'].length > 0) {
							var prefixedLineDetailField = this.dealDeskModel.developerPrefix + 'DealDeskDetailURL__c';
							this.lineiFrameUrl = this.$.ld.lineArrayByStatus['Pending'][0][prefixedLineDetailField];
							if (this.lineiFrameUrl) {
								this.isIFrameRendered = true;
							}
							this.isLineSelected = true;
							this.$.ld.lineArrayByStatus['Pending'][0].selected = true;
							this.lastSelected['targetLine'] = this.$.ld.lineArrayByStatus['Pending'][0];
							this.lastSelected['uid'] = this.$.ld.lineArrayByStatus['Pending'][0].Id;
						} else {
							this.isLineSelected = false;
						}
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.Page];
					}
				}]);

				return DealDesk;
			}(Page));

			_export('DealDesk', DealDesk);

			Polymer(DealDesk);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('dealdesk/services/services.js', ['dealdesk/services/sb-dd-model-read/DealDeskModelReader.js', 'dealdesk/services/sb-dd-model-save/DealDeskModelSaver.js'], function (_export, _context) {
  return {
    setters: [function (_dealdeskServicesSbDdModelReadDealDeskModelReaderJs) {}, function (_dealdeskServicesSbDdModelSaveDealDeskModelSaverJs) {}],
    execute: function () {}
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZXJ2aWNlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbXX0=
'use strict';

System.register('dealdesk/validations/validations.js', ['dealdesk/validations/sb-dd-read-validations/DealDeskReadValidations.js'], function (_export, _context) {
  return {
    setters: [function (_dealdeskValidationsSbDdReadValidationsDealDeskReadValidationsJs) {}],
    execute: function () {}
  };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2YWxpZGF0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbXX0=
'use strict';

System.register('common/core/sb-i18n/I18n.js', ['../AppContext.js', '../../Util.js'], function (_export, _context) {
	var AppContext, Util, _createClass, dateFormatCache, numberFormatCache, I18n;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_AppContextJs) {
			AppContext = _AppContextJs.AppContext;
		}, function (_UtilJs) {
			Util = _UtilJs.Util;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			dateFormatCache = new Util.Map();
			numberFormatCache = new Util.Map();

			_export('I18n', I18n = function () {
				function I18n(app) {
					_classCallCheck(this, I18n);

					this.app = app;
				}

				_createClass(I18n, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-i18n';
						this.properties = Polymer.Base.extend({
							locale: {
								type: String,
								notify: false,
								value: function value() {
									return '';
								}
							},

							key: {
								type: String,
								notify: false
							}
						}, AppContext.properties);
					}
				}, {
					key: 'attached',
					value: function attached() {
						var key = this.key ? this.key : this.innerHTML;
						if (key) this.innerHTML = this.l(key);
					}
				}, {
					key: 'l',
					value: function l(key, values) {
						var v = this.labels[key];
						return v;
					}
				}, {
					key: '_getFormat',
					value: function _getFormat(locale, key, isDate) {
						var f = null;
						if (locale && key) {
							var loc = isDate ? dateFormatCache.get(locale) : numberFormatCache.get(locale);
							if (!loc) {
								loc = new Util.Map();
								var c = isDate ? dateFormatCache : numberFormatCache;
								c.set(locale, loc);
							}

							var stringKey = JSON.stringify(key);
							f = loc.get(stringKey);
							if (!f) {
								f = isDate ? new Intl.DateTimeFormat(locale, key) : new Intl.NumberFormat(locale, key);
								loc.set(stringKey, f);
							}
						}
						return f;
					}
				}, {
					key: 'format',
					value: function format(value, options) {
						var v = '',
						    opts = options || {};

						if (value || value == 0) {
							if (value instanceof Date || opts.date) {
								var fmt = this._getFormat(this.app.user.locale, opts, true);
								if (value instanceof Date) {
									v = fmt.format(value);
								} else if (typeof value == 'number') {
									v = fmt.format(new Date(value));
								} else if (typeof value === 'string') {
									var pos = value.indexOf('T');
									if (pos >= 0) v = fmt.format(Date.parse(value));else {
											var ymd = value.split('-');
											if (ymd && ymd.length == 3) v = fmt.format(new Date(ymd[0], ymd[1] - 1, ymd[2]));
										}
								}
							} else {
								var _fmt = this._getFormat(this.app.user.locale, opts, false);
								v = _fmt.format(value);
							}
						}
						return v;
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.AppContext];
					}
				}]);

				return I18n;
			}());

			_export('I18n', I18n);

			Polymer(I18n);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/core/sb-loading-spinner/LoadingSpinner.js', [], function (_export, _context) {
	var _createClass, LoadingSpinner;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('LoadingSpinner', LoadingSpinner = function () {
				function LoadingSpinner() {
					_classCallCheck(this, LoadingSpinner);
				}

				_createClass(LoadingSpinner, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-loading-spinner';
						this.properties = {
							show: {
								type: Boolean,
								value: false
							}
						};
					}
				}]);

				return LoadingSpinner;
			}());

			_export('LoadingSpinner', LoadingSpinner);

			Polymer(LoadingSpinner);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxvYWRpbmdTcGlubmVyLmpzIl0sIm5hbWVzIjpbIkxvYWRpbmdTcGlubmVyIiwiaXMiLCJwcm9wZXJ0aWVzIiwic2hvdyIsInR5cGUiLCJCb29sZWFuIiwidmFsdWUiLCJQb2x5bWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkFBYUEsYzs7Ozs7OztzQ0FFSztBQUNoQixXQUFLQyxFQUFMLEdBQVUsb0JBQVY7QUFDQSxXQUFLQyxVQUFMLEdBQWtCO0FBQ2pCQyxhQUFNO0FBQ0xDLGNBQU1DLE9BREQ7QUFFTEMsZUFBTztBQUZGO0FBRFcsT0FBbEI7QUFNQTs7Ozs7Ozs7QUFHRkMsV0FBU1AsY0FBVCIsImZpbGUiOiJMb2FkaW5nU3Bpbm5lci5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBMb2FkaW5nU3Bpbm5lciB7XG5cblx0YmVmb3JlUmVnaXN0ZXIoKSB7XG5cdFx0dGhpcy5pcyA9ICdzYi1sb2FkaW5nLXNwaW5uZXInO1xuXHRcdHRoaXMucHJvcGVydGllcyA9IHtcblx0XHRcdHNob3c6IHtcblx0XHRcdFx0dHlwZTogQm9vbGVhbixcblx0XHRcdFx0dmFsdWU6IGZhbHNlXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cblBvbHltZXIoIExvYWRpbmdTcGlubmVyICk7Il19
'use strict';

System.register('common/core/sb-message-container/MessageContainer.js', [], function (_export, _context) {
    var _createClass, MessageContainer;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('MessageContainer', MessageContainer = function () {
                function MessageContainer() {
                    _classCallCheck(this, MessageContainer);
                }

                _createClass(MessageContainer, [{
                    key: 'beforeRegister',
                    value: function beforeRegister() {
                        this.is = 'sb-message-container';
                        this.properties = {
                            hasMessage: {
                                type: Boolean,
                                value: false
                            },
                            messages: {
                                type: Array,
                                value: []
                            }
                        };
                    }
                }, {
                    key: 'model',
                    value: function model() {
                        if (this.error.validations) {
                            for (var i = 0; i < this.error.validations.length; i++) {
                                this.push("messages", this.error.validations[i]);
                            }
                        } else {
                            this.push("messages", this.error.message);
                        }
                        this.hasMessage = true;
                    }
                }, {
                    key: 'validation',
                    value: function validation() {
                        if (this.messages.length > 0) {
                            this.hasMessage = true;
                        }
                    }
                }, {
                    key: 'observers',
                    get: function get() {
                        return ['model(error)', 'validation(messages)'];
                    }
                }]);

                return MessageContainer;
            }());

            _export('MessageContainer', MessageContainer);

            Polymer(MessageContainer);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lc3NhZ2VDb250YWluZXIuanMiXSwibmFtZXMiOlsiTWVzc2FnZUNvbnRhaW5lciIsImlzIiwicHJvcGVydGllcyIsImhhc01lc3NhZ2UiLCJ0eXBlIiwiQm9vbGVhbiIsInZhbHVlIiwibWVzc2FnZXMiLCJBcnJheSIsImVycm9yIiwidmFsaWRhdGlvbnMiLCJpIiwibGVuZ3RoIiwicHVzaCIsIm1lc3NhZ2UiLCJQb2x5bWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3Q0FBYUEsZ0I7Ozs7Ozs7cURBRVE7QUFDYiw2QkFBS0MsRUFBTCxHQUFVLHNCQUFWO0FBQ0EsNkJBQUtDLFVBQUwsR0FBa0I7QUFDZEMsd0NBQVk7QUFDUkMsc0NBQU1DLE9BREU7QUFFUkMsdUNBQU87QUFGQyw2QkFERTtBQUtkQyxzQ0FBVTtBQUNOSCxzQ0FBTUksS0FEQTtBQUVORix1Q0FBTztBQUZEO0FBTEkseUJBQWxCO0FBVUg7Ozs0Q0FNTztBQUNKLDRCQUFJLEtBQUtHLEtBQUwsQ0FBV0MsV0FBZixFQUE0QjtBQUN4QixpQ0FBSyxJQUFJQyxJQUFFLENBQVgsRUFBY0EsSUFBRSxLQUFLRixLQUFMLENBQVdDLFdBQVgsQ0FBdUJFLE1BQXZDLEVBQStDRCxHQUEvQyxFQUFvRDtBQUNoRCxxQ0FBS0UsSUFBTCxDQUFVLFVBQVYsRUFBc0IsS0FBS0osS0FBTCxDQUFXQyxXQUFYLENBQXVCQyxDQUF2QixDQUF0QjtBQUNIO0FBQ0oseUJBSkQsTUFJTztBQUNILGlDQUFLRSxJQUFMLENBQVUsVUFBVixFQUFzQixLQUFLSixLQUFMLENBQVdLLE9BQWpDO0FBQ0g7QUFDRCw2QkFBS1gsVUFBTCxHQUFrQixJQUFsQjtBQUNIOzs7aURBRVk7QUFDVCw0QkFBSSxLQUFLSSxRQUFMLENBQWNLLE1BQWQsR0FBdUIsQ0FBM0IsRUFBOEI7QUFDMUIsaUNBQUtULFVBQUwsR0FBa0IsSUFBbEI7QUFDSDtBQUNKOzs7d0NBbkJlO0FBQ1osK0JBQU0sQ0FBQyxjQUFELEVBQWlCLHNCQUFqQixDQUFOO0FBQ0g7Ozs7Ozs7O0FBb0JMWSxvQkFBU2YsZ0JBQVQiLCJmaWxlIjoiTWVzc2FnZUNvbnRhaW5lci5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBNZXNzYWdlQ29udGFpbmVyIHtcblxuICAgIGJlZm9yZVJlZ2lzdGVyKCkge1xuICAgICAgICB0aGlzLmlzID0gJ3NiLW1lc3NhZ2UtY29udGFpbmVyJztcbiAgICAgICAgdGhpcy5wcm9wZXJ0aWVzID0ge1xuICAgICAgICAgICAgaGFzTWVzc2FnZToge1xuICAgICAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICAgICAgdmFsdWU6IGZhbHNlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWVzc2FnZXM6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBBcnJheSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogW11cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICAgIHJldHVyblsnbW9kZWwoZXJyb3IpJywgJ3ZhbGlkYXRpb24obWVzc2FnZXMpJ107XG4gICAgfVxuXG4gICAgbW9kZWwoKSB7XG4gICAgICAgIGlmICh0aGlzLmVycm9yLnZhbGlkYXRpb25zKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpPTA7IGk8dGhpcy5lcnJvci52YWxpZGF0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRoaXMucHVzaChcIm1lc3NhZ2VzXCIsIHRoaXMuZXJyb3IudmFsaWRhdGlvbnNbaV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wdXNoKFwibWVzc2FnZXNcIiwgdGhpcy5lcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhhc01lc3NhZ2UgPSB0cnVlO1xuICAgIH1cblxuICAgIHZhbGlkYXRpb24oKSB7XG4gICAgICAgIGlmICh0aGlzLm1lc3NhZ2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuaGFzTWVzc2FnZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblBvbHltZXIoIE1lc3NhZ2VDb250YWluZXIgKTsiXX0=
'use strict';

System.register('common/core/sb-page-container/PageContainer.js', [], function (_export, _context) {
	var _createClass, bpXS, bpS, bpM, bpL, bpXL, mqXS, mqSOnly, mqMOnly, mqLOnly, mqXL, PageContainer;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			bpXS = 0;
			bpS = 480;
			bpM = 768;
			bpL = 1024;
			bpXL = 1200;
			mqXS = window.matchMedia('screen and (max-width: ' + bpS + 'px)');
			mqSOnly = window.matchMedia('screen and (min-width: ' + (bpS + 1) + 'px) and (max-width: ' + bpM + 'px)');
			mqMOnly = window.matchMedia('screen and (min-width: ' + (bpM + 1) + 'px) and (max-width: ' + bpL + 'px)');
			mqLOnly = window.matchMedia('screen and (min-width: ' + (bpL + 1) + 'px) and (max-width: ' + bpXL + 'px)');
			mqXL = window.matchMedia('screen and (min-width: ' + bpXL + 'px)');

			_export('PageContainer', PageContainer = function () {
				function PageContainer() {
					_classCallCheck(this, PageContainer);
				}

				_createClass(PageContainer, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-page-container';
						this.properties = {
							route: String,

							allRoutes: {
								type: Object,
								value: function value() {
									return {};
								},
								observer: '_allRoutesChanged'
							},

							viewport: {
								type: Object,
								observer: '_viewportChanged',
								value: function value() {
									return this._buildViewport(mqXS.matches, mqSOnly.matches, mqMOnly.matches, mqLOnly.matches, mqXL.matches);
								}
							}
						};
					}
				}, {
					key: '_buildViewport',
					value: function _buildViewport(xs, s, m, l, xl) {
						var v = {
							XS: {},
							S: {},
							M: {},
							L: {},
							XL: {},
							current: function current() {
								if (this.XS.only) return { size: 'XS', window: [bpXS, bpS] };
								if (this.S.only) return { size: 'S', window: [bpS + 1, bpM] };
								if (this.M.only) return { size: 'M', window: [bpM + 1, bpL] };
								if (this.L.only) return { size: 'L', window: [bpL + 1, bpXL] };
								if (this.XL.only) return { size: 'XL', window: [bpXL, 10000] };
							}
						};

						v.XS.only = xs && !s && !m && !l && !xl;
						v.XS.down = v.XS.only;
						v.XS.up = xs || s || m || l || xl;

						v.S.only = !xs && s && !m && !l && !xl;
						v.S.down = (xs || s) && !m && !l && !xl;
						v.S.up = !xs && (s || m || l || xl);

						v.M.only = !xs && !s && m && !l && !xl;
						v.M.down = (xs || s || m) && !l && !xl;
						v.M.up = !xs && !s && (m || l || xl);

						v.L.only = !xs && !s && !m && l && !xl;
						v.L.down = (xs || s || m || l) && !xl;
						v.L.up = !xs && !s && !m && (l || xl);

						v.XL.only = !xs && !s && !m && !l && xl;
						v.XL.down = true;
						v.XL.up = v.XL.only;

						return v;
					}
				}, {
					key: 'ready',
					value: function ready() {
						this._setupViewportListeners();
					}
				}, {
					key: 'renderPage',
					value: function renderPage(e, detail, sender) {

						if (detail.route.comp && detail.route.comp != '') {
							var ctx = {};
							ctx.params = detail.params;
							ctx.pathParams = detail.pathParams;

							var html = function (detail, ctx) {
								return '<' + detail.route.comp + ' ctx=\'' + JSON.stringify(ctx) + '\'></' + detail.route.comp + '>';
							}.bind(this)(detail, ctx);
							if (detail.route.mod) {
								System.import(detail.route.mod).then(function (m) {
									this.$.content.innerHTML = html;
									this._viewportChanged();
									Polymer.updateStyles();
								}.bind(this)).catch(function (err) {
									console.log(err);
									console.log(err.originalErr);
								});
							} else {
								this.$.content.innerHTML = html;
								Polymer.updateStyles();
							}
						} else {
							this.$.ajax.url = detail.route.view;
							if (this.$.ajax.url) this.$.ajax.go();
						}
					}
				}, {
					key: '_allRoutesChanged',
					value: function _allRoutesChanged(nv) {
						this.$.router.init(nv);
					}
				}, {
					key: '_viewportChanged',
					value: function _viewportChanged() {
						var el = this.$.content.querySelector('*:first-child');
						if (el) el.viewport = this.viewport;

						setTimeout(function () {
							this.fire('sb-viewport-changed', { viewport: this.viewport });
						}.bind(this), 10);
					}
				}, {
					key: '_setupViewportListeners',
					value: function _setupViewportListeners() {
						var self = this;
						function build(m) {
							if (m.matches) self.viewport = self._buildViewport(mqXS.matches, mqSOnly.matches, mqMOnly.matches, mqLOnly.matches, mqXL.matches);
						};

						mqXS.addListener(build);
						mqSOnly.addListener(build);
						mqMOnly.addListener(build);
						mqLOnly.addListener(build);
						mqXL.addListener(build);
					}
				}]);

				return PageContainer;
			}());

			_export('PageContainer', PageContainer);

			PageContainer.domId = 'sbPageContainer';

			Polymer(PageContainer);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/core/sb-page-header/PageHeader.js', ['common/core/sb-page-container/PageContainer.js'], function (_export, _context) {
	var PageContainer, _createClass, PageHeader;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_commonCoreSbPageContainerPageContainerJs) {
			PageContainer = _commonCoreSbPageContainerPageContainerJs.PageContainer;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('PageHeader', PageHeader = function () {
				function PageHeader() {
					_classCallCheck(this, PageHeader);
				}

				_createClass(PageHeader, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-page-header';
						this.properties = {
							viewport: {
								type: Object,
								observer: '_viewportChanged'
							},
							showMenu: {
								type: Boolean,
								value: function value() {
									return true;
								}
							}
						};
					}
				}, {
					key: 'ready',
					value: function ready() {
						var con = document.querySelector('#' + PageContainer.domId);
						if (con) {
							con.addEventListener('sb-viewport-changed', function (e) {
								this.viewport = e.detail.viewport;
							}.bind(this));
						}
					}
				}, {
					key: '_openMenu',
					value: function _openMenu(e) {
						var rect = e.currentTarget.getBoundingClientRect(),
						    bs = this.$.buttons.style;

						bs.top = rect.bottom + 2 + 'px';
						bs.right = window.innerWidth - rect.right + 'px';
						this.$.buttons.classList.add('open');
						this.$.menuMask.style.display = 'block';
					}
				}, {
					key: '_closeMenu',
					value: function _closeMenu() {
						this.$.buttons.classList.remove('open');
						this.$.menuMask.style.display = 'none';
					}
				}, {
					key: '_viewportChanged',
					value: function _viewportChanged() {
						this.showMenu = this.viewport && this.viewport.M.up ? false : true;
						if (this.showMenu) this.$.buttons.classList.remove('normal');else this.$.buttons.classList.add('normal');
					}
				}]);

				return PageHeader;
			}());

			_export('PageHeader', PageHeader);

			Polymer(PageHeader);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhZ2VIZWFkZXIuanMiXSwibmFtZXMiOlsiUGFnZUNvbnRhaW5lciIsIlBhZ2VIZWFkZXIiLCJpcyIsInByb3BlcnRpZXMiLCJ2aWV3cG9ydCIsInR5cGUiLCJPYmplY3QiLCJvYnNlcnZlciIsInNob3dNZW51IiwiQm9vbGVhbiIsInZhbHVlIiwiY29uIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZG9tSWQiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImRldGFpbCIsImJpbmQiLCJyZWN0IiwiY3VycmVudFRhcmdldCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImJzIiwiJCIsImJ1dHRvbnMiLCJzdHlsZSIsInRvcCIsImJvdHRvbSIsInJpZ2h0Iiwid2luZG93IiwiaW5uZXJXaWR0aCIsImNsYXNzTGlzdCIsImFkZCIsIm1lbnVNYXNrIiwiZGlzcGxheSIsInJlbW92ZSIsIk0iLCJ1cCIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBUUEsZ0IsNkNBQUFBLGE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFFS0MsVTs7Ozs7OztzQ0FFSztBQUNoQixXQUFLQyxFQUFMLEdBQVUsZ0JBQVY7QUFDQSxXQUFLQyxVQUFMLEdBQWtCO0FBS2pCQyxpQkFBVTtBQUNUQyxjQUFNQyxNQURHO0FBRVRDLGtCQUFVO0FBRkQsUUFMTztBQVNqQkMsaUJBQVU7QUFDVEgsY0FBTUksT0FERztBQUVUQyxlQUFPLGlCQUFXO0FBQUUsZ0JBQU8sSUFBUDtBQUFjO0FBRnpCO0FBVE8sT0FBbEI7QUFjQTs7OzZCQUVPO0FBQ1AsVUFBSUMsTUFBTUMsU0FBU0MsYUFBVCxDQUF3QixNQUFNYixjQUFjYyxLQUE1QyxDQUFWO0FBQ0EsVUFBSUgsR0FBSixFQUFVO0FBQ1RBLFdBQUlJLGdCQUFKLENBQXNCLHFCQUF0QixFQUE2QyxVQUFTQyxDQUFULEVBQVk7QUFDeEQsYUFBS1osUUFBTCxHQUFnQlksRUFBRUMsTUFBRixDQUFTYixRQUF6QjtBQUNBLFFBRjRDLENBRTNDYyxJQUYyQyxDQUV0QyxJQUZzQyxDQUE3QztBQUdBO0FBQ0Q7OzsrQkFFU0YsQyxFQUFHO0FBQ1osVUFBSUcsT0FBT0gsRUFBRUksYUFBRixDQUFnQkMscUJBQWhCLEVBQVg7QUFBQSxVQUNFQyxLQUFLLEtBQUtDLENBQUwsQ0FBT0MsT0FBUCxDQUFlQyxLQUR0Qjs7QUFHQUgsU0FBR0ksR0FBSCxHQUFVUCxLQUFLUSxNQUFMLEdBQVksQ0FBYixHQUFrQixJQUEzQjtBQUNBTCxTQUFHTSxLQUFILEdBQVlDLE9BQU9DLFVBQVAsR0FBb0JYLEtBQUtTLEtBQTFCLEdBQW1DLElBQTlDO0FBQ0EsV0FBS0wsQ0FBTCxDQUFPQyxPQUFQLENBQWVPLFNBQWYsQ0FBeUJDLEdBQXpCLENBQThCLE1BQTlCO0FBQ0EsV0FBS1QsQ0FBTCxDQUFPVSxRQUFQLENBQWdCUixLQUFoQixDQUFzQlMsT0FBdEIsR0FBZ0MsT0FBaEM7QUFDQTs7O2tDQUVZO0FBQ1osV0FBS1gsQ0FBTCxDQUFPQyxPQUFQLENBQWVPLFNBQWYsQ0FBeUJJLE1BQXpCLENBQWlDLE1BQWpDO0FBQ0EsV0FBS1osQ0FBTCxDQUFPVSxRQUFQLENBQWdCUixLQUFoQixDQUFzQlMsT0FBdEIsR0FBZ0MsTUFBaEM7QUFDQTs7O3dDQUVrQjtBQUVsQixXQUFLMUIsUUFBTCxHQUFnQixLQUFLSixRQUFMLElBQWlCLEtBQUtBLFFBQUwsQ0FBY2dDLENBQWQsQ0FBZ0JDLEVBQWpDLEdBQXNDLEtBQXRDLEdBQThDLElBQTlEO0FBQ0EsVUFBSSxLQUFLN0IsUUFBVCxFQUNDLEtBQUtlLENBQUwsQ0FBT0MsT0FBUCxDQUFlTyxTQUFmLENBQXlCSSxNQUF6QixDQUFpQyxRQUFqQyxFQURELEtBR0MsS0FBS1osQ0FBTCxDQUFPQyxPQUFQLENBQWVPLFNBQWYsQ0FBeUJDLEdBQXpCLENBQThCLFFBQTlCO0FBQ0Q7Ozs7Ozs7O0FBR0ZNLFdBQVNyQyxVQUFUIiwiZmlsZSI6IlBhZ2VIZWFkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1BhZ2VDb250YWluZXJ9IGZyb20gJ2NvbW1vbi9jb3JlL3NiLXBhZ2UtY29udGFpbmVyL1BhZ2VDb250YWluZXIuanMnO1xuXG5leHBvcnQgY2xhc3MgUGFnZUhlYWRlciB7XG5cblx0YmVmb3JlUmVnaXN0ZXIoKSB7XG5cdFx0dGhpcy5pcyA9ICdzYi1wYWdlLWhlYWRlcic7XG5cdFx0dGhpcy5wcm9wZXJ0aWVzID0ge1xuXHRcdFx0LyoqXG5cdFx0XHQgKiBWaWV3cG9ydCBpbmZvcm1hdGlvbiBmb3IgdGhpbmdzIGxpa2UgVC1zaGlydCBzaXplIChTLCBNLCBMLCBYTClcblx0XHRcdCAqIEB0eXBlIHtPYmplY3R9XG5cdFx0XHQgKi9cblx0XHRcdHZpZXdwb3J0OiB7XG5cdFx0XHRcdHR5cGU6IE9iamVjdCxcblx0XHRcdFx0b2JzZXJ2ZXI6ICdfdmlld3BvcnRDaGFuZ2VkJ1xuXHRcdFx0fSxcblx0XHRcdHNob3dNZW51OiB7XG5cdFx0XHRcdHR5cGU6IEJvb2xlYW4sXG5cdFx0XHRcdHZhbHVlOiBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZWFkeSgpIHtcblx0XHR2YXIgY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvciggJyMnICsgUGFnZUNvbnRhaW5lci5kb21JZCApO1xuXHRcdGlmKCBjb24gKSB7XG5cdFx0XHRjb24uYWRkRXZlbnRMaXN0ZW5lciggJ3NiLXZpZXdwb3J0LWNoYW5nZWQnLCBmdW5jdGlvbihlKSB7XG5cdFx0XHRcdHRoaXMudmlld3BvcnQgPSBlLmRldGFpbC52aWV3cG9ydDtcblx0XHRcdH0uYmluZCh0aGlzKSk7XG5cdFx0fVxuXHR9XG5cblx0X29wZW5NZW51KGUpIHtcblx0XHRsZXQgcmVjdCA9IGUuY3VycmVudFRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKSxcblx0XHRcdFx0YnMgPSB0aGlzLiQuYnV0dG9ucy5zdHlsZTtcblxuXHRcdGJzLnRvcCA9IChyZWN0LmJvdHRvbSsyKSArICdweCc7XG5cdFx0YnMucmlnaHQgPSAod2luZG93LmlubmVyV2lkdGggLSByZWN0LnJpZ2h0KSArICdweCc7XG5cdFx0dGhpcy4kLmJ1dHRvbnMuY2xhc3NMaXN0LmFkZCggJ29wZW4nICk7XG5cdFx0dGhpcy4kLm1lbnVNYXNrLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXHR9XG5cblx0X2Nsb3NlTWVudSgpIHtcblx0XHR0aGlzLiQuYnV0dG9ucy5jbGFzc0xpc3QucmVtb3ZlKCAnb3BlbicgKTtcblx0XHR0aGlzLiQubWVudU1hc2suc3R5bGUuZGlzcGxheSA9ICdub25lJztcblx0fVxuXG5cdF92aWV3cG9ydENoYW5nZWQoKSB7XG5cdFx0Ly8gbmVlZCBhbiBleHBsaWNpdCBib29sZWFuICsgQ1NTIGhlcmUgc28gd2UgZG9uJ3QgaGF2ZSByYWNlIGNvbmRpdGlvbiB3aXRoIGRvbS1pZlxuXHRcdHRoaXMuc2hvd01lbnUgPSB0aGlzLnZpZXdwb3J0ICYmIHRoaXMudmlld3BvcnQuTS51cCA/IGZhbHNlIDogdHJ1ZTtcblx0XHRpZiggdGhpcy5zaG93TWVudSApXG5cdFx0XHR0aGlzLiQuYnV0dG9ucy5jbGFzc0xpc3QucmVtb3ZlKCAnbm9ybWFsJyApO1xuXHRcdGVsc2Vcblx0XHRcdHRoaXMuJC5idXR0b25zLmNsYXNzTGlzdC5hZGQoICdub3JtYWwnICk7XG5cdH1cbn1cblxuUG9seW1lciggUGFnZUhlYWRlciApO1xuIl19
'use strict';

System.register('common/core/sb-router/Router.js', [], function (_export, _context) {
	var _createClass, private_router, routes, PATH_PARAM_REGEX, Router;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			private_router = void 0;
			routes = void 0;
			PATH_PARAM_REGEX = /:[a-z0-9_$]*/g;

			_export('Router', Router = function () {
				function Router() {
					_classCallCheck(this, Router);
				}

				_createClass(Router, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-router';
						this.properties = {
							autoHash: {
								type: Boolean,
								value: function value() {
									return false;
								}
							},

							route: {
								type: String,
								observer: 'routeChanged'
							},

							router: {
								type: Object,
								readOnly: true,
								value: function value() {
									if (!private_router) {
										private_router = new window.Router();
										private_router.init();
									}
									return private_router;
								}
							}
						};
					}
				}, {
					key: 'init',
					value: function init(allRoutes) {
						var _this = this;

						var modules = Object.keys(allRoutes);

						if (!routes && modules.length) {
							routes = allRoutes;
							var router = this.router,
							    len = modules ? modules.length : 0;

							for (var i = 0; i < len; i++) {
								var mod = modules[i],
								    modulePaths = Object.keys(routes[mod]),
								    pLen = modulePaths ? modulePaths.length : 0;

								var _loop = function _loop(p) {
									var path = modulePaths[p],
									    pathParams = path ? path.match(PATH_PARAM_REGEX) : null,
									    paramNames = [],
									    paramMap = {};

									if (pathParams) {
										paramNames = pathParams.map(function (val, index) {
											var p = val.substring(1);
											paramMap[p] = null;
											return p;
										});
									}

									router.on(mod + path, function (m, p, paramNames, paramMap) {
										var pathParams = JSON.parse(JSON.stringify(paramMap)),
										    params = Array.prototype.slice.call(arguments, 4),
										    paramsLen = params ? params.length : 0;

										for (var j = 0; j < paramsLen; j++) {
											pathParams[paramNames[j]] = params[j];
										}this.routeHandler(m, p, pathParams);
									}.bind(_this, mod, path, paramNames, paramMap));
								};

								for (var p = 0; p < pLen; p++) {
									_loop(p);
								}
							}

							router.on('/*', function () {
								console.log('got an unknown route. need to show 404 here');
							});

							router.on('', function () {
								console.log('Got the <empty> route');
							});
						}
					}
				}, {
					key: 'routeHandler',
					value: function routeHandler(mod, path, params) {
						var hash = window.location.hash.slice(1),
						    pos = hash.indexOf('?'),
						    qsParams = {};

						if (pos >= 0 && hash.length > pos) {
							qsParams = queryString.parse(hash.substring(pos + 1));
						}
						this.fire('sb-route-complete', { mod: mod, path: path, route: routes[mod][path], pathParams: params, params: qsParams });
					}
				}, {
					key: 'routeChanged',
					value: function routeChanged(nv, ov) {
						if (this.autoHash && nv) {
							var same = window.location.hash.slice(1) == this.route;
							window.location.hash = this.route;

							if (same) this.router.dispatch('on', nv);
						}
					}
				}]);

				return Router;
			}());

			_export('Router', Router);

			Polymer(Router);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJvdXRlci5qcyJdLCJuYW1lcyI6WyJwcml2YXRlX3JvdXRlciIsInJvdXRlcyIsIlBBVEhfUEFSQU1fUkVHRVgiLCJSb3V0ZXIiLCJpcyIsInByb3BlcnRpZXMiLCJhdXRvSGFzaCIsInR5cGUiLCJCb29sZWFuIiwidmFsdWUiLCJyb3V0ZSIsIlN0cmluZyIsIm9ic2VydmVyIiwicm91dGVyIiwiT2JqZWN0IiwicmVhZE9ubHkiLCJ3aW5kb3ciLCJpbml0IiwiYWxsUm91dGVzIiwibW9kdWxlcyIsImtleXMiLCJsZW5ndGgiLCJsZW4iLCJpIiwibW9kIiwibW9kdWxlUGF0aHMiLCJwTGVuIiwicCIsInBhdGgiLCJwYXRoUGFyYW1zIiwibWF0Y2giLCJwYXJhbU5hbWVzIiwicGFyYW1NYXAiLCJtYXAiLCJ2YWwiLCJpbmRleCIsInN1YnN0cmluZyIsIm9uIiwibSIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInBhcmFtcyIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwicGFyYW1zTGVuIiwiaiIsInJvdXRlSGFuZGxlciIsImJpbmQiLCJjb25zb2xlIiwibG9nIiwiaGFzaCIsImxvY2F0aW9uIiwicG9zIiwiaW5kZXhPZiIsInFzUGFyYW1zIiwicXVlcnlTdHJpbmciLCJmaXJlIiwibnYiLCJvdiIsInNhbWUiLCJkaXNwYXRjaCIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUlBLGlCO0FBQ0ZDLFM7QUFDQUMsbUIsR0FBbUIsZTs7cUJBRVJDLE07Ozs7Ozs7c0NBRUs7QUFDaEIsV0FBS0MsRUFBTCxHQUFVLFdBQVY7QUFDQSxXQUFLQyxVQUFMLEdBQWtCO0FBQ2pCQyxpQkFBVTtBQUNUQyxjQUFNQyxPQURHO0FBRVRDLGVBQU8saUJBQVc7QUFBRSxnQkFBTyxLQUFQO0FBQWU7QUFGMUIsUUFETzs7QUFNakJDLGNBQU87QUFDTkgsY0FBTUksTUFEQTtBQUVOQyxrQkFBVTtBQUZKLFFBTlU7O0FBV2pCQyxlQUFRO0FBQ1BOLGNBQU1PLE1BREM7QUFFUEMsa0JBQVUsSUFGSDtBQUdQTixlQUFPLGlCQUFXO0FBQ2pCLGFBQUksQ0FBQ1QsY0FBTCxFQUFzQjtBQUNyQkEsMkJBQWlCLElBQUlnQixPQUFPYixNQUFYLEVBQWpCO0FBQ0FILHlCQUFlaUIsSUFBZjtBQUNBO0FBQ0QsZ0JBQU9qQixjQUFQO0FBQ0E7QUFUTTtBQVhTLE9BQWxCO0FBdUJBOzs7MEJBRUtrQixTLEVBQVk7QUFBQTs7QUFDakIsVUFBSUMsVUFBVUwsT0FBT00sSUFBUCxDQUFZRixTQUFaLENBQWQ7O0FBRUEsVUFBSSxDQUFDakIsTUFBRCxJQUFXa0IsUUFBUUUsTUFBdkIsRUFBZ0M7QUFDL0JwQixnQkFBU2lCLFNBQVQ7QUFDQSxXQUFJTCxTQUFTLEtBQUtBLE1BQWxCO0FBQUEsV0FDQVMsTUFBTUgsVUFBVUEsUUFBUUUsTUFBbEIsR0FBMkIsQ0FEakM7O0FBSUEsWUFBSyxJQUFJRSxJQUFFLENBQVgsRUFBY0EsSUFBSUQsR0FBbEIsRUFBdUJDLEdBQXZCLEVBQTZCO0FBQzVCLFlBQUlDLE1BQU1MLFFBQVFJLENBQVIsQ0FBVjtBQUFBLFlBQ0FFLGNBQWNYLE9BQU9NLElBQVAsQ0FBYW5CLE9BQU91QixHQUFQLENBQWIsQ0FEZDtBQUFBLFlBRUFFLE9BQU9ELGNBQWNBLFlBQVlKLE1BQTFCLEdBQW1DLENBRjFDOztBQUQ0QixtQ0FLbkJNLENBTG1CO0FBTTNCLGFBQUlDLE9BQU9ILFlBQVlFLENBQVosQ0FBWDtBQUFBLGFBQ0FFLGFBQWFELE9BQU9BLEtBQUtFLEtBQUwsQ0FBWTVCLGdCQUFaLENBQVAsR0FBd0MsSUFEckQ7QUFBQSxhQUVBNkIsYUFBYSxFQUZiO0FBQUEsYUFHQUMsV0FBVyxFQUhYOztBQU1BLGFBQUlILFVBQUosRUFBaUI7QUFDaEJFLHVCQUFhRixXQUFXSSxHQUFYLENBQWdCLFVBQVVDLEdBQVYsRUFBZUMsS0FBZixFQUF1QjtBQUNuRCxlQUFJUixJQUFJTyxJQUFJRSxTQUFKLENBQWMsQ0FBZCxDQUFSO0FBQ0FKLG9CQUFTTCxDQUFULElBQWMsSUFBZDtBQUNBLGtCQUFPQSxDQUFQO0FBQ0EsV0FKWSxDQUFiO0FBS0E7O0FBRURkLGdCQUFPd0IsRUFBUCxDQUFXYixNQUFNSSxJQUFqQixFQUF1QixVQUFVVSxDQUFWLEVBQWFYLENBQWIsRUFBZ0JJLFVBQWhCLEVBQTRCQyxRQUE1QixFQUF1QztBQUM3RCxjQUFJSCxhQUFhVSxLQUFLQyxLQUFMLENBQVdELEtBQUtFLFNBQUwsQ0FBZ0JULFFBQWhCLENBQVgsQ0FBakI7QUFBQSxjQUNBVSxTQUFTQyxNQUFNQyxTQUFOLENBQWdCQyxLQUFoQixDQUFzQkMsSUFBdEIsQ0FBMkJDLFNBQTNCLEVBQXFDLENBQXJDLENBRFQ7QUFBQSxjQUVBQyxZQUFZTixTQUFTQSxPQUFPckIsTUFBaEIsR0FBeUIsQ0FGckM7O0FBS0EsZUFBSyxJQUFJNEIsSUFBRSxDQUFYLEVBQWNBLElBQUlELFNBQWxCLEVBQTZCQyxHQUE3QjtBQUNBcEIsc0JBQVdFLFdBQVdrQixDQUFYLENBQVgsSUFBNEJQLE9BQU9PLENBQVAsQ0FBNUI7QUFEQSxXQUdBLEtBQUtDLFlBQUwsQ0FBbUJaLENBQW5CLEVBQXNCWCxDQUF0QixFQUF5QkUsVUFBekI7QUFDQSxVQVZzQixDQVVyQnNCLElBVnFCLFFBVVYzQixHQVZVLEVBVUxJLElBVkssRUFVQ0csVUFWRCxFQVVhQyxRQVZiLENBQXZCO0FBcEIyQjs7QUFLNUIsYUFBSyxJQUFJTCxJQUFFLENBQVgsRUFBY0EsSUFBSUQsSUFBbEIsRUFBd0JDLEdBQXhCLEVBQThCO0FBQUEsZUFBckJBLENBQXFCO0FBMEI3QjtBQUNEOztBQUVEZCxjQUFPd0IsRUFBUCxDQUFXLElBQVgsRUFBaUIsWUFBVztBQUMzQmUsZ0JBQVFDLEdBQVIsQ0FBYSw2Q0FBYjtBQUNBLFFBRkQ7O0FBSUF4QyxjQUFPd0IsRUFBUCxDQUFXLEVBQVgsRUFBZSxZQUFXO0FBQ3pCZSxnQkFBUUMsR0FBUixDQUFhLHVCQUFiO0FBQ0EsUUFGRDtBQUdBO0FBQ0Q7OztrQ0FHYTdCLEcsRUFBS0ksSSxFQUFNYyxNLEVBQVM7QUFFakMsVUFBSVksT0FBT3RDLE9BQU91QyxRQUFQLENBQWdCRCxJQUFoQixDQUFxQlQsS0FBckIsQ0FBMkIsQ0FBM0IsQ0FBWDtBQUFBLFVBQ0FXLE1BQU1GLEtBQUtHLE9BQUwsQ0FBYyxHQUFkLENBRE47QUFBQSxVQUVBQyxXQUFXLEVBRlg7O0FBSUEsVUFBSUYsT0FBTyxDQUFQLElBQVlGLEtBQUtqQyxNQUFMLEdBQWNtQyxHQUE5QixFQUFvQztBQUVuQ0Usa0JBQVdDLFlBQVluQixLQUFaLENBQW1CYyxLQUFLbEIsU0FBTCxDQUFnQm9CLE1BQUksQ0FBcEIsQ0FBbkIsQ0FBWDtBQUNBO0FBQ0QsV0FBS0ksSUFBTCxDQUFXLG1CQUFYLEVBQWdDLEVBQUNwQyxLQUFLQSxHQUFOLEVBQVdJLE1BQU1BLElBQWpCLEVBQXVCbEIsT0FBT1QsT0FBT3VCLEdBQVAsRUFBWUksSUFBWixDQUE5QixFQUFpREMsWUFBWWEsTUFBN0QsRUFBcUVBLFFBQVFnQixRQUE3RSxFQUFoQztBQUNBOzs7a0NBR2FHLEUsRUFBSUMsRSxFQUFLO0FBQ3RCLFVBQUksS0FBS3hELFFBQUwsSUFBaUJ1RCxFQUFyQixFQUEwQjtBQUN6QixXQUFJRSxPQUFPL0MsT0FBT3VDLFFBQVAsQ0FBZ0JELElBQWhCLENBQXFCVCxLQUFyQixDQUEyQixDQUEzQixLQUFpQyxLQUFLbkMsS0FBakQ7QUFDQU0sY0FBT3VDLFFBQVAsQ0FBZ0JELElBQWhCLEdBQXVCLEtBQUs1QyxLQUE1Qjs7QUFHQSxXQUFJcUQsSUFBSixFQUNDLEtBQUtsRCxNQUFMLENBQVltRCxRQUFaLENBQXFCLElBQXJCLEVBQTJCSCxFQUEzQjtBQUVEO0FBQ0Q7Ozs7Ozs7O0FBR0ZJLFdBQVM5RCxNQUFUIiwiZmlsZSI6IlJvdXRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImxldCBwcml2YXRlX3JvdXRlcixcblx0XHRyb3V0ZXMsXG5cdFx0UEFUSF9QQVJBTV9SRUdFWCA9IC86W2EtejAtOV8kXSovZztcblxuZXhwb3J0IGNsYXNzIFJvdXRlciB7XG5cblx0YmVmb3JlUmVnaXN0ZXIoKSB7XG5cdFx0dGhpcy5pcyA9ICdzYi1yb3V0ZXInO1xuXHRcdHRoaXMucHJvcGVydGllcyA9IHtcblx0XHRcdGF1dG9IYXNoOiB7XG5cdFx0XHRcdHR5cGU6IEJvb2xlYW4sXG5cdFx0XHRcdHZhbHVlOiBmdW5jdGlvbigpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdFx0XHR9LFxuXG5cdFx0XHRyb3V0ZToge1xuXHRcdFx0XHR0eXBlOiBTdHJpbmcsXG5cdFx0XHRcdG9ic2VydmVyOiAncm91dGVDaGFuZ2VkJ1xuXHRcdFx0fSxcblxuXHRcdFx0cm91dGVyOiB7XG5cdFx0XHRcdHR5cGU6IE9iamVjdCxcblx0XHRcdFx0cmVhZE9ubHk6IHRydWUsXG5cdFx0XHRcdHZhbHVlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiggIXByaXZhdGVfcm91dGVyICkge1xuXHRcdFx0XHRcdFx0cHJpdmF0ZV9yb3V0ZXIgPSBuZXcgd2luZG93LlJvdXRlcigpO1xuXHRcdFx0XHRcdFx0cHJpdmF0ZV9yb3V0ZXIuaW5pdCgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gcHJpdmF0ZV9yb3V0ZXI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpbml0KCBhbGxSb3V0ZXMgKSB7XG5cdFx0bGV0IG1vZHVsZXMgPSBPYmplY3Qua2V5cyhhbGxSb3V0ZXMpO1xuXG5cdFx0aWYoICFyb3V0ZXMgJiYgbW9kdWxlcy5sZW5ndGggKSB7XG5cdFx0XHRyb3V0ZXMgPSBhbGxSb3V0ZXM7XG5cdFx0XHRsZXQgcm91dGVyID0gdGhpcy5yb3V0ZXIsXG5cdFx0XHRsZW4gPSBtb2R1bGVzID8gbW9kdWxlcy5sZW5ndGggOiAwO1xuXG5cdFx0XHQvLyBhdHRhY2ggYSBEaXJlY3RvciBoYW5kbGVyIGZvciBhbGwgY29uZmlndXJlZCByb3V0ZXMgKG1vZHVsZSArIHBhdGggPSByb3V0ZSlcblx0XHRcdGZvciggbGV0IGk9MDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRsZXQgbW9kID0gbW9kdWxlc1tpXSxcblx0XHRcdFx0bW9kdWxlUGF0aHMgPSBPYmplY3Qua2V5cyggcm91dGVzW21vZF0gKSxcblx0XHRcdFx0cExlbiA9IG1vZHVsZVBhdGhzID8gbW9kdWxlUGF0aHMubGVuZ3RoIDogMDtcblxuXHRcdFx0XHRmb3IoIGxldCBwPTA7IHAgPCBwTGVuOyBwKysgKSB7XG5cdFx0XHRcdFx0bGV0IHBhdGggPSBtb2R1bGVQYXRoc1twXSxcblx0XHRcdFx0XHRwYXRoUGFyYW1zID0gcGF0aCA/IHBhdGgubWF0Y2goIFBBVEhfUEFSQU1fUkVHRVggKSA6IG51bGwsXG5cdFx0XHRcdFx0cGFyYW1OYW1lcyA9IFtdLFxuXHRcdFx0XHRcdHBhcmFtTWFwID0ge307XG5cblx0XHRcdFx0XHQvLyBpZiBwYXRoIHBhcmFtcyBleGlzdCBidWlsZCBtYXAgb2YgbmFtZT12YWx1ZSBmb3IgZWFzeSBhY2Nlc3Ncblx0XHRcdFx0XHRpZiggcGF0aFBhcmFtcyApIHtcblx0XHRcdFx0XHRcdHBhcmFtTmFtZXMgPSBwYXRoUGFyYW1zLm1hcCggZnVuY3Rpb24oIHZhbCwgaW5kZXggKSB7XG5cdFx0XHRcdFx0XHRcdGxldCBwID0gdmFsLnN1YnN0cmluZygxKTtcblx0XHRcdFx0XHRcdFx0cGFyYW1NYXBbcF0gPSBudWxsO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcDtcblx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJvdXRlci5vbiggbW9kICsgcGF0aCwgZnVuY3Rpb24oIG0sIHAsIHBhcmFtTmFtZXMsIHBhcmFtTWFwICkge1xuXHRcdFx0XHRcdFx0bGV0IHBhdGhQYXJhbXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KCBwYXJhbU1hcCApKSwgIC8vIGNsb25lXG5cdFx0XHRcdFx0XHRwYXJhbXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsNCksXG5cdFx0XHRcdFx0XHRwYXJhbXNMZW4gPSBwYXJhbXMgPyBwYXJhbXMubGVuZ3RoIDogMDtcblxuXHRcdFx0XHRcdFx0Ly8gbWFwIHBhdGggcGFyYW1ldGVyIG5hbWUgdG8gYWN0dWFsIHZhbHVlXG5cdFx0XHRcdFx0XHRmb3IoIGxldCBqPTA7IGogPCBwYXJhbXNMZW47IGorKyApXG5cdFx0XHRcdFx0XHRwYXRoUGFyYW1zW3BhcmFtTmFtZXNbal1dID0gcGFyYW1zW2pdO1xuXG5cdFx0XHRcdFx0XHR0aGlzLnJvdXRlSGFuZGxlciggbSwgcCwgcGF0aFBhcmFtcyApO1xuXHRcdFx0XHRcdH0uYmluZCh0aGlzLCBtb2QsIHBhdGgsIHBhcmFtTmFtZXMsIHBhcmFtTWFwKSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cm91dGVyLm9uKCAnLyonLCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y29uc29sZS5sb2coICdnb3QgYW4gdW5rbm93biByb3V0ZS4gbmVlZCB0byBzaG93IDQwNCBoZXJlJyApOyAvLyB0b2RvXG5cdFx0XHR9KTtcblxuXHRcdFx0cm91dGVyLm9uKCAnJywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGNvbnNvbGUubG9nKCAnR290IHRoZSA8ZW1wdHk+IHJvdXRlJyApO1xuXHRcdFx0fSlcblx0XHR9XG5cdH1cblxuXHQvKiB0aGUgRGlyZWN0b3Igcm91dGUgaGFuZGxlciAqL1xuXHRyb3V0ZUhhbmRsZXIoIG1vZCwgcGF0aCwgcGFyYW1zICkge1xuXHRcdC8vIERpcmVjdG9yIGRvZXNuJ3Qgc3VwcG9ydCBxdWVyeSBzdHJpbmctbGlrZSBwYXJhbXMgaW4gdGhlIGhhc2guICBXZSBoYXZlIHRvIG1hbnVhbGx5IGdldCB0aGVtLlxuXHRcdGxldCBoYXNoID0gd2luZG93LmxvY2F0aW9uLmhhc2guc2xpY2UoMSksXG5cdFx0cG9zID0gaGFzaC5pbmRleE9mKCAnPycgKSxcblx0XHRxc1BhcmFtcyA9IHt9O1xuXG5cdFx0aWYoIHBvcyA+PSAwICYmIGhhc2gubGVuZ3RoID4gcG9zICkge1xuXHRcdFx0Ly8gdXNlIDNyZCBwYXJ0eSB0byBwYXJzZVxuXHRcdFx0cXNQYXJhbXMgPSBxdWVyeVN0cmluZy5wYXJzZSggaGFzaC5zdWJzdHJpbmcoIHBvcysxICkgKTtcblx0XHR9XG5cdFx0dGhpcy5maXJlKCAnc2Itcm91dGUtY29tcGxldGUnLCB7bW9kOiBtb2QsIHBhdGg6IHBhdGgsIHJvdXRlOiByb3V0ZXNbbW9kXVtwYXRoXSwgcGF0aFBhcmFtczogcGFyYW1zLCBwYXJhbXM6IHFzUGFyYW1zIH0gKTtcblx0fVxuXG5cdC8qKiBPYnNlcnZlciBmb3Igd2hlbiB0aGUgcm91dGUgcHJvcGVydHkgY2hhbmdlcy4gIFVwZGF0ZSB0aGUgd2luZG93IGhhc2ggYW5kIGZpcmUgZXZlbnQgaWYgbmVlZGVkICovXG5cdHJvdXRlQ2hhbmdlZCggbnYsIG92ICkge1xuXHRcdGlmKCB0aGlzLmF1dG9IYXNoICYmIG52ICkge1xuXHRcdFx0bGV0IHNhbWUgPSB3aW5kb3cubG9jYXRpb24uaGFzaC5zbGljZSgxKSA9PSB0aGlzLnJvdXRlO1xuXHRcdFx0d2luZG93LmxvY2F0aW9uLmhhc2ggPSB0aGlzLnJvdXRlO1xuXG5cdFx0XHQvLyBpZiB5b3Ugc2V0IHRoZSBoYXNoIHRvIGJlIHNhbWUgdmFsdWUgYXMgaXQgY3VycmVudGx5IGhhcyB5b3UgZG9uJ3QgZ2V0IGEgaGFzaGNoYW5nZSBldmVudFxuXHRcdFx0aWYoIHNhbWUgKVxuXHRcdFx0XHR0aGlzLnJvdXRlci5kaXNwYXRjaCgnb24nLCBudik7XG5cdFx0XHQvLyB3aW5kb3cuZGlzcGF0Y2hFdmVudChuZXcgSGFzaENoYW5nZUV2ZW50KFwiaGFzaGNoYW5nZVwiKSk7XG5cdFx0fVxuXHR9XG59XG5cblBvbHltZXIoIFJvdXRlciApO1xuIl19
'use strict';

System.register('common/data/cache/Cache.js', [], function (_export, _context) {
	var _createClass, map, Cache;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			map = {};

			_export('Cache', Cache = function () {
				function Cache() {
					_classCallCheck(this, Cache);
				}

				_createClass(Cache, null, [{
					key: 'add',
					value: function add(name, id, object, type) {
						if (!name || !id || !object) return;

						if (!type) type = 'value';

						if (!map[type]) map[type] = {};

						if (!map[type][name]) map[type][name] = {};

						map[type][name][id] = object;
					}
				}, {
					key: 'get',
					value: function get(name, id, type) {
						if (!name || !id) return null;

						if (!type) type = 'value';

						if (!map[type]) return null;

						if (!map[type][name]) return null;

						return map[type][name][id];
					}
				}, {
					key: 'remove',
					value: function remove(name, id, type) {
						if (!name || !id || !type) return null;

						if (!type) type = 'value';

						if (!map[type]) return;
						if (!map[type][name]) return;

						delete map[type][name][id];
					}
				}]);

				return Cache;
			}());

			_export('Cache', Cache);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNhY2hlLmpzIl0sIm5hbWVzIjpbIm1hcCIsIkNhY2hlIiwibmFtZSIsImlkIiwib2JqZWN0IiwidHlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBSUEsTSxHQUFNLEU7O29CQUVHQyxLOzs7Ozs7O3lCQUVEQyxJLEVBQU1DLEUsRUFBSUMsTSxFQUFRQyxJLEVBQU07QUFDbEMsVUFBRyxDQUFDSCxJQUFELElBQVMsQ0FBQ0MsRUFBVixJQUFnQixDQUFDQyxNQUFwQixFQUNDOztBQUVELFVBQUcsQ0FBQ0MsSUFBSixFQUNDQSxPQUFPLE9BQVA7O0FBRUQsVUFBRyxDQUFDTCxJQUFJSyxJQUFKLENBQUosRUFDQ0wsSUFBSUssSUFBSixJQUFZLEVBQVo7O0FBRUQsVUFBRyxDQUFDTCxJQUFJSyxJQUFKLEVBQVVILElBQVYsQ0FBSixFQUNDRixJQUFJSyxJQUFKLEVBQVVILElBQVYsSUFBa0IsRUFBbEI7O0FBRURGLFVBQUlLLElBQUosRUFBVUgsSUFBVixFQUFnQkMsRUFBaEIsSUFBc0JDLE1BQXRCO0FBQ0E7Ozt5QkFFVUYsSSxFQUFNQyxFLEVBQUlFLEksRUFBTTtBQUMxQixVQUFHLENBQUNILElBQUQsSUFBUyxDQUFDQyxFQUFiLEVBQ0MsT0FBTyxJQUFQOztBQUVELFVBQUcsQ0FBQ0UsSUFBSixFQUNDQSxPQUFPLE9BQVA7O0FBRUQsVUFBRyxDQUFDTCxJQUFJSyxJQUFKLENBQUosRUFDQyxPQUFPLElBQVA7O0FBRUQsVUFBRyxDQUFDTCxJQUFJSyxJQUFKLEVBQVVILElBQVYsQ0FBSixFQUNDLE9BQU8sSUFBUDs7QUFFRCxhQUFPRixJQUFJSyxJQUFKLEVBQVVILElBQVYsRUFBZ0JDLEVBQWhCLENBQVA7QUFDQTs7OzRCQUVhRCxJLEVBQU1DLEUsRUFBSUUsSSxFQUFNO0FBQzdCLFVBQUcsQ0FBQ0gsSUFBRCxJQUFTLENBQUNDLEVBQVYsSUFBZ0IsQ0FBQ0UsSUFBcEIsRUFDQyxPQUFPLElBQVA7O0FBRUQsVUFBRyxDQUFDQSxJQUFKLEVBQ0NBLE9BQU8sT0FBUDs7QUFFRCxVQUFHLENBQUNMLElBQUlLLElBQUosQ0FBSixFQUNDO0FBQ0QsVUFBRyxDQUFDTCxJQUFJSyxJQUFKLEVBQVVILElBQVYsQ0FBSixFQUNDOztBQUVELGFBQU9GLElBQUlLLElBQUosRUFBVUgsSUFBVixFQUFnQkMsRUFBaEIsQ0FBUDtBQUNBIiwiZmlsZSI6IkNhY2hlLmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IG1hcCA9IHt9O1xuXG5leHBvcnQgY2xhc3MgQ2FjaGUge1xuXG5cdHN0YXRpYyBhZGQobmFtZSwgaWQsIG9iamVjdCwgdHlwZSkge1xuXHRcdGlmKCFuYW1lIHx8ICFpZCB8fCAhb2JqZWN0KVxuXHRcdFx0cmV0dXJuO1xuXG5cdFx0aWYoIXR5cGUpXG5cdFx0XHR0eXBlID0gJ3ZhbHVlJztcblxuXHRcdGlmKCFtYXBbdHlwZV0pXG5cdFx0XHRtYXBbdHlwZV0gPSB7fTtcblxuXHRcdGlmKCFtYXBbdHlwZV1bbmFtZV0pXG5cdFx0XHRtYXBbdHlwZV1bbmFtZV0gPSB7fTtcblxuXHRcdG1hcFt0eXBlXVtuYW1lXVtpZF0gPSBvYmplY3Q7XG5cdH1cblxuXHRzdGF0aWMgZ2V0KG5hbWUsIGlkLCB0eXBlKSB7XG5cdFx0aWYoIW5hbWUgfHwgIWlkKVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cblx0XHRpZighdHlwZSlcblx0XHRcdHR5cGUgPSAndmFsdWUnO1xuXG5cdFx0aWYoIW1hcFt0eXBlXSlcblx0XHRcdHJldHVybiBudWxsO1xuXG5cdFx0aWYoIW1hcFt0eXBlXVtuYW1lXSlcblx0XHRcdHJldHVybiBudWxsO1xuXG5cdFx0cmV0dXJuIG1hcFt0eXBlXVtuYW1lXVtpZF07XG5cdH1cblxuXHRzdGF0aWMgcmVtb3ZlKG5hbWUsIGlkLCB0eXBlKSB7XG5cdFx0aWYoIW5hbWUgfHwgIWlkIHx8ICF0eXBlKVxuXHRcdFx0cmV0dXJuIG51bGw7XG5cblx0XHRpZighdHlwZSlcblx0XHRcdHR5cGUgPSAndmFsdWUnO1xuXG5cdFx0aWYoIW1hcFt0eXBlXSlcblx0XHRcdHJldHVybjtcblx0XHRpZighbWFwW3R5cGVdW25hbWVdKVxuXHRcdFx0cmV0dXJuO1xuXG5cdFx0ZGVsZXRlIG1hcFt0eXBlXVtuYW1lXVtpZF07XG5cdH1cbn0iXX0=
'use strict';

System.register('common/data/client/OAuthClient.js', ['common/oauth/OAuth.js', 'common/data/client/RemoteOAuth.js'], function (_export, _context) {
	var OAuth, RemoteOAuth, _createClass, OAuthClient;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_commonOauthOAuthJs) {
			OAuth = _commonOauthOAuthJs.OAuth;
		}, function (_commonDataClientRemoteOAuthJs) {
			RemoteOAuth = _commonDataClientRemoteOAuthJs.RemoteOAuth;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('OAuthClient', OAuthClient = function () {
				function OAuthClient(prefix) {
					_classCallCheck(this, OAuthClient);

					this.prefix = prefix;
				}

				_createClass(OAuthClient, [{
					key: 'getConnection',
					value: function getConnection() {
						if (typeof Visualforce !== 'undefined') {
							return new Promise(function (resolve, reject) {
								resolve(new RemoteOAuth(this.prefix).getConnection());
							}.bind(this));
						} else {
							return new OAuth().getConnection();
						}
					}
				}]);

				return OAuthClient;
			}());

			_export('OAuthClient', OAuthClient);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk9BdXRoQ2xpZW50LmpzIl0sIm5hbWVzIjpbIk9BdXRoIiwiUmVtb3RlT0F1dGgiLCJPQXV0aENsaWVudCIsInByZWZpeCIsIlZpc3VhbGZvcmNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJnZXRDb25uZWN0aW9uIiwiYmluZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFRQSxRLHVCQUFBQSxLOztBQUNBQyxjLGtDQUFBQSxXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBRUtDLFc7QUFFWix5QkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUNuQixVQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFDQTs7OztxQ0FFZTtBQUNmLFVBQUcsT0FBT0MsV0FBUCxLQUF1QixXQUExQixFQUF1QztBQUN0QyxjQUFPLElBQUlDLE9BQUosQ0FBWSxVQUFTQyxPQUFULEVBQWtCQyxNQUFsQixFQUEwQjtBQUM1Q0QsZ0JBQVEsSUFBSUwsV0FBSixDQUFnQixLQUFLRSxNQUFyQixFQUE2QkssYUFBN0IsRUFBUjtBQUNBLFFBRmtCLENBRWpCQyxJQUZpQixDQUVaLElBRlksQ0FBWixDQUFQO0FBR0EsT0FKRCxNQUlPO0FBQ04sY0FBTyxJQUFJVCxLQUFKLEdBQVlRLGFBQVosRUFBUDtBQUNBO0FBQ0QiLCJmaWxlIjoiT0F1dGhDbGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09BdXRofSBmcm9tICdjb21tb24vb2F1dGgvT0F1dGguanMnO1xuaW1wb3J0IHtSZW1vdGVPQXV0aH0gZnJvbSAnY29tbW9uL2RhdGEvY2xpZW50L1JlbW90ZU9BdXRoLmpzJztcblxuZXhwb3J0IGNsYXNzIE9BdXRoQ2xpZW50IHtcblxuXHRjb25zdHJ1Y3RvcihwcmVmaXgpIHtcblx0XHR0aGlzLnByZWZpeCA9IHByZWZpeDtcblx0fVxuXG5cdGdldENvbm5lY3Rpb24oKSB7XG5cdFx0aWYodHlwZW9mIFZpc3VhbGZvcmNlICE9PSAndW5kZWZpbmVkJykge1xuXHRcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuXHRcdFx0XHRyZXNvbHZlKG5ldyBSZW1vdGVPQXV0aCh0aGlzLnByZWZpeCkuZ2V0Q29ubmVjdGlvbigpKTtcblx0XHRcdH0uYmluZCh0aGlzKSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJldHVybiBuZXcgT0F1dGgoKS5nZXRDb25uZWN0aW9uKCk7XG5cdFx0fVxuXHR9XG59Il19
'use strict';

System.register('common/data/client/RemoteClient.js', ['common/data/client/RemoteOAuth.js'], function (_export, _context) {
	var RemoteOAuth, _createClass, RemoteClient;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_commonDataClientRemoteOAuthJs) {
			RemoteOAuth = _commonDataClientRemoteOAuthJs.RemoteOAuth;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('RemoteClient', RemoteClient = function () {
				function RemoteClient() {
					_classCallCheck(this, RemoteClient);
				}

				_createClass(RemoteClient, [{
					key: 'read',
					value: function read(prefix, reader, uid) {
						this.prefix = prefix;
						return this._remote('read', reader, uid);
					}
				}, {
					key: 'load',
					value: function load(prefix, loader, uid, context) {
						this.prefix = prefix;
						return this._remote('load', loader, uid, JSON.stringify(context));
					}
				}, {
					key: 'save',
					value: function save(prefix, saver, model) {
						this.prefix = prefix;
						return this._remote('save', saver, JSON.stringify(model));
					}
				}, {
					key: 'md',
					value: function md(prefix, type, fullNames) {
						return new RemoteOAuth(prefix).getConnection().metadata.read(type, fullNames);
					}
				}, {
					key: '_remote',
					value: function _remote(method, provider, input, context) {
						var action = this._getAction() + '.' + method;
						if (context) return new Promise(function (resolve, reject) {
							Visualforce.remoting.Manager.invokeAction(action, provider, input, context, function (obj, event) {
								this._callback(obj, event, resolve, reject);
							}.bind(this));
						}.bind(this));

						return new Promise(function (resolve, reject) {
							Visualforce.remoting.Manager.invokeAction(action, provider, input, function (obj, event) {
								this._callback(obj, event, resolve, reject);
							}.bind(this));
						}.bind(this));
					}
				}, {
					key: '_getAction',
					value: function _getAction() {
						return this._getPrefix() + 'ServiceRouter';
					}
				}, {
					key: '_getPrefix',
					value: function _getPrefix() {
						return this.prefix ? this.prefix + '.' : '';
					}
				}, {
					key: '_callback',
					value: function _callback(obj, event, resolve, reject) {
						if (!event.status) reject(event.message);else resolve(this._parse(obj));
					}
				}, {
					key: '_parse',
					value: function _parse(obj) {
						obj = obj.replace(/&quot;/g, '"');
						try {
							return JSON.parse(obj);
						} catch (e) {
							return obj;
						}
					}
				}]);

				return RemoteClient;
			}());

			_export('RemoteClient', RemoteClient);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlbW90ZUNsaWVudC5qcyJdLCJuYW1lcyI6WyJSZW1vdGVPQXV0aCIsIlJlbW90ZUNsaWVudCIsInByZWZpeCIsInJlYWRlciIsInVpZCIsIl9yZW1vdGUiLCJsb2FkZXIiLCJjb250ZXh0IiwiSlNPTiIsInN0cmluZ2lmeSIsInNhdmVyIiwibW9kZWwiLCJ0eXBlIiwiZnVsbE5hbWVzIiwiZ2V0Q29ubmVjdGlvbiIsIm1ldGFkYXRhIiwicmVhZCIsIm1ldGhvZCIsInByb3ZpZGVyIiwiaW5wdXQiLCJhY3Rpb24iLCJfZ2V0QWN0aW9uIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJWaXN1YWxmb3JjZSIsInJlbW90aW5nIiwiTWFuYWdlciIsImludm9rZUFjdGlvbiIsIm9iaiIsImV2ZW50IiwiX2NhbGxiYWNrIiwiYmluZCIsIl9nZXRQcmVmaXgiLCJzdGF0dXMiLCJtZXNzYWdlIiwiX3BhcnNlIiwicmVwbGFjZSIsInBhcnNlIiwiZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFRQSxjLGtDQUFBQSxXOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBRUtDLFk7Ozs7Ozs7MEJBRVBDLE0sRUFBUUMsTSxFQUFRQyxHLEVBQUs7QUFDekIsV0FBS0YsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsYUFBTyxLQUFLRyxPQUFMLENBQWEsTUFBYixFQUFxQkYsTUFBckIsRUFBNkJDLEdBQTdCLENBQVA7QUFDQTs7OzBCQUVJRixNLEVBQVFJLE0sRUFBUUYsRyxFQUFLRyxPLEVBQVM7QUFDbEMsV0FBS0wsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsYUFBTyxLQUFLRyxPQUFMLENBQWEsTUFBYixFQUFxQkMsTUFBckIsRUFBNkJGLEdBQTdCLEVBQWtDSSxLQUFLQyxTQUFMLENBQWVGLE9BQWYsQ0FBbEMsQ0FBUDtBQUNBOzs7MEJBRUlMLE0sRUFBUVEsSyxFQUFPQyxLLEVBQU87QUFDMUIsV0FBS1QsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsYUFBTyxLQUFLRyxPQUFMLENBQWEsTUFBYixFQUFxQkssS0FBckIsRUFBNEJGLEtBQUtDLFNBQUwsQ0FBZUUsS0FBZixDQUE1QixDQUFQO0FBQ0E7Ozt3QkFFRVQsTSxFQUFRVSxJLEVBQU1DLFMsRUFBVztBQUMzQixhQUFPLElBQUliLFdBQUosQ0FBZ0JFLE1BQWhCLEVBQXdCWSxhQUF4QixHQUF3Q0MsUUFBeEMsQ0FBaURDLElBQWpELENBQXNESixJQUF0RCxFQUE0REMsU0FBNUQsQ0FBUDtBQUNBOzs7NkJBRU9JLE0sRUFBUUMsUSxFQUFVQyxLLEVBQU9aLE8sRUFBUztBQUN6QyxVQUFJYSxTQUFTLEtBQUtDLFVBQUwsS0FBb0IsR0FBcEIsR0FBMEJKLE1BQXZDO0FBQ0EsVUFBR1YsT0FBSCxFQUNDLE9BQU8sSUFBSWUsT0FBSixDQUFZLFVBQVVDLE9BQVYsRUFBbUJDLE1BQW5CLEVBQTJCO0FBQzdDQyxtQkFBWUMsUUFBWixDQUFxQkMsT0FBckIsQ0FBNkJDLFlBQTdCLENBQTBDUixNQUExQyxFQUFrREYsUUFBbEQsRUFBNERDLEtBQTVELEVBQW1FWixPQUFuRSxFQUE0RSxVQUFTc0IsR0FBVCxFQUFjQyxLQUFkLEVBQXFCO0FBQ2hHLGFBQUtDLFNBQUwsQ0FBZUYsR0FBZixFQUFvQkMsS0FBcEIsRUFBMkJQLE9BQTNCLEVBQW9DQyxNQUFwQztBQUNFLFFBRnlFLENBRXhFUSxJQUZ3RSxDQUVuRSxJQUZtRSxDQUE1RTtBQUdBLE9BSmtCLENBSWpCQSxJQUppQixDQUlaLElBSlksQ0FBWixDQUFQOztBQU1ELGFBQU8sSUFBSVYsT0FBSixDQUFZLFVBQVVDLE9BQVYsRUFBbUJDLE1BQW5CLEVBQTJCO0FBQzdDQyxtQkFBWUMsUUFBWixDQUFxQkMsT0FBckIsQ0FBNkJDLFlBQTdCLENBQTBDUixNQUExQyxFQUFrREYsUUFBbEQsRUFBNERDLEtBQTVELEVBQW1FLFVBQVNVLEdBQVQsRUFBY0MsS0FBZCxFQUFxQjtBQUN2RixhQUFLQyxTQUFMLENBQWVGLEdBQWYsRUFBb0JDLEtBQXBCLEVBQTJCUCxPQUEzQixFQUFvQ0MsTUFBcEM7QUFDRSxRQUZnRSxDQUUvRFEsSUFGK0QsQ0FFMUQsSUFGMEQsQ0FBbkU7QUFHQSxPQUprQixDQUlqQkEsSUFKaUIsQ0FJWixJQUpZLENBQVosQ0FBUDtBQUtBOzs7a0NBRVk7QUFDWixhQUFPLEtBQUtDLFVBQUwsS0FBb0IsZUFBM0I7QUFDQTs7O2tDQUVZO0FBQ1osYUFBTyxLQUFLL0IsTUFBTCxHQUFlLEtBQUtBLE1BQUwsR0FBYyxHQUE3QixHQUFvQyxFQUEzQztBQUNBOzs7K0JBRVMyQixHLEVBQUtDLEssRUFBT1AsTyxFQUFTQyxNLEVBQVE7QUFDdEMsVUFBRyxDQUFDTSxNQUFNSSxNQUFWLEVBQ0NWLE9BQU9NLE1BQU1LLE9BQWIsRUFERCxLQUdDWixRQUFRLEtBQUthLE1BQUwsQ0FBWVAsR0FBWixDQUFSO0FBQ0Q7Ozs0QkFFTUEsRyxFQUFLO0FBQ1hBLFlBQU1BLElBQUlRLE9BQUosQ0FBWSxTQUFaLEVBQXNCLEdBQXRCLENBQU47QUFDQSxVQUFJO0FBQ0gsY0FBTzdCLEtBQUs4QixLQUFMLENBQVdULEdBQVgsQ0FBUDtBQUNBLE9BRkQsQ0FFRSxPQUFNVSxDQUFOLEVBQVM7QUFDVixjQUFPVixHQUFQO0FBQ0E7QUFDRCIsImZpbGUiOiJSZW1vdGVDbGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JlbW90ZU9BdXRofSBmcm9tICdjb21tb24vZGF0YS9jbGllbnQvUmVtb3RlT0F1dGguanMnO1xuXG5leHBvcnQgY2xhc3MgUmVtb3RlQ2xpZW50IHtcblxuXHRyZWFkKHByZWZpeCwgcmVhZGVyLCB1aWQpIHtcblx0XHR0aGlzLnByZWZpeCA9IHByZWZpeDtcblx0XHRyZXR1cm4gdGhpcy5fcmVtb3RlKCdyZWFkJywgcmVhZGVyLCB1aWQpO1xuXHR9XG5cblx0bG9hZChwcmVmaXgsIGxvYWRlciwgdWlkLCBjb250ZXh0KSB7XG5cdFx0dGhpcy5wcmVmaXggPSBwcmVmaXg7XG5cdFx0cmV0dXJuIHRoaXMuX3JlbW90ZSgnbG9hZCcsIGxvYWRlciwgdWlkLCBKU09OLnN0cmluZ2lmeShjb250ZXh0KSk7XG5cdH1cblxuXHRzYXZlKHByZWZpeCwgc2F2ZXIsIG1vZGVsKSB7XG5cdFx0dGhpcy5wcmVmaXggPSBwcmVmaXg7XG5cdFx0cmV0dXJuIHRoaXMuX3JlbW90ZSgnc2F2ZScsIHNhdmVyLCBKU09OLnN0cmluZ2lmeShtb2RlbCkpO1xuXHR9XG5cblx0bWQocHJlZml4LCB0eXBlLCBmdWxsTmFtZXMpIHtcblx0XHRyZXR1cm4gbmV3IFJlbW90ZU9BdXRoKHByZWZpeCkuZ2V0Q29ubmVjdGlvbigpLm1ldGFkYXRhLnJlYWQodHlwZSwgZnVsbE5hbWVzKTtcblx0fVxuXG5cdF9yZW1vdGUobWV0aG9kLCBwcm92aWRlciwgaW5wdXQsIGNvbnRleHQpIHtcblx0XHR2YXIgYWN0aW9uID0gdGhpcy5fZ2V0QWN0aW9uKCkgKyAnLicgKyBtZXRob2Q7XG5cdFx0aWYoY29udGV4dClcblx0XHRcdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG5cdFx0XHRcdFZpc3VhbGZvcmNlLnJlbW90aW5nLk1hbmFnZXIuaW52b2tlQWN0aW9uKGFjdGlvbiwgcHJvdmlkZXIsIGlucHV0LCBjb250ZXh0LCBmdW5jdGlvbihvYmosIGV2ZW50KSB7XG5cdFx0XHRcdFx0dGhpcy5fY2FsbGJhY2sob2JqLCBldmVudCwgcmVzb2x2ZSwgcmVqZWN0KTtcblx0XHRcdCAgIH0uYmluZCh0aGlzKSk7XG5cdFx0XHR9LmJpbmQodGhpcykpO1xuXG5cdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcblx0XHRcdFZpc3VhbGZvcmNlLnJlbW90aW5nLk1hbmFnZXIuaW52b2tlQWN0aW9uKGFjdGlvbiwgcHJvdmlkZXIsIGlucHV0LCBmdW5jdGlvbihvYmosIGV2ZW50KSB7XG5cdFx0XHRcdHRoaXMuX2NhbGxiYWNrKG9iaiwgZXZlbnQsIHJlc29sdmUsIHJlamVjdCk7XG5cdFx0ICAgfS5iaW5kKHRoaXMpKTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9XG5cblx0X2dldEFjdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5fZ2V0UHJlZml4KCkgKyAnU2VydmljZVJvdXRlcic7XG5cdH1cblxuXHRfZ2V0UHJlZml4KCkge1xuXHRcdHJldHVybiB0aGlzLnByZWZpeCA/ICh0aGlzLnByZWZpeCArICcuJykgOiAnJztcblx0fVxuXG5cdF9jYWxsYmFjayhvYmosIGV2ZW50LCByZXNvbHZlLCByZWplY3QpIHtcblx0XHRpZighZXZlbnQuc3RhdHVzKVxuXHRcdFx0cmVqZWN0KGV2ZW50Lm1lc3NhZ2UpO1xuXHRcdGVsc2Vcblx0XHRcdHJlc29sdmUodGhpcy5fcGFyc2Uob2JqKSk7XG5cdH1cblxuXHRfcGFyc2Uob2JqKSB7XG5cdFx0b2JqID0gb2JqLnJlcGxhY2UoLyZxdW90Oy9nLCdcIicpO1xuXHRcdHRyeSB7XG5cdFx0XHRyZXR1cm4gSlNPTi5wYXJzZShvYmopO1xuXHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0cmV0dXJuIG9iajtcblx0XHR9XG5cdH1cbn0iXX0=
'use strict';

System.register('common/data/client/RemoteOAuth.js', [], function (_export, _context) {
    var _createClass, RemoteOAuth;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('RemoteOAuth', RemoteOAuth = function () {
                function RemoteOAuth(prefix) {
                    _classCallCheck(this, RemoteOAuth);

                    this.remoteAction = 'OAuthExtension.refreshAccessToken';
                    if (prefix) this.remoteAction = prefix + '.' + this.remoteAction;

                    jsforce.OAuth2.prototype.refreshToken = function (refreshToken, callback) {
                        Visualforce.remoting.Manager.invokeAction(this.remoteAction, function (accessToken, event) {
                            this.cacheToken(accessToken);
                            callback(!accessToken ? { message: event.message } : false, { access_token: accessToken, id: '' });
                        }.bind(this));
                    }.bind(this);
                }

                _createClass(RemoteOAuth, [{
                    key: 'getConnection',
                    value: function getConnection() {
                        return new jsforce.Connection({
                            oauth2: new jsforce.OAuth2({ clientId: true, clientSecret: true }),
                            accessToken: this.getCachedToken(),
                            refreshToken: ''
                        });
                    }
                }, {
                    key: 'getCachedToken',
                    value: function getCachedToken() {
                        if (typeof sessionStorage === 'undefined') return '';

                        return sessionStorage.getItem(this.remoteAction);
                    }
                }, {
                    key: 'cacheToken',
                    value: function cacheToken(accessToken) {
                        if (typeof sessionStorage === 'undefined') return;

                        sessionStorage.setItem(this.remoteAction, accessToken);
                    }
                }]);

                return RemoteOAuth;
            }());

            _export('RemoteOAuth', RemoteOAuth);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlbW90ZU9BdXRoLmpzIl0sIm5hbWVzIjpbIlJlbW90ZU9BdXRoIiwicHJlZml4IiwicmVtb3RlQWN0aW9uIiwianNmb3JjZSIsIk9BdXRoMiIsInByb3RvdHlwZSIsInJlZnJlc2hUb2tlbiIsImNhbGxiYWNrIiwiVmlzdWFsZm9yY2UiLCJyZW1vdGluZyIsIk1hbmFnZXIiLCJpbnZva2VBY3Rpb24iLCJhY2Nlc3NUb2tlbiIsImV2ZW50IiwiY2FjaGVUb2tlbiIsIm1lc3NhZ2UiLCJhY2Nlc3NfdG9rZW4iLCJpZCIsImJpbmQiLCJDb25uZWN0aW9uIiwib2F1dGgyIiwiY2xpZW50SWQiLCJjbGllbnRTZWNyZXQiLCJnZXRDYWNoZWRUb2tlbiIsInNlc3Npb25TdG9yYWdlIiwiZ2V0SXRlbSIsInNldEl0ZW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O21DQUFhQSxXO0FBRVQscUNBQVlDLE1BQVosRUFBb0I7QUFBQTs7QUFDaEIseUJBQUtDLFlBQUwsR0FBb0IsbUNBQXBCO0FBQ0Esd0JBQUlELE1BQUosRUFDSSxLQUFLQyxZQUFMLEdBQW9CRCxTQUFTLEdBQVQsR0FBZSxLQUFLQyxZQUF4Qzs7QUFFSkMsNEJBQVFDLE1BQVIsQ0FBZUMsU0FBZixDQUF5QkMsWUFBekIsR0FBd0MsVUFBVUEsWUFBVixFQUF3QkMsUUFBeEIsRUFBa0M7QUFDdEVDLG9DQUFZQyxRQUFaLENBQXFCQyxPQUFyQixDQUE2QkMsWUFBN0IsQ0FBMEMsS0FBS1QsWUFBL0MsRUFBNkQsVUFBVVUsV0FBVixFQUF1QkMsS0FBdkIsRUFBOEI7QUFDdkYsaUNBQUtDLFVBQUwsQ0FBZ0JGLFdBQWhCO0FBQ0FMLHFDQUFVLENBQUNLLFdBQUQsR0FBZSxFQUFDRyxTQUFTRixNQUFNRSxPQUFoQixFQUFmLEdBQTBDLEtBQXBELEVBQTRELEVBQUNDLGNBQWNKLFdBQWYsRUFBNEJLLElBQUksRUFBaEMsRUFBNUQ7QUFDSCx5QkFINEQsQ0FHM0RDLElBSDJELENBR3RELElBSHNELENBQTdEO0FBSUgscUJBTHVDLENBS3RDQSxJQUxzQyxDQUtqQyxJQUxpQyxDQUF4QztBQU1IOzs7O29EQUVlO0FBQ1osK0JBQU8sSUFBSWYsUUFBUWdCLFVBQVosQ0FBdUI7QUFDMUJDLG9DQUFTLElBQUlqQixRQUFRQyxNQUFaLENBQW1CLEVBQUNpQixVQUFXLElBQVosRUFBa0JDLGNBQWMsSUFBaEMsRUFBbkIsQ0FEaUI7QUFFMUJWLHlDQUFjLEtBQUtXLGNBQUwsRUFGWTtBQUcxQmpCLDBDQUFjO0FBSFkseUJBQXZCLENBQVA7QUFLSDs7O3FEQUVnQjtBQUNiLDRCQUFHLE9BQU9rQixjQUFQLEtBQTBCLFdBQTdCLEVBQ0ksT0FBTyxFQUFQOztBQUVKLCtCQUFPQSxlQUFlQyxPQUFmLENBQXVCLEtBQUt2QixZQUE1QixDQUFQO0FBQ0g7OzsrQ0FFVVUsVyxFQUFhO0FBQ3BCLDRCQUFHLE9BQU9ZLGNBQVAsS0FBMEIsV0FBN0IsRUFDSTs7QUFFSkEsdUNBQWVFLE9BQWYsQ0FBdUIsS0FBS3hCLFlBQTVCLEVBQTBDVSxXQUExQztBQUNIIiwiZmlsZSI6IlJlbW90ZU9BdXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFJlbW90ZU9BdXRoIHtcblxuICAgIGNvbnN0cnVjdG9yKHByZWZpeCkge1xuICAgICAgICB0aGlzLnJlbW90ZUFjdGlvbiA9ICdPQXV0aEV4dGVuc2lvbi5yZWZyZXNoQWNjZXNzVG9rZW4nO1xuICAgICAgICBpZiAocHJlZml4KVxuICAgICAgICAgICAgdGhpcy5yZW1vdGVBY3Rpb24gPSBwcmVmaXggKyAnLicgKyB0aGlzLnJlbW90ZUFjdGlvbjtcblxuICAgICAgICBqc2ZvcmNlLk9BdXRoMi5wcm90b3R5cGUucmVmcmVzaFRva2VuID0gZnVuY3Rpb24gKHJlZnJlc2hUb2tlbiwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIFZpc3VhbGZvcmNlLnJlbW90aW5nLk1hbmFnZXIuaW52b2tlQWN0aW9uKHRoaXMucmVtb3RlQWN0aW9uLCBmdW5jdGlvbiAoYWNjZXNzVG9rZW4sIGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jYWNoZVRva2VuKGFjY2Vzc1Rva2VuKTtcbiAgICAgICAgICAgICAgICBjYWxsYmFjaygoIWFjY2Vzc1Rva2VuID8ge21lc3NhZ2U6IGV2ZW50Lm1lc3NhZ2V9IDogZmFsc2UpLCB7YWNjZXNzX3Rva2VuOiBhY2Nlc3NUb2tlbiwgaWQ6ICcnfSk7XG4gICAgICAgICAgICB9LmJpbmQodGhpcykpO1xuICAgICAgICB9LmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgZ2V0Q29ubmVjdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBqc2ZvcmNlLkNvbm5lY3Rpb24oe1xuICAgICAgICAgICAgb2F1dGgyIDogbmV3IGpzZm9yY2UuT0F1dGgyKHtjbGllbnRJZCA6IHRydWUsIGNsaWVudFNlY3JldDogdHJ1ZX0pLFxuICAgICAgICAgICAgYWNjZXNzVG9rZW4gOiB0aGlzLmdldENhY2hlZFRva2VuKCksXG4gICAgICAgICAgICByZWZyZXNoVG9rZW46ICcnXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldENhY2hlZFRva2VuKCkge1xuICAgICAgICBpZih0eXBlb2Ygc2Vzc2lvblN0b3JhZ2UgPT09ICd1bmRlZmluZWQnKVxuICAgICAgICAgICAgcmV0dXJuICcnO1xuXG4gICAgICAgIHJldHVybiBzZXNzaW9uU3RvcmFnZS5nZXRJdGVtKHRoaXMucmVtb3RlQWN0aW9uKTtcbiAgICB9XG5cbiAgICBjYWNoZVRva2VuKGFjY2Vzc1Rva2VuKSB7XG4gICAgICAgIGlmKHR5cGVvZiBzZXNzaW9uU3RvcmFnZSA9PT0gJ3VuZGVmaW5lZCcpXG4gICAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSh0aGlzLnJlbW90ZUFjdGlvbiwgYWNjZXNzVG9rZW4pO1xuICAgIH1cbn0iXX0=
'use strict';

System.register('common/data/client/RestClient.js', ['common/oauth/OAuth.js'], function (_export, _context) {
	var OAuth, _createClass, RestClient;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_commonOauthOAuthJs) {
			OAuth = _commonOauthOAuthJs.OAuth;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('RestClient', RestClient = function () {
				function RestClient() {
					_classCallCheck(this, RestClient);
				}

				_createClass(RestClient, [{
					key: 'read',
					value: function read(prefix, reader, uid) {
						this.prefix = prefix;
						return new Promise(function (resolve, reject) {
							this._getApex().then(function (apex) {
								apex.get(this._getEndpoint() + '?reader=' + reader + '&uid=' + uid).then(function (result) {
									this._handleResult(resolve, reject, result);
								}.bind(this), function (err) {
									reject(err.message || err);
								});
							}.bind(this), function (err) {
								reject(err.message || err);
							});
						}.bind(this));
					}
				}, {
					key: 'load',
					value: function load(prefix, loader, uid, context) {
						this.prefix = prefix;
						return new Promise(function (resolve, reject) {
							this._getApex().then(function (apex) {
								apex.patch(this._getEndpoint() + '?loader=' + loader + '&uid=' + uid, {
									context: JSON.stringify(context)
								}).then(function (result) {
									this._handleResult(resolve, reject, result);
								}.bind(this), function (err) {
									reject(err.message || err);
								});
							}.bind(this), function (err) {
								reject(err.message || err);
							});
						}.bind(this));
					}
				}, {
					key: 'save',
					value: function save(prefix, saver, model) {
						this.prefix = prefix;
						return new Promise(function (resolve, reject) {
							this._getApex().then(function (apex) {
								apex.post(this._getEndpoint(), {
									saver: saver,
									model: JSON.stringify(model)
								}).then(function (result) {
									this._handleResult(resolve, reject, result);
								}.bind(this), function (err) {
									reject(err.message || err);
								});
							}.bind(this), function (err) {
								reject(err.message || err);
							});
						}.bind(this));
					}
				}, {
					key: 'md',
					value: function md(prefix, type, fullNames) {
						return new Promise(function (resolve, reject) {
							this._getApex().then(function (apex) {
								apex.post(null, {
									saver: 'md.read',
									model: JSON.stringify({
										type: type,
										fullNames: fullNames
									})
								}).then(function (result) {
									this._handleResult(resolve, reject, result);
								}.bind(this), function (err) {
									reject(err.message || err);
								});
							}.bind(this), function (err) {
								reject(err.message || err);
							});
						}.bind(this));
					}
				}, {
					key: 'setConnection',
					value: function setConnection(conn) {
						this.connection = conn;
					}
				}, {
					key: '_getApex',
					value: function _getApex() {
						if (this.connection) return Promise.resolve(this.connection.apex);

						if (typeof window === 'undefined') return Promise.reject('Connection not set');

						this.oauth = this.oauth || new OAuth();
						return this._getConnection(this.oauth);
					}
				}, {
					key: '_getConnection',
					value: function _getConnection(oauth) {
						return new Promise(function (resolve, reject) {
							oauth.getConnection().then(function (conn) {
								this.connection = conn;
								resolve(this.connection.apex);
							}.bind(this), function (err) {
								reject(err.message || err);
							});
						}.bind(this));
					}
				}, {
					key: '_getEndpoint',
					value: function _getEndpoint() {
						return this._getPrefix() + '/ServiceRouter';
					}
				}, {
					key: '_getPrefix',
					value: function _getPrefix() {
						return this.prefix ? '/' + this.prefix : '';
					}
				}, {
					key: '_handleResult',
					value: function _handleResult(resolve, reject, result) {
						if (result.proxy) {
							this._handleProxyResult(resolve, reject, result.proxy);
							return;
						}
						resolve(parse(result));
					}
				}, {
					key: '_handleProxyResult',
					value: function _handleProxyResult(resolve, reject, proxyResult) {
						if (proxyResult.error) {
							this._handleProxyErrorResult(reject, proxyResult.error);
							return;
						}
						if (this.oauth && proxyResult.accessToken) this.oauth.accessToken = proxyResult.accessToken;

						resolve(this._parse(proxyResult.response));
					}
				}, {
					key: '_handleProxyErrorResult',
					value: function _handleProxyErrorResult(reject, error) {
						console.warn('Service Proxy Exception: ' + this._adjustProxyErrorMessage(error));
						reject(error);
					}
				}, {
					key: '_adjustProxyErrorMessage',
					value: function _adjustProxyErrorMessage(errorMessage) {
						if (errorMessage === 'expired access/refresh token') errorMessage += ' - to authorize go to http://localhost:' + location.port + '/common/oauth';

						return errorMessage;
					}
				}, {
					key: '_parse',
					value: function _parse(obj) {
						try {
							return JSON.parse(obj);
						} catch (e) {
							return obj;
						}
					}
				}]);

				return RestClient;
			}());

			_export('RestClient', RestClient);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/data/client/ServiceClient.js', ['common/data/client/RemoteClient.js', 'common/data/client/RestClient.js'], function (_export, _context) {
	var RemoteClient, RestClient, _createClass, ServiceClient;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_commonDataClientRemoteClientJs) {
			RemoteClient = _commonDataClientRemoteClientJs.RemoteClient;
		}, function (_commonDataClientRestClientJs) {
			RestClient = _commonDataClientRestClientJs.RestClient;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('ServiceClient', ServiceClient = function () {
				function ServiceClient() {
					_classCallCheck(this, ServiceClient);

					this.client = typeof Visualforce !== 'undefined' ? new RemoteClient() : new RestClient();
				}

				_createClass(ServiceClient, [{
					key: 'read',
					value: function read(prefix, reader, uid) {
						return this.client.read(prefix, reader, uid);
					}
				}, {
					key: 'load',
					value: function load(prefix, loader, uid, context) {
						return this.client.load(prefix, loader, uid, context);
					}
				}, {
					key: 'save',
					value: function save(prefix, saver, model) {
						return this.client.save(prefix, saver, model);
					}
				}, {
					key: 'md',
					value: function md(prefix, type, fullNames) {
						return this.client.md(prefix, type, fullNames);
					}
				}, {
					key: 'setConnection',
					value: function setConnection(conn) {
						if (typeof this.client.setConnection === 'function') this.client.setConnection(conn);
					}
				}]);

				return ServiceClient;
			}());

			_export('ServiceClient', ServiceClient);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcnZpY2VDbGllbnQuanMiXSwibmFtZXMiOlsiUmVtb3RlQ2xpZW50IiwiUmVzdENsaWVudCIsIlNlcnZpY2VDbGllbnQiLCJjbGllbnQiLCJWaXN1YWxmb3JjZSIsInByZWZpeCIsInJlYWRlciIsInVpZCIsInJlYWQiLCJsb2FkZXIiLCJjb250ZXh0IiwibG9hZCIsInNhdmVyIiwibW9kZWwiLCJzYXZlIiwidHlwZSIsImZ1bGxOYW1lcyIsIm1kIiwiY29ubiIsInNldENvbm5lY3Rpb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBUUEsZSxtQ0FBQUEsWTs7QUFDQUMsYSxpQ0FBQUEsVTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzRCQUVLQyxhO0FBRVosNkJBQWM7QUFBQTs7QUFDYixVQUFLQyxNQUFMLEdBQWMsT0FBT0MsV0FBUCxLQUF1QixXQUF2QixHQUFxQyxJQUFJSixZQUFKLEVBQXJDLEdBQTBELElBQUlDLFVBQUosRUFBeEU7QUFDQTs7OzswQkFFSUksTSxFQUFRQyxNLEVBQVFDLEcsRUFBSztBQUN6QixhQUFPLEtBQUtKLE1BQUwsQ0FBWUssSUFBWixDQUFpQkgsTUFBakIsRUFBeUJDLE1BQXpCLEVBQWlDQyxHQUFqQyxDQUFQO0FBQ0E7OzswQkFFSUYsTSxFQUFRSSxNLEVBQVFGLEcsRUFBS0csTyxFQUFTO0FBQ2xDLGFBQU8sS0FBS1AsTUFBTCxDQUFZUSxJQUFaLENBQWlCTixNQUFqQixFQUF5QkksTUFBekIsRUFBaUNGLEdBQWpDLEVBQXNDRyxPQUF0QyxDQUFQO0FBQ0E7OzswQkFFSUwsTSxFQUFRTyxLLEVBQU9DLEssRUFBTztBQUMxQixhQUFPLEtBQUtWLE1BQUwsQ0FBWVcsSUFBWixDQUFpQlQsTUFBakIsRUFBeUJPLEtBQXpCLEVBQWdDQyxLQUFoQyxDQUFQO0FBQ0E7Ozt3QkFFRVIsTSxFQUFRVSxJLEVBQU1DLFMsRUFBVztBQUMzQixhQUFPLEtBQUtiLE1BQUwsQ0FBWWMsRUFBWixDQUFlWixNQUFmLEVBQXVCVSxJQUF2QixFQUE2QkMsU0FBN0IsQ0FBUDtBQUNBOzs7bUNBRWFFLEksRUFBTTtBQUNuQixVQUFHLE9BQU8sS0FBS2YsTUFBTCxDQUFZZ0IsYUFBbkIsS0FBcUMsVUFBeEMsRUFDQyxLQUFLaEIsTUFBTCxDQUFZZ0IsYUFBWixDQUEwQkQsSUFBMUI7QUFDRCIsImZpbGUiOiJTZXJ2aWNlQ2xpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZW1vdGVDbGllbnR9IGZyb20gJ2NvbW1vbi9kYXRhL2NsaWVudC9SZW1vdGVDbGllbnQuanMnO1xuaW1wb3J0IHtSZXN0Q2xpZW50fSBmcm9tICdjb21tb24vZGF0YS9jbGllbnQvUmVzdENsaWVudC5qcyc7XG5cbmV4cG9ydCBjbGFzcyBTZXJ2aWNlQ2xpZW50IHtcblxuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHR0aGlzLmNsaWVudCA9IHR5cGVvZiBWaXN1YWxmb3JjZSAhPT0gJ3VuZGVmaW5lZCcgPyBuZXcgUmVtb3RlQ2xpZW50KCkgOiBuZXcgUmVzdENsaWVudCgpO1xuXHR9XG5cblx0cmVhZChwcmVmaXgsIHJlYWRlciwgdWlkKSB7XG5cdFx0cmV0dXJuIHRoaXMuY2xpZW50LnJlYWQocHJlZml4LCByZWFkZXIsIHVpZCk7XG5cdH1cblxuXHRsb2FkKHByZWZpeCwgbG9hZGVyLCB1aWQsIGNvbnRleHQpIHtcblx0XHRyZXR1cm4gdGhpcy5jbGllbnQubG9hZChwcmVmaXgsIGxvYWRlciwgdWlkLCBjb250ZXh0KTtcblx0fVxuXG5cdHNhdmUocHJlZml4LCBzYXZlciwgbW9kZWwpIHtcblx0XHRyZXR1cm4gdGhpcy5jbGllbnQuc2F2ZShwcmVmaXgsIHNhdmVyLCBtb2RlbCk7XG5cdH1cblxuXHRtZChwcmVmaXgsIHR5cGUsIGZ1bGxOYW1lcykge1xuXHRcdHJldHVybiB0aGlzLmNsaWVudC5tZChwcmVmaXgsIHR5cGUsIGZ1bGxOYW1lcyk7XG5cdH1cblxuXHRzZXRDb25uZWN0aW9uKGNvbm4pIHtcblx0XHRpZih0eXBlb2YgdGhpcy5jbGllbnQuc2V0Q29ubmVjdGlvbiA9PT0gJ2Z1bmN0aW9uJylcblx0XHRcdHRoaXMuY2xpZW50LnNldENvbm5lY3Rpb24oY29ubik7XG5cdH1cbn0iXX0=
'use strict';

System.register('common/data/sb-db/Db.js', ['common/data/sb-db/Metadata.js'], function (_export, _context) {
	var Metadata, _createClass, ID_DELIM, JS_DEF, REL_PROP, md, Db, Model;

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function enhanceProperties(obj) {
		if (obj && obj.properties) {
			var requiredProps = {};
			for (var p in obj.required) {
				requiredProps[obj.required[p]] = true;
			}for (var prop in obj.properties) {
				var _p = obj.properties[prop],
				    type = _p.type;

				_p.id = _p.id ? _p.id : prop;
				if (requiredProps[prop]) _p.required = true;

				switch (_p.type) {
					case 'array':
						if (_p.items && _p.items.enum) type = 'enum';else if (_p.items && _p.items.$ref) type = _p.$_md ? 'md' : 'lookup';
						break;
					case 'string':
						switch (_p.format) {
							case 'date':
								type = 'date';break;
							case 'date-time':
								type = 'datetime';break;
							case 'email':
								type = 'email';break;
							case 'html':
								type = 'richstring';break;
							case 'uri':
								type = 'url';break;
							case 'phone':
								type = 'phone';break;
							case 'autonumber':
								type = 'autonumber';break;
						}
						break;
					case 'integer':
						type = 'number';
						break;
					case 'number':
						switch (_p.format) {
							case 'currency':
								type = 'currency';break;
							case 'percent':
								type = 'percent';break;
							case 'rollup':
								type = 'rollup';break;
						}
						break;
				}

				if (_p.$ref) type = _p.$_md ? 'md' : 'lookup';

				type = _p.enum ? 'enum' : type;
				type = _p.$_formula ? 'formula' : type;

				_p.$_type = type;
			}
		}
	}

	function initRelationships(obj, defs) {
		if (obj.schema && obj.schema.properties) {
			for (var p in obj.schema.properties) {
				var $ref = obj.schema.properties[p].$ref,
				    isArray = obj.schema.properties[p].type === 'array',
				    items = obj.schema.properties[p].items;

				if ($ref || isArray && items && items.$ref) {
					var rels = obj.schema[REL_PROP] || {};
					rels[p] = { obj: $ref };

					if (isArray) {
						rels[p].obj = items.$ref;
						rels[p].isMany = true;
					}
					obj.schema[REL_PROP] = rels;
				}
			}
		}
	}

	return {
		setters: [function (_commonDataSbDbMetadataJs) {
			Metadata = _commonDataSbDbMetadataJs;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			ID_DELIM = '_';
			JS_DEF = '#/definitions/';
			REL_PROP = '$_relations';
			md = {
				schema: Metadata.schema,
				objectLayouts: Metadata.objectLayouts
			};

			_export('Db', Db = function () {
				function Db() {
					_classCallCheck(this, Db);
				}

				_createClass(Db, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-db';
						this.properties = {
							item: {
								type: Object,
								notify: true
							},

							uid: String,

							items: {
								type: Array,
								notify: true
							},

							model: {
								type: String,
								observer: '_modelChanged'
							},

							modelClass: {
								type: Object
							}
						};

						Db.initObjectLayouts(md.objectLayouts, this);
						Db.fromSchema(md.schema, this);
					}
				}, {
					key: 'get',
					value: function get() {
						if (!this.modelClass) throw new Error('sb-db cannot get all records because modelClass is null');

						return this.modelClass.get().then(function (records) {
							var len = records ? records.length : 0;
							for (var i = 0; i < len; i++) {
								records[i] = new this.modelClass(records[i]);
							}this.items = records;
							this.foo = records;
						}.bind(this));
					}
				}, {
					key: 'save',
					value: function save() {}
				}, {
					key: 'remove',
					value: function remove(o) {
						if (Array.isArray(o)) {
							for (var obj in o) {
								o[obj]._deleted = true;
							}

							return this.modelClass.remove(o).then(function () {
								this.items = this.items.filter(function (n) {
									return !n._deleted;
								});
							}.bind(this));
						} else if (o && o.id && o.remove) {
							return o.remove().then(function () {
								this.item = {};
							});
						}
					}
				}, {
					key: '_get',
					value: function _get(modelClass, id) {
						if (modelClass && id && typeof id === 'string') {
							modelClass.get(id).then(function (item) {
								this.item = new modelClass(item);
							}.bind(this));
						}
					}
				}, {
					key: '_getNew',
					value: function _getNew(modelClass, item) {
						if (item && !item.id && modelClass && item.constructor !== modelClass) {
							this.item = new modelClass(item);
						}
					}
				}, {
					key: '_modelChanged',
					value: function _modelChanged(nv, ov) {
						if (!this.modelClass) this.modelClass = Db[nv];
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['_get( modelClass, uid )', '_getNew( modelClass, item )'];
					}
				}], [{
					key: 'initObjectLayouts',
					value: function initObjectLayouts(layouts, con) {
						Db.objectLayouts = md.objectLayouts = layouts;
						if (con) con.objectLayouts = layouts;
					}
				}, {
					key: 'fromSchema',
					value: function fromSchema(schema, con) {
						if (schema && schema.definitions) {
							md.schema = schema;
							for (var d in schema.definitions) {
								var clazz = function (_Model) {
									_inherits(DomainObject, _Model);

									function DomainObject() {
										_classCallCheck(this, DomainObject);

										return _possibleConstructorReturn(this, (DomainObject.__proto__ || Object.getPrototypeOf(DomainObject)).apply(this, arguments));
									}

									return DomainObject;
								}(Model);
								clazz.schema = schema.definitions[d];
								clazz.db = Db;

								enhanceProperties(clazz.schema);
								initRelationships(clazz);

								Db[d] = clazz;
								if (con) con[d] = clazz;
							}
						}
					}
				}]);

				return Db;
			}());

			_export('Db', Db);

			Model = function () {
				function Model(obj) {
					_classCallCheck(this, Model);

					var keys = Object.keys(obj),
					    len = keys ? keys.length : 0;

					for (var i = 0; i < len; i++) {
						var key = keys[i];
						if (key !== 'save' && key !== 'remove') this[key] = obj[key];
					}
				}

				_createClass(Model, [{
					key: 'save',
					value: function save() {
						return this.constructor.db.adapter.save(this);
					}
				}, {
					key: 'remove',
					value: function remove() {
						return this.constructor.db.adapter.remove(this);
					}
				}], [{
					key: 'save',
					value: function save(objs) {
						return this.db.adapter.save(objs);
					}
				}, {
					key: 'remove',
					value: function remove(objs) {
						return this.db.adapter.remove(objs);
					}
				}, {
					key: 'get',
					value: function get(id) {
						return this.db.adapter.get(id, this);
					}
				}, {
					key: 'md',
					value: function md() {
						return this.schema;
					}
				}, {
					key: 'relationships',
					value: function relationships() {
						return this.schema[REL_PROP];
					}
				}]);

				return Model;
			}();

			Polymer(Db);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
"use strict";

System.register("common/data/sb-db/Metadata.js", [], function (_export, _context) {
	var schema, objectLayouts;
	return {
		setters: [],
		execute: function () {
			_export("schema", schema = {
				"$schema": "http://json-schema.org/draft-04/schema#",
				"id": "/",
				"definitions": {
					"Product": {
						"id": "Product",
						"title": "Product",
						"titlePlural": "Products",
						"type": "object",
						"properties": {
							"id": {
								"title": "ID",
								"type": "string"
							},
							"name": {
								"title": "Name",
								"type": "string"
							},
							"code": {
								"title": "Code",
								"type": "string"
							},
							"createdBy": {
								"title": "Created By",
								"$ref": "User"
							},
							"createdDate": {
								"title": "Created Date",
								"type": "string",
								"format": "date-time"
							},
							"lastModifiedBy": {
								"title": "Modified By",
								"$ref": "User"
							},
							"lastModified": {
								"title": "Last Modified Date",
								"type": "string",
								"format": "date-time"
							}
						},
						"required": ["id", "createdBy", "createdDate", "lastModifiedBy", "lastModifiedDate", "name"]
					},
					"Opportunity": {
						"id": "Opportunity",
						"title": "Opportunity",
						"titlePlural": "Opportunities",
						"type": "object",
						"properties": {
							"id": {
								"title": "ID",
								"type": "string"
							},
							"name": {
								"title": "Name",
								"type": "string"
							},
							"createdBy": {
								"title": "Created By",
								"$ref": "User"
							},
							"createdDate": {
								"title": "Created Date",
								"type": "string",
								"format": "date-time"
							},
							"lastModifiedBy": {
								"title": "Modified By",
								"$ref": "User"
							},
							"lastModified": {
								"title": "Last Modified Date",
								"type": "string",
								"format": "date-time"
							},
							"account": {
								"title": "Account",
								"$ref": "Account"
							},
							"amount": {
								"title": "Amount",
								"type": "number"
							},
							"description": {
								"title": "Description",
								"type": "string",
								"maxLength": 32000
							},
							"probability": {
								"title": "Probability",
								"type": "number"
							},
							"closeDate": {
								"title": "Close Date",
								"type": "string",
								"format": "date-time"
							},
							"nextStep": {
								"title": "Next Step",
								"type": "string"
							},
							"leadSource": {
								"title": "Lead Source",
								"enum": ["Web", "Phone Inquiry", "Partner Retai", "Purchased List", "Other"]
							},
							"type": {
								"title": "Type",
								"enum": ["Existing Customer - Upgrade", "Existing Customer - Replacement", "Existing Customer - Downgrade", "New Customer"]
							},
							"stageName": {
								"title": "Stage",
								"enum": ["Prospecting", "Qualification", "Needs Analysis", "Value Proposition", "Id. Decision Makers", "Perception Analysis", "Proposal/Price Quote", "Negotiation/Review", "Closed Won", "Closed Lost"]
							},
							"owner": {
								"title": "Owner",
								"$ref": "User"
							},
							"primaryQuote": {
								"title": "Primary Quote",
								"$ref": "Quote"
							},
							"quotePricebookId": {
								"title": "Quote Pricebook ID",
								"type": "string"
							},
							"renewal": {
								"title": "Renewal",
								"type": "boolean"
							},
							"contracted": {
								"title": "Contracted",
								"type": "boolean"
							},
							"renewedContract": {
								"title": "Renewed Contract",
								"$ref": "Quote"
							}
						},
						"required": ["id", "createdBy", "createdDate", "lastModifiedBy", "lastModifiedDate", "name"]
					},
					"User": {
						"id": "User",
						"title": "User",
						"titlePlural": "Users",
						"type": "object",
						"properties": {
							"id": {
								"title": "ID",
								"type": "string"
							},
							"lastname": {
								"title": "Last Name",
								"type": "string"
							},
							"firstname": {
								"title": "First Name",
								"type": "string"
							},
							"fullname": {
								"title": "Full Name",
								"type": "string"
							},
							"email": {
								"title": "Email",
								"type": "string",
								"format": "email"
							},
							"username": {
								"title": "Username",
								"type": "string"
							},
							"active": {
								"title": "Active",
								"type": "boolean"
							}
						},
						"required": ["id", "name", "username"]
					},
					"Quote": {
						"id": "Quote",
						"title": "Quote",
						"titlePlural": "Quotes",
						"type": "object",
						"properties": {
							"additionalDiscount": {
								"title": "Additional Discount",
								"type": "number"
							},
							"createdBy": {
								"title": "Created By",
								"$ref": "User"
							},
							"createdDate": {
								"title": "Created Date",
								"type": "string",
								"format": "date-time"
							},
							"endDate": {
								"title": "End Date",
								"type": "string",
								"format": "date-time"
							},
							"lastModifiedBy": {
								"title": "Modified By",
								"$ref": "User"
							},
							"lastModified": {
								"title": "Last Modified Date",
								"type": "string",
								"format": "date-time"
							},
							"lineItemCount": {
								"title": "Line Item Count",
								"type": "integer",
								"minimum": 0
							},
							"lines": {
								"title": "Lines",
								"type": "array",
								"items": { "$ref": "QuoteLine" },
								"$_md": true
							},
							"name": {
								"title": "Name",
								"type": "string"
							},
							"note": {
								"title": "Note",
								"type": "string"
							},
							"opportunity": {
								"title": "Opportunity",
								"$ref": "Opportunity"
							},
							"startDate": {
								"title": "Start Date",
								"type": "string",
								"format": "date-time"
							},
							"status": {
								"title": "Status",
								"enum": ["Draft", "In Review", "Approved", "Denied", "Presented", "Accepted", "Rejected"]
							},
							"paymentTerms": {
								"title": "Payment Terms",
								"enum": ["Due on Receipt", "Net 15", "Net 30", "Net 45", "Net 60", "Net 90"]
							},
							"type": {
								"title": "Type",
								"enum": ["Quote", "Renewal", "Amendment", "Change Order"]
							}
						}
					},
					"QuoteLine": {
						"id": "QuoteLine",
						"title": "Quote Line",
						"titlePlural": "Quote Lines",
						"type": "object",
						"properties": {
							"additionalDiscount": {
								"title": "Additional Discount",
								"type": "number"
							},
							"createdBy": {
								"title": "Created By",
								"$ref": "User"
							},
							"createdDate": {
								"title": "Created Date",
								"type": "string",
								"format": "date-time"
							},
							"endDate": {
								"title": "End Date",
								"type": "string",
								"format": "date-time"
							},
							"netUnitPrice": {
								"title": "Net Unit Price",
								"type": "number",
								"multipleOf": "0.01"
							},
							"netTotal": {
								"title": "Net Total",
								"type": "number",
								"multipleOf": "0.01",
								"$_formula": "netUnitPrice * quantity"
							},
							"lastModifiedBy": {
								"title": "Modified By",
								"$ref": "User"
							},
							"lastModified": {
								"title": "Last Modified Date",
								"type": "string",
								"format": "date-time"
							},
							"listUnitPrice": {
								"title": "List Unit Price",
								"type": "number",
								"multipleOf": "0.01"
							},
							"product": {
								"title": "Product",
								"$ref": "Product"
							},
							"productCode": {
								"title": "Product Code",
								"type": "string",
								"$_formula": "product.code"
							},
							"productName": {
								"title": "Product Name",
								"type": "string",
								"$_formula": "product.name"
							},
							"quantity": {
								"title": "Quantity",
								"type": "number",
								"multipleOf": "0.01"
							},
							"quote": {
								"title": "Quote",
								"$ref": "Quote",
								"$_md": true
							},
							"startDate": {
								"title": "Start Date",
								"type": "string",
								"format": "date-time"
							}
						}
					}
				}
			});

			_export("schema", schema);

			_export("objectLayouts", objectLayouts = {
				Quote: {
					list: {
						'all': {
							label: 'All',
							columns: [{ field: 'name', link: true }, { field: 'Opportunity', link: true }, { field: 'type' }, { field: 'primary' }, { field: 'lineItemsGrouped' }, { field: 'netAmount' }, { field: 'status' }, { field: 'expirationDate' }, { field: 'lastModifiedDate' }, { field: 'lastModifiedBy' }]
						}
					},
					detail: {
						'default': {
							titleAttr: 'Name',
							sections: [{
								label: 'Information',
								fields: [[{ name: 'name' }, { name: 'Primary' }, { name: 'Status', required: true }, { name: 'ExpirationDate' }, { name: 'SalesRep' }, { name: 'PrimaryContact' }, { name: 'SubscriptionTerm' }, { name: 'DeliveryMethod' }, { name: 'MasterContract' }], [{ name: 'Opportunity' }, { name: 'NetAmount' }, { name: 'CustomerAmount' }, { name: 'RegularAmount' }, { name: 'ListAmount' }, { name: 'Type', required: true }, { name: 'PaymentTerms' }]]
							}, {
								label: 'Discount Information',
								fields: []
							}]
						}
					}
				},

				Opportunity: {
					list: {
						'all': {
							label: 'All',
							columns: [{ field: 'name', link: true }, { field: 'account', link: true }, { field: 'amount' }, { field: 'closeDate' }, { field: 'stageName' }, { field: 'owner' }]
						}
					},
					detail: {
						'default': {
							titleAttr: 'name',
							sections: [{
								label: 'Opportunity Information',
								fields: [[{ name: 'owner', editable: false }, { name: 'name', required: true }, { name: 'account' }, { name: 'type' }, { name: 'leadSource' }], [{ name: 'closeDate', required: true }, { name: 'stageName', required: true }, { name: 'nextStep' }, { name: 'probability' }, { name: 'amount' }]]
							}, {
								label: 'Description Information',
								fields: [[{ name: 'description' }]]
							}, {
								label: 'SteelBrick Information',
								fields: [[{ name: 'primaryQuote' }, { name: 'quotePricebookId' }], [{ name: 'contracted' }, { name: 'renewal' }, { name: 'renewedContract' }]]
							}],
							relatedLists: [{ entity: 'quote' }, { entity: 'quotedoc' }]
						}
					}
				},

				User: {
					list: {
						'all': {
							label: 'All',
							columns: [{ field: 'Username', link: true }, { field: 'Firstname' }, { field: 'Lastname' }, { field: 'Active' }, { field: 'Alias' }]
						}
					},
					detail: {
						'default': {
							titleAttr: 'Username',
							sections: [{
								label: 'General Information',
								fields: [[{ name: 'Id', editable: false }, { name: 'Username' }, { name: 'Firstname' }, { name: 'Lastname' }, { name: 'Email' }, { name: 'Alias' }, { name: 'Active' }]]
							}]
						}
					}
				}
			});

			_export("objectLayouts", objectLayouts);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/data/sb-service/Service.js', ['common/core/AppContext.js', 'common/data/client/ServiceClient.js', 'common/data/cache/Cache.js'], function (_export, _context) {
	var AppContext, ServiceClient, Cache, _createClass, Service;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_commonCoreAppContextJs) {
			AppContext = _commonCoreAppContextJs.AppContext;
		}, function (_commonDataClientServiceClientJs) {
			ServiceClient = _commonDataClientServiceClientJs.ServiceClient;
		}, function (_commonDataCacheCacheJs) {
			Cache = _commonDataCacheCacheJs.Cache;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('Service', Service = function (_AppContext) {
				_inherits(Service, _AppContext);

				function Service() {
					_classCallCheck(this, Service);

					return _possibleConstructorReturn(this, (Service.__proto__ || Object.getPrototypeOf(Service)).apply(this, arguments));
				}

				_createClass(Service, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-service';
						this.properties = Polymer.Base.extend({
							reader: String,
							loader: String,
							saver: String,
							uid: String,
							model: Object,
							context: Object,
							mdType: String,
							mdItems: Array,
							cache: String,
							waiting: {
								type: Boolean,
								notify: true
							},
							response: {
								type: Object,
								notify: true
							},
							error: {
								type: Object,
								notify: true
							},
							client: {
								type: Object,
								value: function value() {
									return new ServiceClient();
								}
							},
							transient: {
								type: Boolean
							},
							background: {
								type: Boolean,
								value: false
							}
						}, AppContext.properties);
					}
				}, {
					key: 'read',
					value: function read(request) {
						Polymer.Base.extend(this, request);
						var cachedResponse = Cache.get(this.cache, this.uid);
						if (cachedResponse) return this._response(Promise.resolve(cachedResponse));
						var cachedPromise = Cache.get(this.cache, this.uid, 'promise');
						if (cachedPromise) return cachedPromise;

						if (this.transient) return this._response(Promise.resolve(this.response));

						return this._response(this.client.read(this.app.org.prefix, this.reader, this.uid));
					}
				}, {
					key: 'load',
					value: function load(request) {
						Polymer.Base.extend(this, request);
						var cachedResponse = Cache.get(this.cache, this.uid);
						if (cachedResponse) return this._response(Promise.resolve(cachedResponse));
						var cachedPromise = Cache.get(this.cache, this.uid, 'promise');
						if (cachedPromise) return cachedPromise;

						if (this.transient) return this._response(Promise.resolve(this.response));

						return this._response(this.client.load(this.app.org.prefix, this.loader, this.uid, this.context));
					}
				}, {
					key: 'save',
					value: function save(request) {
						Polymer.Base.extend(this, request);
						if (this.transient) return this._response(Promise.resolve(this.model));

						return this._response(this.client.save(this.app.org.prefix, this.saver, this.model));
					}
				}, {
					key: 'md',
					value: function md(request) {
						Polymer.Base.extend(this, request);
						var cachedResponse = Cache.get(this.cache, this.uid);
						if (cachedResponse) return this._response(Promise.resolve(cachedResponse));
						var cachedPromise = Cache.get(this.cache, this.uid, 'promise');
						if (cachedPromise) return cachedPromise;

						var promiseArray = [];
						for (var i = 0, n = Math.ceil(this.mdItems.length / 10); i < n; i++) {
							promiseArray.push(this.client.md(this.app.org.prefix, this.mdType, this.mdItems.slice(i * 10, (i + 1) * 10)));
						}return this._responseAll(promiseArray);
					}
				}, {
					key: '_read',
					value: function _read() {
						this.read().then(function () {}, function (err) {
							console.error(err.message || err);
						});
					}
				}, {
					key: '_load',
					value: function _load() {
						this.load().then(function () {}, function (err) {
							console.error(err.message || err);
						});
					}
				}, {
					key: '_save',
					value: function _save() {
						this.save().then(function () {}, function (err) {
							console.error(err.message || err);
						});
					}
				}, {
					key: '_md',
					value: function _md() {
						this.md().then(function () {}, function (err) {
							console.error(err.message || err);
						});
					}
				}, {
					key: '_spinner',
					value: function _spinner() {
						this.spinner = this.waiting && !this.background;
					}
				}, {
					key: '_response',
					value: function _response(promise) {
						this.waiting = true;
						var newPromise = new Promise(function (resolve, reject) {
							promise.then(function (res) {
								this.waiting = false;
								if (res) this.response = res;
								Cache.remove(this.cache, this.uid, 'promise');
								resolve(this.response);
							}.bind(this), function (err) {
								this.waiting = false;
								if (err) this.error = this._createError(err);
								Cache.remove(this.cache, this.uid, 'promise');
								reject(this.error);
							}.bind(this));
						}.bind(this));
						Cache.add(this.cache, this.uid, newPromise, 'promise');
						return newPromise;
					}
				}, {
					key: '_responseAll',
					value: function _responseAll(promises) {
						this.waiting = true;
						var newPromise = Promise.all(promises).then(function (res) {
							for (var i = 0, l = res.length; i < l; i++) {
								if (res[i].constructor !== Array) res[i] = [res[i]];
							}
							this.waiting = false;
							this.response = [].concat.apply([], res);
							Cache.remove(this.cache, this.uid, 'promise');
							return Promise.resolve(this.response);
						}.bind(this), function (err) {
							this.waiting = false;
							if (err) this.error = this._createError(err);
							Cache.remove(this.cache, this.uid, 'promise');
							return Promise.reject(this.error);
						}.bind(this));

						Cache.add(this.cache, this.uid, newPromise, 'promise');
						return newPromise;
					}
				}, {
					key: '_cache',
					value: function _cache() {
						Cache.add(this.cache, this.uid, this.response);
					}
				}, {
					key: '_createError',
					value: function _createError(err) {
						var msg = err.message || err;
						var error = { message: msg };

						var validations;
						if (msg.indexOf('ValidationException: [') != -1 || msg.startsWith('[')) {
							var start = msg.indexOf('[');
							var end = msg.indexOf(']', start) + 1;
							if (end > start) validations = msg.substring(start, end);
						}

						if (validations) {
							try {
								var validationsArray = JSON.parse(validations);
								error.validations = validationsArray;
							} catch (e) {}
						}

						return error;
					}
				}, {
					key: 'listeners',
					get: function get() {
						return {
							'response-changed': '_cache'
						};
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['_read(reader, uid)', '_save(saver, model)', '_load(loader, uid, context)', '_md(mdType, mdItems)', '_spinner(waiting, background)'];
					}
				}]);

				return Service;
			}(AppContext));

			_export('Service', Service);

			Polymer(Service);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/entities/sb-entity-detail/EntityDetail.js', ['../../core/Page.js'], function (_export, _context) {
	var Page, _createClass, EntityDetail;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_corePageJs) {
			Page = _corePageJs.Page;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('EntityDetail', EntityDetail = function (_Page) {
				_inherits(EntityDetail, _Page);

				function EntityDetail() {
					_classCallCheck(this, EntityDetail);

					return _possibleConstructorReturn(this, (EntityDetail.__proto__ || Object.getPrototypeOf(EntityDetail)).apply(this, arguments));
				}

				_createClass(EntityDetail, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-entity-detail';
						this.properties = Polymer.Base.extend({
							model: String,
							modelClass: {
								type: Object,
								value: function value() {
									return {};
								}
							},
							id: {
								type: String,
								value: function value() {
									return '';
								}
							},
							isNew: {
								type: Boolean,
								value: function value() {
									return true;
								}
							},
							layout: {
								type: Object,
								value: function value() {
									return {};
								}
							},
							obj: {
								type: Object,
								value: function value() {
									return {};
								}
							}
						}, Page.properties);
					}
				}, {
					key: 'ready',
					value: function ready() {
						this.model = this.ctx.pathParams.type;
						this.modelClass = this.$.db[this.model];
						this.fields = this.modelClass.schema.properties;
						this.layout = this.$.db.objectLayouts[this.model].detail['default'];
						this.isNew = this.ctx.params.id ? false : true;
						this.id = this.ctx.params.id;
					}
				}, {
					key: 'getEntityField',
					value: function getEntityField(viewField) {
						return this.fields[viewField.name];
					}
				}, {
					key: 'getObjTitleLabel',
					value: function getObjTitleLabel(obj, layout) {
						return this.obj[layout.titleAttr];
					}
				}, {
					key: 'getObjFieldLabel',
					value: function getObjFieldLabel(viewField) {
						return this.getEntityField(viewField).title;
					}
				}, {
					key: 'getFieldValue',
					value: function getFieldValue(viewField) {
						return this.obj[viewField.name];
					}
				}, {
					key: 'isViewable',
					value: function isViewable(field) {
						var f = this.fields[field.name];
						if (!this.isNew || this.isNew && f.$_type != 'formula' && f.$_type != 'autonumber') return true;

						return false;
					}
				}, {
					key: 'cancel',
					value: function cancel() {
						this.nav('/entities/' + this.model);
					}
				}, {
					key: 'preview',
					value: function preview() {
						this.nav('/docgen/preview?id=' + this.obj.id);
					}
				}, {
					key: 'save',
					value: function save(e, detail, sender, navUrl) {
						return this.obj.save().then(function (o) {
							this.nav(navUrl ? navUrl : '/entities/' + this.model + '/detail?id=' + o.id);
						}.bind(this));
					}
				}, {
					key: 'saveNew',
					value: function saveNew(e, detail, sender) {
						this.save(e, detail, sender, '/entities/' + this.model + '/new').then(function () {
							window.dispatchEvent(new HashChangeEvent("hashchange"));
						});
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.Page];
					}
				}]);

				return EntityDetail;
			}(Page));

			_export('EntityDetail', EntityDetail);

			Polymer(EntityDetail);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkVudGl0eURldGFpbC5qcyJdLCJuYW1lcyI6WyJQYWdlIiwiRW50aXR5RGV0YWlsIiwiaXMiLCJwcm9wZXJ0aWVzIiwiUG9seW1lciIsIkJhc2UiLCJleHRlbmQiLCJtb2RlbCIsIlN0cmluZyIsIm1vZGVsQ2xhc3MiLCJ0eXBlIiwiT2JqZWN0IiwidmFsdWUiLCJpZCIsImlzTmV3IiwiQm9vbGVhbiIsImxheW91dCIsIm9iaiIsImN0eCIsInBhdGhQYXJhbXMiLCIkIiwiZGIiLCJmaWVsZHMiLCJzY2hlbWEiLCJvYmplY3RMYXlvdXRzIiwiZGV0YWlsIiwicGFyYW1zIiwidmlld0ZpZWxkIiwibmFtZSIsInRpdGxlQXR0ciIsImdldEVudGl0eUZpZWxkIiwidGl0bGUiLCJmaWVsZCIsImYiLCIkX3R5cGUiLCJuYXYiLCJlIiwic2VuZGVyIiwibmF2VXJsIiwic2F2ZSIsInRoZW4iLCJvIiwiYmluZCIsIndpbmRvdyIsImRpc3BhdGNoRXZlbnQiLCJIYXNoQ2hhbmdlRXZlbnQiLCJzYiIsImNvbW1vbiIsImNvcmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBUUEsTyxlQUFBQSxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBRUtDLFk7Ozs7Ozs7Ozs7O3NDQU1LO0FBQ2hCLFdBQUtDLEVBQUwsR0FBVSxrQkFBVjtBQUNBLFdBQUtDLFVBQUwsR0FBa0JDLFFBQVFDLElBQVIsQ0FBYUMsTUFBYixDQUFxQjtBQUN0Q0MsY0FBT0MsTUFEK0I7QUFFdENDLG1CQUFZO0FBQ1hDLGNBQU1DLE1BREs7QUFFWEMsZUFBTyxpQkFBVztBQUFFLGdCQUFPLEVBQVA7QUFBWTtBQUZyQixRQUYwQjtBQU10Q0MsV0FBSTtBQUNISCxjQUFNRixNQURIO0FBRUhJLGVBQU8saUJBQVc7QUFBRSxnQkFBTyxFQUFQO0FBQVk7QUFGN0IsUUFOa0M7QUFVdENFLGNBQU87QUFDTkosY0FBTUssT0FEQTtBQUVOSCxlQUFPLGlCQUFXO0FBQUUsZ0JBQU8sSUFBUDtBQUFjO0FBRjVCLFFBVitCO0FBY3RDSSxlQUFRO0FBQ1BOLGNBQU1DLE1BREM7QUFFUEMsZUFBTyxpQkFBVztBQUFFLGdCQUFPLEVBQVA7QUFBWTtBQUZ6QixRQWQ4QjtBQWtCdENLLFlBQUs7QUFDSlAsY0FBTUMsTUFERjtBQUVKQyxlQUFPLGlCQUFXO0FBQUUsZ0JBQU8sRUFBUDtBQUFZO0FBRjVCO0FBbEJpQyxPQUFyQixFQXNCZlosS0FBS0csVUF0QlUsQ0FBbEI7QUF1QkE7Ozs2QkFFTztBQUNQLFdBQUtJLEtBQUwsR0FBYSxLQUFLVyxHQUFMLENBQVNDLFVBQVQsQ0FBb0JULElBQWpDO0FBQ0EsV0FBS0QsVUFBTCxHQUFrQixLQUFLVyxDQUFMLENBQU9DLEVBQVAsQ0FBVyxLQUFLZCxLQUFoQixDQUFsQjtBQUNBLFdBQUtlLE1BQUwsR0FBYyxLQUFLYixVQUFMLENBQWdCYyxNQUFoQixDQUF1QnBCLFVBQXJDO0FBQ0EsV0FBS2EsTUFBTCxHQUFjLEtBQUtJLENBQUwsQ0FBT0MsRUFBUCxDQUFVRyxhQUFWLENBQXlCLEtBQUtqQixLQUE5QixFQUFzQ2tCLE1BQXRDLENBQTZDLFNBQTdDLENBQWQ7QUFDQSxXQUFLWCxLQUFMLEdBQWEsS0FBS0ksR0FBTCxDQUFTUSxNQUFULENBQWdCYixFQUFoQixHQUFxQixLQUFyQixHQUE2QixJQUExQztBQUNBLFdBQUtBLEVBQUwsR0FBVSxLQUFLSyxHQUFMLENBQVNRLE1BQVQsQ0FBZ0JiLEVBQTFCO0FBQ0E7OztvQ0FFZWMsUyxFQUFZO0FBQzNCLGFBQU8sS0FBS0wsTUFBTCxDQUFhSyxVQUFVQyxJQUF2QixDQUFQO0FBQ0E7OztzQ0FDaUJYLEcsRUFBS0QsTSxFQUFTO0FBQy9CLGFBQU8sS0FBS0MsR0FBTCxDQUFTRCxPQUFPYSxTQUFoQixDQUFQO0FBQ0E7OztzQ0FDaUJGLFMsRUFBWTtBQUM3QixhQUFPLEtBQUtHLGNBQUwsQ0FBcUJILFNBQXJCLEVBQWlDSSxLQUF4QztBQUNBOzs7bUNBQ2NKLFMsRUFBWTtBQUMxQixhQUFPLEtBQUtWLEdBQUwsQ0FBVVUsVUFBVUMsSUFBcEIsQ0FBUDtBQUNBOzs7Z0NBR1dJLEssRUFBUTtBQUNuQixVQUFJQyxJQUFJLEtBQUtYLE1BQUwsQ0FBWVUsTUFBTUosSUFBbEIsQ0FBUjtBQUNBLFVBQUksQ0FBQyxLQUFLZCxLQUFOLElBQWlCLEtBQUtBLEtBQUwsSUFBY21CLEVBQUVDLE1BQUYsSUFBWSxTQUExQixJQUF1Q0QsRUFBRUMsTUFBRixJQUFZLFlBQXhFLEVBQ0EsT0FBTyxJQUFQOztBQUVBLGFBQU8sS0FBUDtBQUNBOzs7OEJBRVE7QUFDUixXQUFLQyxHQUFMLENBQVUsZUFBZSxLQUFLNUIsS0FBOUI7QUFDQTs7OytCQUVTO0FBQ1QsV0FBSzRCLEdBQUwsQ0FBVSx3QkFBd0IsS0FBS2xCLEdBQUwsQ0FBU0osRUFBM0M7QUFDQTs7OzBCQUVLdUIsQyxFQUFHWCxNLEVBQVFZLE0sRUFBUUMsTSxFQUFTO0FBQ2pDLGFBQU8sS0FBS3JCLEdBQUwsQ0FBU3NCLElBQVQsR0FBZ0JDLElBQWhCLENBQXNCLFVBQVVDLENBQVYsRUFBYztBQUMxQyxZQUFLTixHQUFMLENBQVVHLFNBQVNBLE1BQVQsR0FBa0IsZUFBZSxLQUFLL0IsS0FBcEIsR0FBNEIsYUFBNUIsR0FBNENrQyxFQUFFNUIsRUFBMUU7QUFDQSxPQUY0QixDQUUzQjZCLElBRjJCLENBRXRCLElBRnNCLENBQXRCLENBQVA7QUFHQTs7OzZCQUVRTixDLEVBQUdYLE0sRUFBUVksTSxFQUFTO0FBQzVCLFdBQUtFLElBQUwsQ0FBV0gsQ0FBWCxFQUFjWCxNQUFkLEVBQXNCWSxNQUF0QixFQUE4QixlQUFlLEtBQUs5QixLQUFwQixHQUE0QixNQUExRCxFQUFtRWlDLElBQW5FLENBQXlFLFlBQVc7QUFFbkZHLGNBQU9DLGFBQVAsQ0FBcUIsSUFBSUMsZUFBSixDQUFvQixZQUFwQixDQUFyQjtBQUNBLE9BSEQ7QUFJQTs7O3lCQWpGZTtBQUNmLGFBQU8sQ0FBQ0MsR0FBR0MsTUFBSCxDQUFVQyxJQUFWLENBQWVoRCxJQUFoQixDQUFQO0FBQ0E7Ozs7S0FKZ0NBLEk7Ozs7QUFzRmxDSSxXQUFTSCxZQUFUIiwiZmlsZSI6IkVudGl0eURldGFpbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UGFnZX0gZnJvbSAnLi4vLi4vY29yZS9QYWdlLmpzJztcblxuZXhwb3J0IGNsYXNzIEVudGl0eURldGFpbCBleHRlbmRzIFBhZ2Uge1xuXG5cdGdldCBiZWhhdmlvcnMoKSB7XG5cdFx0cmV0dXJuIFtzYi5jb21tb24uY29yZS5QYWdlXTtcblx0fVxuXHRcblx0YmVmb3JlUmVnaXN0ZXIoKSB7XG5cdFx0dGhpcy5pcyA9ICdzYi1lbnRpdHktZGV0YWlsJztcblx0XHR0aGlzLnByb3BlcnRpZXMgPSBQb2x5bWVyLkJhc2UuZXh0ZW5kKCB7XG5cdFx0XHRtb2RlbDogU3RyaW5nLFxuXHRcdFx0bW9kZWxDbGFzczoge1xuXHRcdFx0XHR0eXBlOiBPYmplY3QsXG5cdFx0XHRcdHZhbHVlOiBmdW5jdGlvbigpIHsgcmV0dXJuIHt9OyB9XG5cdFx0XHR9LFxuXHRcdFx0aWQ6IHtcblx0XHRcdFx0dHlwZTogU3RyaW5nLFxuXHRcdFx0XHR2YWx1ZTogZnVuY3Rpb24oKSB7IHJldHVybiAnJzsgfVxuXHRcdFx0fSxcblx0XHRcdGlzTmV3OiB7XG5cdFx0XHRcdHR5cGU6IEJvb2xlYW4sXG5cdFx0XHRcdHZhbHVlOiBmdW5jdGlvbigpIHsgcmV0dXJuIHRydWU7IH1cblx0XHRcdH0sXG5cdFx0XHRsYXlvdXQ6IHtcblx0XHRcdFx0dHlwZTogT2JqZWN0LFxuXHRcdFx0XHR2YWx1ZTogZnVuY3Rpb24oKSB7IHJldHVybiB7fTsgfVxuXHRcdFx0fSxcblx0XHRcdG9iajogeyAgLy8gb2JqZWN0IGluc3RhbmNlXG5cdFx0XHRcdHR5cGU6IE9iamVjdCxcblx0XHRcdFx0dmFsdWU6IGZ1bmN0aW9uKCkgeyByZXR1cm4ge307IH1cblx0XHRcdH1cblx0XHR9LCBQYWdlLnByb3BlcnRpZXMgKTtcblx0fVxuXG5cdHJlYWR5KCkge1xuXHRcdHRoaXMubW9kZWwgPSB0aGlzLmN0eC5wYXRoUGFyYW1zLnR5cGU7XG5cdFx0dGhpcy5tb2RlbENsYXNzID0gdGhpcy4kLmRiWyB0aGlzLm1vZGVsIF07XG5cdFx0dGhpcy5maWVsZHMgPSB0aGlzLm1vZGVsQ2xhc3Muc2NoZW1hLnByb3BlcnRpZXM7XG5cdFx0dGhpcy5sYXlvdXQgPSB0aGlzLiQuZGIub2JqZWN0TGF5b3V0c1sgdGhpcy5tb2RlbCBdLmRldGFpbFsnZGVmYXVsdCddOyAgLy90b2RvOiBsb2FkIHNwZWNpZmljIGxheW91dFxuXHRcdHRoaXMuaXNOZXcgPSB0aGlzLmN0eC5wYXJhbXMuaWQgPyBmYWxzZSA6IHRydWU7XG5cdFx0dGhpcy5pZCA9IHRoaXMuY3R4LnBhcmFtcy5pZDtcblx0fVxuXG5cdGdldEVudGl0eUZpZWxkKCB2aWV3RmllbGQgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZmllbGRzWyB2aWV3RmllbGQubmFtZSBdO1xuXHR9XG5cdGdldE9ialRpdGxlTGFiZWwoIG9iaiwgbGF5b3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm9ialtsYXlvdXQudGl0bGVBdHRyXTtcblx0fVxuXHRnZXRPYmpGaWVsZExhYmVsKCB2aWV3RmllbGQgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZ2V0RW50aXR5RmllbGQoIHZpZXdGaWVsZCApLnRpdGxlOyAgLy8gdG9kbzogY2hlY2sgZm9yIHZpZXctbGV2ZWwgb3ZlcnJpZGVcblx0fVxuXHRnZXRGaWVsZFZhbHVlKCB2aWV3RmllbGQgKSB7XG5cdFx0cmV0dXJuIHRoaXMub2JqWyB2aWV3RmllbGQubmFtZSBdO1xuXHR9XG5cblx0LyoqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZmllbGQgaXMgdmlld2FibGUgaW4gdGhpcyBwYWdlICovXG5cdGlzVmlld2FibGUoIGZpZWxkICkge1xuXHRcdGxldCBmID0gdGhpcy5maWVsZHNbZmllbGQubmFtZV07XG5cdFx0aWYoICF0aGlzLmlzTmV3IHx8ICggdGhpcy5pc05ldyAmJiBmLiRfdHlwZSAhPSAnZm9ybXVsYScgJiYgZi4kX3R5cGUgIT0gJ2F1dG9udW1iZXInICkgKSAvLyBkb24ndCBzaG93IG9uIGNyZWF0ZSB2aWV3c1xuXHRcdHJldHVybiB0cnVlO1xuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0Y2FuY2VsKCkge1xuXHRcdHRoaXMubmF2KCAnL2VudGl0aWVzLycgKyB0aGlzLm1vZGVsICk7XG5cdH1cblxuXHRwcmV2aWV3KCkge1xuXHRcdHRoaXMubmF2KCAnL2RvY2dlbi9wcmV2aWV3P2lkPScgKyB0aGlzLm9iai5pZCApO1xuXHR9XG5cblx0c2F2ZSggZSwgZGV0YWlsLCBzZW5kZXIsIG5hdlVybCApIHtcblx0XHRyZXR1cm4gdGhpcy5vYmouc2F2ZSgpLnRoZW4oIGZ1bmN0aW9uKCBvICkge1xuXHRcdFx0dGhpcy5uYXYoIG5hdlVybCA/IG5hdlVybCA6ICcvZW50aXRpZXMvJyArIHRoaXMubW9kZWwgKyAnL2RldGFpbD9pZD0nICsgby5pZCApO1xuXHRcdH0uYmluZCh0aGlzKSApO1xuXHR9XG5cblx0c2F2ZU5ldyggZSwgZGV0YWlsLCBzZW5kZXIgKSB7XG5cdFx0dGhpcy5zYXZlKCBlLCBkZXRhaWwsIHNlbmRlciwgJy9lbnRpdGllcy8nICsgdGhpcy5tb2RlbCArICcvbmV3JyApLnRoZW4oIGZ1bmN0aW9uKCkge1xuXHRcdFx0Ly8gaWYgeW91IHNldCB0aGUgaGFzaCB0byBiZSBzYW1lIHZhbHVlIGFzIGl0IGN1cnJlbnRseSBoYXMgeW91IGRvbid0IGdldCBhIGhhc2hjaGFuZ2UgZXZlbnRcblx0XHRcdHdpbmRvdy5kaXNwYXRjaEV2ZW50KG5ldyBIYXNoQ2hhbmdlRXZlbnQoXCJoYXNoY2hhbmdlXCIpKTtcblx0XHR9KTtcblx0fVxufVxuXG5Qb2x5bWVyKCBFbnRpdHlEZXRhaWwgKTtcbiJdfQ==
'use strict';

System.register('common/entities/sb-entity-field/EntityField.js', ['../../core/Page.js'], function (_export, _context) {
	var Page, _createClass, INPUT, CHECKBOX, DATE, TEXTAREA, EntityField;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_corePageJs) {
			Page = _corePageJs.Page;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			INPUT = '<input is="iron-input">';
			CHECKBOX = '<paper-checkbox></paper-checkbox>';
			DATE = '<input is="iron-input" type="date">';
			TEXTAREA = '<textarea is="iron-autogrow-textarea"></textarea>';

			_export('EntityField', EntityField = function () {
				function EntityField() {
					_classCallCheck(this, EntityField);
				}

				_createClass(EntityField, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-entity-field';
						this.properties = Polymer.Base.extend({
							field: {
								type: Object,
								value: function value() {
									return {};
								}
							},
							viewField: {
								type: Object,
								value: function value() {
									return {};
								}
							},
							object: {
								type: Object,
								value: function value() {
									return undefined;
								}
							},
							refRows: {
								type: Array,
								value: function value() {
									return [];
								}
							}
						}, Page.properties);
					}
				}, {
					key: 'render',
					value: function render() {
						var type = this.field ? this.field.$_type : undefined,
						    dValue = this.field ? this.field.defaultValue : undefined,
						    con = Polymer.dom(this.$.f);

						if (this.object && !this.object.id && this.field && this.field.id) this.object[this.field.id] = this.field.defaultValue;

						switch (type) {
							case 'boolean':
								var el = this.createBaseElement(CHECKBOX);
								el.checked = this.object[this.field.id];
								el.addEventListener('change', function (e) {
									if (this.object && this.field) this.object[this.field.id] = el.checked ? true : false;
								}.bind(this));
								break;

							case 'date':
							case 'datetime':
								el = this.createBaseElement(DATE, 'value');
								el.addEventListener('bind-value-changed', function (e) {
									if (this.object && this.field) this.object[this.field.id] = e.detail.value ? e.detail.value : null;
								}.bind(this));
								break;

							case 'number':
							case 'currency':
							case 'percent':
								el = this.createBaseElement(INPUT, 'value');
								el.addEventListener('bind-value-changed', function (e) {
									if (this.object && this.field) this.object[this.field.id] = e.detail.value ? parseFloat(e.detail.value) : null;
								}.bind(this));
								break;

							case 'autonumber':
								con.textContent = this.object[this.field.id];
								break;

							case 'enum':
								var none = !this.field.required && !this.viewField.required ? '-- None --' : '',
								    len = this.field.enum ? this.field.enum.length : 0,
								    html = '<select>' + (none ? '<option value>' + none + '</option>' : '');

								if (this.field.defaultValue && !this.object.id) this.object[this.field.id] = this.field.enum[i].value;

								for (var _i = 0; _i < len; _i++) {
									var selected = this.object[this.field.id] === this.field.enum[_i] ? true : false;
									html += '<option value="' + this.field.enum[_i] + '"' + (selected ? ' selected' : '') + '>' + this.field.enum[_i] + '</option>';
								}

								html += '</select>';
								el = this.createBaseElement(html);

								el.addEventListener('change', function (e) {
									if (this.object && this.field) this.object[this.field.id] = el.value ? el.value : null;
								}.bind(this));
								break;

							case 'lookup':
								break;

							case 'autonumber':
								con.textContent = this.object[this.field.id];
								break;

							case 'string':
								if (this.field.maxLength > 255 || this.field.format === 'multiline') {
									el = this.createBaseElement(TEXTAREA, 'value');
									el.addEventListener('bind-value-changed', function (e) {
										if (this.object && this.field) this.object[this.field.id] = e.detail.value ? e.detail.value : null;
									}.bind(this));
								} else {
									var _el = this.createBaseElement(INPUT, 'value');
									_el.addEventListener('bind-value-changed', function (e) {
										if (this.object && this.field) this.object[this.field.id] = e.detail.value ? e.detail.value : null;
									}.bind(this));
								}
								break;
						}
					}
				}, {
					key: 'createBaseElement',
					value: function createBaseElement(html, valueProp) {
						Polymer.dom(this.$.f).innerHTML = html;
						var el = this.$$('#f > *');

						if (valueProp && this.field && this.field.id && this.object[this.field.id]) el[valueProp] = this.object[this.field.id];

						return el;
					}
				}, {
					key: 'setDefaultValue',
					value: function setDefaultValue(v) {
						if (this.value == undefined) this.value = v;
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.Page];
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['render( field, object, viewField )'];
					}
				}]);

				return EntityField;
			}());

			_export('EntityField', EntityField);

			Polymer(EntityField);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/entities/sb-entity-list/EntityList.js', ['../../core/Page.js'], function (_export, _context) {
	var Page, _typeof, _createClass, EntityList;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_corePageJs) {
			Page = _corePageJs.Page;
		}],
		execute: function () {
			_typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
				return typeof obj;
			} : function (obj) {
				return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
			};

			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('EntityList', EntityList = function (_Page) {
				_inherits(EntityList, _Page);

				function EntityList() {
					_classCallCheck(this, EntityList);

					return _possibleConstructorReturn(this, (EntityList.__proto__ || Object.getPrototypeOf(EntityList)).apply(this, arguments));
				}

				_createClass(EntityList, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-entity-list';
						this.properties = Polymer.Base.extend({
							rows: {
								type: Array,
								notify: true,
								value: function value() {
									return [];
								},
								observer: '_rowsChanged'
							},

							hasRows: {
								type: Number,
								computed: 'getHasRows(rows)'
							},

							entity: {
								type: Object,
								value: function value() {
									return {};
								}
							},

							entityType: String,

							layout: {
								type: Object,
								value: function value() {
									return {};
								}
							}
						}, Page.properties);
					}
				}, {
					key: '_rowsChanged',
					value: function _rowsChanged() {
						var op = this.rows && this.rows.length ? 'remove' : 'add';
						this.$.new.classList[op]('end');
					}
				}, {
					key: 'columnLabel',
					value: function columnLabel(col, e) {
						return this.fields[col.field].title;
					}
				}, {
					key: 'getHasRows',
					value: function getHasRows(rows) {
						return rows ? rows.length > 0 : false;
					}
				}, {
					key: 'ready',
					value: function ready() {
						this.model = this.ctx.pathParams.type;
						this.modelClass = this.$.db[this.model];
						this.fields = this.modelClass.schema.properties;

						this.layout = this.$.db.objectLayouts[this.model] ? this.$.db.objectLayouts[this.model].list['all'] : {};

						this.$.db.get();
					}
				}, {
					key: 'checkAll',
					value: function checkAll(e, detail, sender) {
						var boxes = Polymer.dom(this.$.list).querySelectorAll('paper-checkbox'),
						    len = boxes ? boxes.length : 0;
						for (var i = 0; i < len; i++) {
							boxes[i].checked = e.currentTarget.checked;
						}
					}
				}, {
					key: 'linkUrl',
					value: function linkUrl(col, row) {
						var value = row && col ? row[col.field] : null,
						    obj = value && value.id ? value : row,
						    link = obj && obj.type && obj.id ? '#/entities/' + obj.constructor.schema.id + '/detail?id=' + obj.id : '';

						return link;
					}
				}, {
					key: 'getCell',
					value: function getCell(col, row) {
						var h = row && col ? row[col.field] : null;
						return this._format(h, col.field);
					}
				}, {
					key: '_format',
					value: function _format(value, field) {
						var ret = value,
						    type = field && this.fields[field] ? this.fields[field].type : null;

						switch (type) {
							case 'boolean':
								ret = value ? this.i18n.l('Yes') : '';

								break;

							case 'date':
							case 'datetime':
								ret = this.i18n.format(value, { date: true });
								break;
							case 'reference':
								if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value) {
									if (value.type === 'user') ret = value.Lastname + ', ' + value.Firstname;else ret = value.Name;
								}
						}
						return ret;
					}
				}, {
					key: 'goNew',
					value: function goNew(e, detail, sender) {
						this.nav('/entities/' + this.model + '/new');
					}
				}, {
					key: 'delete',
					value: function _delete(e, detail, sender) {

						var sel = Polymer.dom(this.$.list).querySelectorAll('paper-checkbox'),
						    len = sel ? sel.length : 0,
						    toDel = [],
						    toDelIdx = {};

						for (var i = 0; i < len; i++) {
							if (sel[i].checked) toDel.push(this.rows[i]);
						}

						if (toDel.length) return this.$.db.remove(toDel);else return Promise.resolve();
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.Page];
					}
				}]);

				return EntityList;
			}(Page));

			_export('EntityList', EntityList);

			Polymer(EntityList);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/forms/sb-datepicker/Datepicker.js', ['common/core/AppContext.js'], function (_export, _context) {
	var AppContext, _createClass, Datepicker;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_commonCoreAppContextJs) {
			AppContext = _commonCoreAppContextJs.AppContext;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('Datepicker', Datepicker = function (_AppContext) {
				_inherits(Datepicker, _AppContext);

				function Datepicker() {
					_classCallCheck(this, Datepicker);

					return _possibleConstructorReturn(this, (Datepicker.__proto__ || Object.getPrototypeOf(Datepicker)).apply(this, arguments));
				}

				_createClass(Datepicker, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-datepicker';

						this.properties = Polymer.Base.extend({
							selectedDate: {
								type: Date,
								value: function value() {
									return new Date();
								},
								observer: 'selectedDateChanged'
							},
							isBlank: {
								type: Boolean,
								value: false,
								observer: 'clearDate'
							},
							range: {
								type: Number,
								value: 30
							}
						}, AppContext.properties);
					}
				}, {
					key: 'ready',
					value: function ready() {
						this.isActive = false;

						this.weeks = [];
						this.weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
						this.months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

						this.year = this.date.getFullYear();
						this.month = this.date.getMonth();
						this.monthName = this.months[this.month].toUpperCase();
						this.day = this.date.getDate();

						this.years = [];
						var start = this.year - this.range;
						var end = this.year + this.range + 1;
						for (var i = start; i < end; i++) {
							this.push('years', i);
						}

						this.invalidInput = false;
						this.parseDateTimePattern();

						setTimeout(function (e) {
							this.yearSelection = this.$.years;
							if (this.yearSelection.selectedOptions && this.yearSelection.selectedOptions.length > 0) {
								this.yearSelection.selectedOptions[0].selected = '';
								this.yearSelection.options[this.range].selected = 'selected';
							}
						}.bind(this), 1);
					}
				}, {
					key: 'getDate',
					value: function getDate(date) {
						return date.getDate();
					}
				}, {
					key: 'clearDate',
					value: function clearDate() {
						if (this.isBlank) {
							this.$.selectedDate = '';
							this.dateFormatted = '';
						}
					}
				}, {
					key: 'getClass',
					value: function getClass(day) {
						var className = '';
						if (day.getMonth() !== this.month) {
							className += 'notCurrent';
						} else {
							if (day.getFullYear() === this.date.getFullYear() && day.getMonth() === this.date.getMonth() && day.getDate() === this.date.getDate()) {
								className += 'selected';
							}
							if (day.getFullYear() === this.year && day.getMonth() === this.month && day.getDate() === this.date.getDate()) {
								className += ' current';
							}
						}
						return className;
					}
				}, {
					key: 'selectedDateChanged',
					value: function selectedDateChanged() {
						var dateObj = null;

						if (this.selectedDate && typeof this.selectedDate === 'string') {
							var pos = this.selectedDate.indexOf('T');
							if (pos < 0) {
								var ymd = this.selectedDate.split('-');
								if (ymd && ymd.length == 3) {
									dateObj = new Date(ymd[0], ymd[1] - 1, ymd[2]);
								}
							}
						}

						if (!dateObj) {
							dateObj = new Date(this.selectedDate);
						}

						this.date = dateObj;
						this.dateFormatted = this.date.toLocaleDateString(this.user.locale);
						this.updateVariables();
						this.fire('selected-date-changed', { value: this.selectedDate });
					}
				}, {
					key: 'showCalendar',
					value: function showCalendar() {
						this.isActive = true;
						this.updateCalendar();
						this.$.open.focus();
					}
				}, {
					key: 'hideCalendar',
					value: function hideCalendar() {
						this.isActive = false;
						this.$.dateInput.blur();
					}
				}, {
					key: 'findToday',
					value: function findToday() {
						this.date = new Date();
						this.updateYearSelection(this.year, this.date.getFullYear());
						this.updateVariables();
						this.updateCalendar();
						this.$.open.focus();
					}
				}, {
					key: 'changeYear',
					value: function changeYear() {
						var selectedYear = parseInt(this.yearSelection.selectedOptions[0].text);
						this.date = new Date(selectedYear, this.month, this.day);
						this.updateVariables();
						this.updateCalendar();
						this.$.open.focus();
					}
				}, {
					key: 'decreaseMonth',
					value: function decreaseMonth() {
						this.date = new Date(this.year, this.month - 1, this.day);
						this.updateYearSelection(this.year, this.date.getFullYear());
						this.updateVariables();
						this.updateCalendar();
						this.$.open.focus();
					}
				}, {
					key: 'increaseMonth',
					value: function increaseMonth() {
						this.date = new Date(this.year, this.month + 1, this.day);
						this.updateYearSelection(this.year, this.date.getFullYear());
						this.updateVariables();
						this.updateCalendar();
						this.$.open.focus();
					}
				}, {
					key: 'selectDay',
					value: function selectDay(e) {
						this.selectedDate = e.model ? e.model.day : this.date;
						this.hideCalendar();
						this.$.open.blur();
					}
				}, {
					key: 'updateYearSelection',
					value: function updateYearSelection(oldValue, newValue) {
						if (oldValue !== newValue) {
							var selectedYearIdx = this.yearSelection.selectedIndex;
							var index = selectedYearIdx + (newValue - oldValue);
							this.yearSelection.options[selectedYearIdx].selected = '';
							this.yearSelection.options[index].selected = 'selected';
						}
					}
				}, {
					key: 'updateVariables',
					value: function updateVariables() {
						this.year = this.date.getFullYear();
						this.month = this.date.getMonth();
						this.monthName = this.months ? this.months[this.month].toUpperCase() : '';
						this.day = this.date.getDate();
					}
				}, {
					key: 'updateDate',
					value: function updateDate(increment) {
						this.date.setDate(this.date.getDate() + increment);
						this.updateYearSelection(this.year, this.date.getFullYear());
						this.updateVariables();
						this.updateCalendar();
					}
				}, {
					key: 'updateCalendar',
					value: function updateCalendar() {
						this.weeks = [];
						var firstDay = new Date(this.date.getFullYear(), this.month, 1);
						var index = firstDay.getDay();
						var numOfDays = 6 * 7;
						var week = [];
						var dayIdx = 0;
						for (var i = 0; i < numOfDays; i++) {
							var day = new Date(firstDay);
							day.setDate(firstDay.getDate() + (i - index));
							week[dayIdx] = day;
							dayIdx++;

							if ((i + 1) % 7 === 0 || i + 1 === numOfDays) {
								this.push('weeks', week);
								week = [];
								dayIdx = 0;
							}
						}
					}
				}, {
					key: 'parseDateTimePattern',
					value: function parseDateTimePattern() {
						var dateTimeFormat = window && window.UserContext && window.UserContext.dateFormat ? window.UserContext.dateFormat : null;
						if (!dateTimeFormat) {
							var dtf = Intl.DateTimeFormat(this.user.locale);
							if (dtf && dtf.resolved) dateTimeFormat = dtf.resolved.pattern;else dateTimeFormat = 'M/d/y';
						}

						var dateTimeFormatSimple = dateTimeFormat.replace(new RegExp('[dD]+'), 'D').replace(new RegExp('[mM]+'), 'M').replace(new RegExp('[yY]+'), 'Y');

						this.separator = dateTimeFormatSimple.match(new RegExp('[\/.-]'))[0];

						this.dateTimeElements = dateTimeFormatSimple.split(this.separator);
						this.dateIdx = this.dateTimeElements.indexOf('D');
						this.monthIdx = this.dateTimeElements.indexOf('M');
						this.yearIdx = this.dateTimeElements.indexOf('Y');
					}
				}, {
					key: 'validateInput',
					value: function validateInput() {
						this.invalidInput = true;
						var dateString = this.$.dateInput.value;
						if (dateString !== this.date.toLocaleDateString(this.user.locale)) {
							var elements = dateString.split(this.separator),
							    day = elements[this.dateIdx],
							    month = elements[this.monthIdx],
							    year = elements[this.yearIdx];

							if (year && year.length == 4 && month && month.length > 0 && month.length <= 2 && day && day.length > 0 && day.length <= 2) {
								day = parseInt(day);
								month = parseInt(month);
								year = parseInt(year);

								if (elements.length && !isNaN(year) && !isNaN(month) && !isNaN(day)) {
									if (year >= this.year - this.range && year <= this.year + this.range) {
										if (month >= 1 && month <= 12) {
											var monthEnd = 31;
											if (month == 2) {
												monthEnd = 28;
												if (year % 4 == 0) {
													if (year % 100 != 0) {
														monthEnd = 29;
													} else {
														if (year % 400 == 0) {
															monthEnd = 29;
														}
													}
												}
											} else {
												if (month == 4 || month == 6 || month == 9 || month == 11) {
													monthEnd = 30;
												}
											}

											if (day >= 1 && day <= monthEnd) {
												this.invalidInput = false;
											}
										}
									}
								}

								if (!this.invalidInput) {
									this.updateYearSelection(this.year, year);
									this.selectedDate = new Date(year, month - 1, day);
									this.updateVariables();
								}
							}
						} else {
							this.invalidInput = false;
						}
					}
				}, {
					key: 'navigate',
					value: function navigate(e) {
						e.preventDefault();

						switch (e.keyCode) {
							case 13:
								this.selectDay(e);
								break;
							case 27:
								this.hideCalendar();
								break;
							case 37:
								this.updateDate(-1);
								break;
							case 38:
								this.updateDate(-7);
								break;
							case 39:
								this.updateDate(+1);
								break;
							case 40:
								this.updateDate(+7);
								break;
							default:
								break;
						}
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.AppContext];
					}
				}]);

				return Datepicker;
			}(AppContext));

			_export('Datepicker', Datepicker);

			Polymer(Datepicker);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/forms/sb-field/Field.js', ['common/core/AppContext.js'], function (_export, _context) {
	var AppContext, _createClass, INPUT, CHECKBOX, DATE, TEXTAREA, REFERENCE, DIV, SF_REF_SUFFIX, Field;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function _possibleConstructorReturn(self, call) {
		if (!self) {
			throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
		}

		return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}

	function _inherits(subClass, superClass) {
		if (typeof superClass !== "function" && superClass !== null) {
			throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
		}

		subClass.prototype = Object.create(superClass && superClass.prototype, {
			constructor: {
				value: subClass,
				enumerable: false,
				writable: true,
				configurable: true
			}
		});
		if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}

	return {
		setters: [function (_commonCoreAppContextJs) {
			AppContext = _commonCoreAppContextJs.AppContext;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			INPUT = '<input is="iron-input" value="{{value}}" on-input="change" class$="[[inputClass]]">';
			CHECKBOX = '<paper-checkbox checked="{{value}}" on-change="change"></paper-checkbox>';
			DATE = '<sb-datepicker selected-date="{{value}}" on-selected-date-changed="dateChange"></sb-datepicker>';
			TEXTAREA = '<textarea is="iron-autogrow-textarea" value="{{value}}" on-input="change"></textarea>';
			REFERENCE = '<span value="{{value}}" on-click="refClick" class$="[[link]]">[[refDisplay]]</span>';
			DIV = '<div>{{value}}</div>';
			SF_REF_SUFFIX = 'Id';

			_export('Field', Field = function (_AppContext) {
				_inherits(Field, _AppContext);

				function Field() {
					_classCallCheck(this, Field);

					return _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).apply(this, arguments));
				}

				_createClass(Field, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-field';
						this.properties = Polymer.Base.extend({
							obj: Object,

							property: String,

							md: Object,

							refObjects: {
								type: Array,
								value: []
							},
							editing: {
								type: Boolean,
								value: false
							},
							value: {
								observer: 'valueChanged'
							},
							refDisplay: String,
							objAndRefObjects: Object,
							objKey: String,
							refObjectsKey: String }, AppContext.properties);
					}
				}, {
					key: 'attached',
					value: function attached() {
						if (typeof this.value === 'undefined') return;

						if (!this.property) return;

						if (this.obj) return;

						var obj = {};
						obj[this.property] = this.value;
						this.obj = obj;
					}
				}, {
					key: 'setObjAndRefObjects',
					value: function setObjAndRefObjects() {
						this.obj = undefined;
						this.refObjects = undefined;
						this.refObjects = this.objAndRefObjects[this.refObjectsKey];
						if (typeof this.refObjects === 'undefined') this.refObjects = {};
						if (this.objKey !== '') this.obj = this.objAndRefObjects[this.objKey];else this.obj = this.objAndRefObjects;
					}
				}, {
					key: 'render',
					value: function render() {
						this.template = Polymer.dom(this.$.f).querySelector('template');
						if (this.template) {
							Polymer.dom(this.template.parentNode).removeChild(this.template.previousSibling);
							Polymer.dom(this.template.parentNode).removeChild(this.template);
						}

						this.template = document.createElement('template', 'dom-bind');
						var rValue = this.obj[this.property];
						var refDisplay = this.refDisplay;
						var inputClass = 'textInput';

						var type = this.md && this.md.type ? this.md.type.toLowerCase() : '';
						switch (type) {
							case 'boolean':
								this.createBaseElement(CHECKBOX);
								break;
							case 'date':
							case 'datetime':
								if (this.editing) {
									this.createBaseElement(DATE);
								} else {
									rValue = this.i18n.format(this.obj[this.property], { date: true });
									this.createBaseElement(DIV);
								}
								break;

							case 'double':
							case 'number':
							case 'currency':
							case 'percent':
								var opts = {};
								if (this.md.scale != undefined && this.md.scale >= 0) {
									opts.minimumFractionDigits = this.md.scale;
									opts.maxmfimumFractionDigits = this.md.scale;
								}

								if (type === 'currency') {
									opts.style = 'currency';
									opts.currency = 'USD';
								}

								rValue = this.i18n.format(this.obj[this.property], opts);
								inputClass = 'numberInput';
								this.createBaseElement(this.editing ? INPUT : DIV);
								break;

							case 'autonumber':
								this.createBaseElement(DIV);
								break;

							case 'reference':
								this.createBaseElement(REFERENCE);
								if (!refDisplay) {
									var fieldName = this.property.Name ? this.property.Name : this.md.name;
									var pos = fieldName.lastIndexOf(SF_REF_SUFFIX);
									var refObj = pos >= 0 ? fieldName.substring(0, pos) : fieldName.lastIndexOf('__c') >= 0 ? fieldName.replace('__c', '__r') : null;

									var refType = this.obj[refObj] ? this.obj[refObj].attributes.type : null;

									if (refObj && this.obj[refObj] && this.refObjects && refType && this.refObjects[refType]) {
										var nameProp = this.refObjects[refType].nameField.fieldName;
										if (this.obj[refObj][nameProp]) {
											refDisplay = this.obj[refObj][nameProp];
										} else refDisplay = this.obj[refObj].Id;
									}
								}
								break;

							case 'picklist':
								if (this.editing) {
									var none = !this.md.required ? '-- None --' : '',
									    len = this.md.picklistValues ? this.md.picklistValues.length : 0,
									    html = '<select id="picklist" on-change="change">' + (none ? '<option value>' + none + '</option>' : '');

									if (this.md.defaultValue && !this.obj.Id) this.obj[this.property] = this.md.defaultValue;

									for (var i = 0; i < len; i++) {
										var selected = this.obj[this.property] === this.md.picklistValues[i].value ? true : false;
										html += '<option value="' + this.md.picklistValues[i].value + '"' + (selected ? ' selected' : '') + '>' + this.md.picklistValues[i].label + '</option>';
									}

									html += '</select>';
									this.createBaseElement(html);
								} else {
									this.createBaseElement(DIV);
								}
								break;

							case 'string':
							case 'textarea':
								if (this.editing) {
									if (this.md.maxLength > 255 || this.md.format === 'multiline' || type === 'textarea') {
										this.createBaseElement(TEXTAREA);
									} else {
										this.createBaseElement(INPUT);
									}
								} else {
									this.createBaseElement(DIV);
								}
								break;
						}

						this.template.change = function (e) {
							var val = void 0;
							if (this.isBooleanType()) {
								val = e.target.checked;
							} else {
								val = e.target.value;
								if (val && this.isNumericType()) val = parseFloat(val);
							}
							this.obj[this.property] = val;
							this.domHost.value = val;
						}.bind(this);

						this.template.dateChange = function (e) {
							var value = e.detail.value ? e.detail.value : null;
							if (type === 'date' && value instanceof Date) {
								value = value.getFullYear() + '-' + (value.getMonth() + 1) + '-' + value.getDate();
							} else if (value instanceof Date) {
								value = value.toISOString();
							}
							this.template.change({ target: { value: value } });
						}.bind(this);

						this.template.refClick = function (e) {
							window.open(window.location.origin + '/' + e.target.value);
						};

						this.template.value = rValue;
						this.template.inputClass = inputClass;

						if (refDisplay) {
							this.template.refDisplay = refDisplay;
							this.template.link = 'link';
						}

						Polymer.dom(this.$.f).appendChild(this.template);
					}
				}, {
					key: 'createBaseElement',
					value: function createBaseElement(html) {
						var d = this.template.content.ownerDocument.createElement('div');
						d.innerHTML = html;
						this.el = Polymer.dom(d).firstChild;
						Polymer.dom(this.template.content).appendChild(this.el);
					}
				}, {
					key: 'isNumericType',
					value: function isNumericType() {
						var type = this.getType();
						switch (type) {
							case 'double':
							case 'number':
							case 'currency':
							case 'percent':
								return true;
						}
						return false;
					}
				}, {
					key: 'isBooleanType',
					value: function isBooleanType() {
						return this.getType() === 'boolean';
					}
				}, {
					key: 'isEditablePickListType',
					value: function isEditablePickListType() {
						return this.getType() === 'picklist' && this.editing;
					}
				}, {
					key: 'getType',
					value: function getType() {
						return this.md && this.md.type ? this.md.type.toLowerCase() : '';
					}
				}, {
					key: 'valueChanged',
					value: function valueChanged() {
						if (!this.template) {
							this.attached();
							return;
						}

						this.template.value = this.value;

						if (this.isEditablePickListType()) {
							var options = this.template.$.picklist.options;
							var numOptions = options ? options.length || 0 : 0;
							for (var i = 0; i < numOptions; i++) {
								options[i].selected = options[i].value === this.value;
							}
						}
					}
				}, {
					key: 'behaviors',
					get: function get() {
						return [sb.common.core.AppContext];
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['render( obj, property, md, refObjects, editing )', 'setObjAndRefObjects(objAndRefObjects, objKey, refObjectsKey)'];
					}
				}]);

				return Field;
			}(AppContext));

			_export('Field', Field);

			Polymer(Field);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/forms/sb-pagination/Pagination.js', [], function (_export, _context) {
	var _createClass, Pagination;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('Pagination', Pagination = function () {
				function Pagination() {
					_classCallCheck(this, Pagination);
				}

				_createClass(Pagination, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-pagination';
						this.properties = {
							pageIndex: {
								type: Number,
								value: 0
							},
							pageSize: Number,
							numItems: Number };
					}
				}, {
					key: 'next',
					value: function next() {
						this.pageIndex++;
						this.firePageEvent('next');
					}
				}, {
					key: 'previous',
					value: function previous() {
						this.pageIndex--;
						this.firePageEvent('previous');
					}
				}, {
					key: 'setNumberOfPages',
					value: function setNumberOfPages() {
						this.numPages = Math.ceil(this.numItems / this.pageSize);
					}
				}, {
					key: 'setPageWindow',
					value: function setPageWindow() {
						var start = this.pageIndex * this.pageSize;
						var end = start + this.pageSize;
						if (end >= this.numItems) end = this.numItems;
						this.pageWindow = [start, end];
					}
				}, {
					key: 'setNextDisabled',
					value: function setNextDisabled() {
						this.nextDisabled = this.pageIndex === this.numPages - 1;
					}
				}, {
					key: 'setPreviousDisabled',
					value: function setPreviousDisabled() {
						this.previousDisabled = this.pageIndex === 0;
					}
				}, {
					key: 'setPageNum',
					value: function setPageNum() {
						this.pageNum = this.pageIndex + 1;
					}
				}, {
					key: 'firePageEvent',
					value: function firePageEvent(direction) {
						this.fire('pagination-changed', { direction: direction, page: this.pageNum, index: this.pageIndex, window: this.pageWindow });
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['setNumberOfPages(pageSize, numItems)', 'setPageWindow(pageIndex, pageSize, numItems)', 'setNextDisabled(pageIndex, numPages)', 'setPreviousDisabled(pageIndex)', 'setPageNum(pageIndex)'];
					}
				}]);

				return Pagination;
			}());

			_export('Pagination', Pagination);

			Polymer(Pagination);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBhZ2luYXRpb24uanMiXSwibmFtZXMiOlsiUGFnaW5hdGlvbiIsImlzIiwicHJvcGVydGllcyIsInBhZ2VJbmRleCIsInR5cGUiLCJOdW1iZXIiLCJ2YWx1ZSIsInBhZ2VTaXplIiwibnVtSXRlbXMiLCJmaXJlUGFnZUV2ZW50IiwibnVtUGFnZXMiLCJNYXRoIiwiY2VpbCIsInN0YXJ0IiwiZW5kIiwicGFnZVdpbmRvdyIsIm5leHREaXNhYmxlZCIsInByZXZpb3VzRGlzYWJsZWQiLCJwYWdlTnVtIiwiZGlyZWN0aW9uIiwiZmlyZSIsInBhZ2UiLCJpbmRleCIsIndpbmRvdyIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lCQUFhQSxVOzs7Ozs7O3NDQUVLO0FBQ2hCLFdBQUtDLEVBQUwsR0FBVSxlQUFWO0FBQ0EsV0FBS0MsVUFBTCxHQUFrQjtBQUNqQkMsa0JBQVc7QUFDVkMsY0FBTUMsTUFESTtBQUVWQyxlQUFPO0FBRkcsUUFETTtBQUtqQkMsaUJBQVVGLE1BTE87QUFNakJHLGlCQUFVSCxNQU5PLEVBQWxCO0FBUUE7Ozs0QkFNTTtBQUNOLFdBQUtGLFNBQUw7QUFDQSxXQUFLTSxhQUFMLENBQW1CLE1BQW5CO0FBQ0E7OztnQ0FFVTtBQUNWLFdBQUtOLFNBQUw7QUFDQSxXQUFLTSxhQUFMLENBQW1CLFVBQW5CO0FBQ0E7Ozt3Q0FFa0I7QUFDbEIsV0FBS0MsUUFBTCxHQUFnQkMsS0FBS0MsSUFBTCxDQUFVLEtBQUtKLFFBQUwsR0FBZ0IsS0FBS0QsUUFBL0IsQ0FBaEI7QUFDQTs7O3FDQUVlO0FBQ2YsVUFBSU0sUUFBUSxLQUFLVixTQUFMLEdBQWlCLEtBQUtJLFFBQWxDO0FBQ0EsVUFBSU8sTUFBTUQsUUFBUSxLQUFLTixRQUF2QjtBQUNBLFVBQUdPLE9BQU8sS0FBS04sUUFBZixFQUNDTSxNQUFNLEtBQUtOLFFBQVg7QUFDRCxXQUFLTyxVQUFMLEdBQWtCLENBQUNGLEtBQUQsRUFBUUMsR0FBUixDQUFsQjtBQUNBOzs7dUNBRWlCO0FBQ2pCLFdBQUtFLFlBQUwsR0FBb0IsS0FBS2IsU0FBTCxLQUFvQixLQUFLTyxRQUFMLEdBQWdCLENBQXhEO0FBQ0E7OzsyQ0FFcUI7QUFDckIsV0FBS08sZ0JBQUwsR0FBd0IsS0FBS2QsU0FBTCxLQUFtQixDQUEzQztBQUNBOzs7a0NBRVk7QUFDWixXQUFLZSxPQUFMLEdBQWUsS0FBS2YsU0FBTCxHQUFpQixDQUFoQztBQUNBOzs7bUNBRWFnQixTLEVBQVc7QUFDeEIsV0FBS0MsSUFBTCxDQUFVLG9CQUFWLEVBQWdDLEVBQUNELFdBQVdBLFNBQVosRUFBdUJFLE1BQU0sS0FBS0gsT0FBbEMsRUFBMkNJLE9BQU8sS0FBS25CLFNBQXZELEVBQWtFb0IsUUFBUSxLQUFLUixVQUEvRSxFQUFoQztBQUNBOzs7eUJBeENlO0FBQ2YsYUFBTyxDQUFDLHNDQUFELEVBQXlDLDhDQUF6QyxFQUF5RixzQ0FBekYsRUFBaUksZ0NBQWpJLEVBQW1LLHVCQUFuSyxDQUFQO0FBQ0E7Ozs7Ozs7O0FBeUNGUyxXQUFReEIsVUFBUiIsImZpbGUiOiJQYWdpbmF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFBhZ2luYXRpb24ge1xuXG5cdGJlZm9yZVJlZ2lzdGVyKCkge1xuXHRcdHRoaXMuaXMgPSAnc2ItcGFnaW5hdGlvbic7XG5cdFx0dGhpcy5wcm9wZXJ0aWVzID0ge1xuXHRcdFx0cGFnZUluZGV4OiB7IC8vIHRoZSBjdXJyZW50IHBhZ2UgdGhlIHBhZ2luYXRpb24gd2lkZ2V0IGlzIG9uXG5cdFx0XHRcdHR5cGU6IE51bWJlcixcblx0XHRcdFx0dmFsdWU6IDBcblx0XHRcdH0sXG5cdFx0XHRwYWdlU2l6ZTogTnVtYmVyLCAvLyB0aGUgbnVtYmVyIG9mIGl0ZW1zIHBlciBwYWdlXG5cdFx0XHRudW1JdGVtczogTnVtYmVyIC8vIHRoZSBudW1iZXIgb2YgdG90YWwgaXRlbXNcblx0XHR9XG5cdH1cblxuXHRnZXQgb2JzZXJ2ZXJzKCkge1xuXHRcdHJldHVybiBbJ3NldE51bWJlck9mUGFnZXMocGFnZVNpemUsIG51bUl0ZW1zKScsICdzZXRQYWdlV2luZG93KHBhZ2VJbmRleCwgcGFnZVNpemUsIG51bUl0ZW1zKScsICdzZXROZXh0RGlzYWJsZWQocGFnZUluZGV4LCBudW1QYWdlcyknLCAnc2V0UHJldmlvdXNEaXNhYmxlZChwYWdlSW5kZXgpJywgJ3NldFBhZ2VOdW0ocGFnZUluZGV4KSddXG5cdH1cblxuXHRuZXh0KCkge1xuXHRcdHRoaXMucGFnZUluZGV4Kys7XG5cdFx0dGhpcy5maXJlUGFnZUV2ZW50KCduZXh0Jyk7XG5cdH1cblxuXHRwcmV2aW91cygpIHtcblx0XHR0aGlzLnBhZ2VJbmRleC0tO1xuXHRcdHRoaXMuZmlyZVBhZ2VFdmVudCgncHJldmlvdXMnKTtcblx0fVxuXG5cdHNldE51bWJlck9mUGFnZXMoKSB7XG5cdFx0dGhpcy5udW1QYWdlcyA9IE1hdGguY2VpbCh0aGlzLm51bUl0ZW1zIC8gdGhpcy5wYWdlU2l6ZSk7XG5cdH1cblxuXHRzZXRQYWdlV2luZG93KCkge1xuXHRcdGxldCBzdGFydCA9IHRoaXMucGFnZUluZGV4ICogdGhpcy5wYWdlU2l6ZTtcblx0XHRsZXQgZW5kID0gc3RhcnQgKyB0aGlzLnBhZ2VTaXplO1xuXHRcdGlmKGVuZCA+PSB0aGlzLm51bUl0ZW1zKVxuXHRcdFx0ZW5kID0gdGhpcy5udW1JdGVtcztcblx0XHR0aGlzLnBhZ2VXaW5kb3cgPSBbc3RhcnQsIGVuZF07XG5cdH1cblxuXHRzZXROZXh0RGlzYWJsZWQoKSB7XG5cdFx0dGhpcy5uZXh0RGlzYWJsZWQgPSB0aGlzLnBhZ2VJbmRleCA9PT0gKHRoaXMubnVtUGFnZXMgLSAxKTtcblx0fVxuXG5cdHNldFByZXZpb3VzRGlzYWJsZWQoKSB7XG5cdFx0dGhpcy5wcmV2aW91c0Rpc2FibGVkID0gdGhpcy5wYWdlSW5kZXggPT09IDA7XG5cdH1cblxuXHRzZXRQYWdlTnVtKCkge1xuXHRcdHRoaXMucGFnZU51bSA9IHRoaXMucGFnZUluZGV4ICsgMTtcblx0fVxuXG5cdGZpcmVQYWdlRXZlbnQoZGlyZWN0aW9uKSB7XG5cdFx0dGhpcy5maXJlKCdwYWdpbmF0aW9uLWNoYW5nZWQnLCB7ZGlyZWN0aW9uOiBkaXJlY3Rpb24sIHBhZ2U6IHRoaXMucGFnZU51bSwgaW5kZXg6IHRoaXMucGFnZUluZGV4LCB3aW5kb3c6IHRoaXMucGFnZVdpbmRvd30pO1xuXHR9XG59XG5cblBvbHltZXIoUGFnaW5hdGlvbik7Il19
'use strict';

System.register('common/forms/sb-typeahead/Typeahead.js', [], function (_export, _context) {
	var _createClass, wildCards, resultLimit, Typeahead;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			wildCards = new RegExp('[*_%]+');
			resultLimit = 10;

			_export('Typeahead', Typeahead = function () {
				function Typeahead() {
					_classCallCheck(this, Typeahead);
				}

				_createClass(Typeahead, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-typeahead';

						this.properties = {
							items: {
								type: Array
							},
							selectedItem: {
								type: Object
							},
							itemsList: {
								type: Array,
								observer: 'itemsListChanged'
							},
							labels: {
								type: String,
								value: function value() {
									return this.getAttribute('labels') || ['label'];
								}
							},
							labelValue: {
								type: String
							},
							value: {
								type: String
							},
							delimiter: {
								type: String
							},
							savedLabelValue: {
								type: String
							},
							invalidLabel: {
								type: Boolean,
								value: function value() {
									return false;
								}
							},
							hasList: {
								type: Boolean,
								value: function value() {
									return false;
								}
							},
							hasLabel: {
								type: Boolean,
								value: function value() {
									return false;
								}
							},
							optionIndex: {
								type: Number,
								value: 0
							}
						};

						this.observers = ['itemsChanged(items, selectedItem, value)'];
					}
				}, {
					key: 'itemsChanged',
					value: function itemsChanged() {
						this.itemsList = this.items;
						var len = this.items.length;
						if (len && this.selectedItem) {
							this.valueAttr = this.value ? this.value : 'value';
							this.$.itemLabel.value = this.selectedItem[this.valueAttr];
						}
					}
				}, {
					key: 'itemsListChanged',
					value: function itemsListChanged() {
						Polymer.dom.flush();

						var options = this.$.selector.querySelectorAll('.option'),
						    numOfOptions = options.length,
						    numOfLabels = this.labels.length;
						if (numOfOptions > 0) {
							options[0].setAttribute('selected', '');
							for (var i = 0; i < numOfOptions; i++) {
								var item = this.itemsList[i],
								    html = '';
								for (var j = 0; j < numOfLabels; j++) {
									var label = '_' + this.labels[j],
									    delimiter = j === 0 ? '' : this.delimiter,
									    labelValue = item[label] ? item[label] : item[this.labels[j]];
									html += delimiter + labelValue;
								}
								options[i].innerHTML = html;
							}
						}
					}
				}, {
					key: 'getSelectedItemValue',
					value: function getSelectedItemValue() {
						return this.selectedItem ? this.selectedItem[this.valueAttr] : '';
					}
				}, {
					key: 'revert',
					value: function revert() {
						this.labelValue = this.selectedItem[this.valueAttr];
						this.$.itemLabel.blur();
					}
				}, {
					key: 'clear',
					value: function clear() {
						this.labelValue = '';
						this.$.itemLabel.focus();
						this.hide();
					}
				}, {
					key: 'hide',
					value: function hide() {
						this.hasList = false;
						this.hasLabel = false;
						this.invalidLabel = false;
						this.optionIndex = 0;
					}
				}, {
					key: 'cloneItem',
					value: function cloneItem(item) {
						var clone = {},
						    keys = Object.keys(item),
						    len = keys.length;
						for (var i = 0; i < len; i++) {
							var key = keys[i];
							clone[key] = item[key];
						}
						return clone;
					}
				}, {
					key: 'updateItem',
					value: function updateItem(item) {
						var keys = Object.keys(this.selectedItem),
						    len = keys.length;
						for (var i = 0; i < len; i++) {
							var key = keys[i];
							this.selectedItem[key] = item[key];
						}

						var labelValue = '',
						    numOfLabels = this.labels.length;
						for (var j = 0; j < numOfLabels; j++) {
							var delimiter = j === 0 ? '' : this.delimiter;
							labelValue += delimiter + this.selectedItem[this.labels[j]];
						}
						this.labelValue = labelValue;
					}
				}, {
					key: 'submitItem',
					value: function submitItem(e) {
						this.updateItem(e.model.item);
						this.hide();
					}
				}, {
					key: 'selectAdjacentItem',
					value: function selectAdjacentItem(keyCode) {
						var len = this.itemsList.length;
						if (this.optionIndex >= 0 && this.optionIndex < len) {
							this.$.selector.children[this.optionIndex].removeAttribute('selected');
							if (keyCode === 38) {
								this.optionIndex = this.optionIndex === 0 ? len - 1 : this.optionIndex - 1;
							} else if (keyCode === 40) {
								this.optionIndex = this.optionIndex === len - 1 ? 0 : this.optionIndex + 1;
							}
							this.$.selector.children[this.optionIndex].setAttribute('selected', '');
						}
					}
				}, {
					key: 'updateItemsList',
					value: function updateItemsList() {
						var result = [],
						    highlighted = false;
						if (this.labelValue) {
							var searchLabel = this.labelValue.replace(wildCards, '.+'),
							    searchText = new RegExp(searchLabel, 'i');

							var numOfItems = this.items.length,
							    numOfLabels = this.labels.length;
							for (var i = 0; i < numOfItems; i++) {
								var item = this.items[i],
								    clone = this.cloneItem(item);
								for (var j = 0; j < numOfLabels; j++) {
									var itemLabel = item[this.labels[j]];
									if (searchText.test(itemLabel)) {
										var label = '_' + this.labels[j];
										clone[label] = itemLabel.replace(searchText, '<span style="font-weight:bold;">$&</span>');
										highlighted = true;
									}
								}
								if (highlighted) {
									result.push(clone);
									highlighted = false;
								}
								if (result.length >= resultLimit) {
									break;
								}
							}
						}
						return result;
					}
				}, {
					key: 'suggest',
					value: function suggest(e) {
						switch (e.keyCode) {
							case 13:
								this.updateItem(this.itemsList[this.optionIndex]);
								this.$.itemLabel.blur();
								this.hide();
								break;
							case 27:
								this.revert();
								this.hide();
								break;
							case 38:
							case 40:
								this.selectAdjacentItem(e.keyCode);
								break;
							default:
								this.invalidLabel = false;
								if (this.labelValue) {
									this.hasList = true;
									this.hasLabel = true;
								}

								this.itemsList = this.updateItemsList();
								if (this.itemsList.length === 0) {
									if (this.labelValue) {
										this.invalidLabel = true;
									} else {
										this.hasLabel = false;
									}
									this.hasList = false;
								}
								break;
						}
					}
				}]);

				return Typeahead;
			}());

			_export('Typeahead', Typeahead);

			Polymer(Typeahead);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/layout/fields/FieldSetHandler.js', [], function (_export, _context) {
	var _createClass, FieldSetHandler;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('FieldSetHandler', FieldSetHandler = function () {
				function FieldSetHandler(fieldSets, desktop, tablet, phone) {
					_classCallCheck(this, FieldSetHandler);

					this.fieldSets = fieldSets;
					this.desktopFields = { name: desktop };
					if (tablet) this.tabletFields = { name: tablet };
					if (phone) this.phoneFields = { name: phone };
				}

				_createClass(FieldSetHandler, [{
					key: 'getByViewport',
					value: function getByViewport(viewport) {
						var size = viewport ? viewport.current().size : '';
						switch (size) {
							case 'XS':
								return this._getPhoneFieldSet();
							case 'S':
								return this._getTabletFieldSet();
							default:
								return this._getDesktopFieldSet();
						}
					}
				}, {
					key: '_getPhoneFieldSet',
					value: function _getPhoneFieldSet() {
						var fieldSet = this.phoneFields ? this.fieldSets[this.phoneFields.name] : null;
						if (!fieldSet || fieldSet.length === 0) return this._getTabletFieldSet();

						this.phoneFields.fields = fieldSet;
						return this.phoneFields;
					}
				}, {
					key: '_getTabletFieldSet',
					value: function _getTabletFieldSet() {
						var fieldSet = this.tabletFields ? this.fieldSets[this.tabletFields.name] : null;
						if (!fieldSet || fieldSet.length === 0) return this._getDesktopFieldSet();

						this.tabletFields.fields = fieldSet;
						return this.tabletFields;
					}
				}, {
					key: '_getDesktopFieldSet',
					value: function _getDesktopFieldSet() {
						this.desktopFields.fields = this.fieldSets[this.desktopFields.name];
						return this.desktopFields;
					}
				}]);

				return FieldSetHandler;
			}());

			_export('FieldSetHandler', FieldSetHandler);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkZpZWxkU2V0SGFuZGxlci5qcyJdLCJuYW1lcyI6WyJGaWVsZFNldEhhbmRsZXIiLCJmaWVsZFNldHMiLCJkZXNrdG9wIiwidGFibGV0IiwicGhvbmUiLCJkZXNrdG9wRmllbGRzIiwibmFtZSIsInRhYmxldEZpZWxkcyIsInBob25lRmllbGRzIiwidmlld3BvcnQiLCJzaXplIiwiY3VycmVudCIsIl9nZXRQaG9uZUZpZWxkU2V0IiwiX2dldFRhYmxldEZpZWxkU2V0IiwiX2dldERlc2t0b3BGaWVsZFNldCIsImZpZWxkU2V0IiwibGVuZ3RoIiwiZmllbGRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs4QkFBYUEsZTtBQUVaLDZCQUFZQyxTQUFaLEVBQXVCQyxPQUF2QixFQUFnQ0MsTUFBaEMsRUFBd0NDLEtBQXhDLEVBQStDO0FBQUE7O0FBQzlDLFVBQUtILFNBQUwsR0FBaUJBLFNBQWpCO0FBQ0EsVUFBS0ksYUFBTCxHQUFxQixFQUFDQyxNQUFNSixPQUFQLEVBQXJCO0FBQ0EsU0FBR0MsTUFBSCxFQUNDLEtBQUtJLFlBQUwsR0FBb0IsRUFBQ0QsTUFBTUgsTUFBUCxFQUFwQjtBQUNELFNBQUdDLEtBQUgsRUFDQyxLQUFLSSxXQUFMLEdBQW1CLEVBQUNGLE1BQU1GLEtBQVAsRUFBbkI7QUFDRDs7OzttQ0FFYUssUSxFQUFVO0FBQ3ZCLFVBQUlDLE9BQU9ELFdBQVdBLFNBQVNFLE9BQVQsR0FBbUJELElBQTlCLEdBQXFDLEVBQWhEO0FBQ0EsY0FBT0EsSUFBUDtBQUNDLFlBQUssSUFBTDtBQUNDLGVBQU8sS0FBS0UsaUJBQUwsRUFBUDtBQUNELFlBQUssR0FBTDtBQUNDLGVBQU8sS0FBS0Msa0JBQUwsRUFBUDtBQUNEO0FBQ0MsZUFBTyxLQUFLQyxtQkFBTCxFQUFQO0FBTkY7QUFRQTs7O3lDQUVtQjtBQUNuQixVQUFJQyxXQUFXLEtBQUtQLFdBQUwsR0FBbUIsS0FBS1AsU0FBTCxDQUFlLEtBQUtPLFdBQUwsQ0FBaUJGLElBQWhDLENBQW5CLEdBQTJELElBQTFFO0FBQ0EsVUFBRyxDQUFDUyxRQUFELElBQWFBLFNBQVNDLE1BQVQsS0FBb0IsQ0FBcEMsRUFDQyxPQUFPLEtBQUtILGtCQUFMLEVBQVA7O0FBRUQsV0FBS0wsV0FBTCxDQUFpQlMsTUFBakIsR0FBMEJGLFFBQTFCO0FBQ0EsYUFBTyxLQUFLUCxXQUFaO0FBQ0E7OzswQ0FFb0I7QUFDcEIsVUFBSU8sV0FBVyxLQUFLUixZQUFMLEdBQW9CLEtBQUtOLFNBQUwsQ0FBZSxLQUFLTSxZQUFMLENBQWtCRCxJQUFqQyxDQUFwQixHQUE2RCxJQUE1RTtBQUNBLFVBQUcsQ0FBQ1MsUUFBRCxJQUFhQSxTQUFTQyxNQUFULEtBQW9CLENBQXBDLEVBQ0MsT0FBTyxLQUFLRixtQkFBTCxFQUFQOztBQUVELFdBQUtQLFlBQUwsQ0FBa0JVLE1BQWxCLEdBQTJCRixRQUEzQjtBQUNBLGFBQU8sS0FBS1IsWUFBWjtBQUNBOzs7MkNBRXFCO0FBQ3JCLFdBQUtGLGFBQUwsQ0FBbUJZLE1BQW5CLEdBQTRCLEtBQUtoQixTQUFMLENBQWUsS0FBS0ksYUFBTCxDQUFtQkMsSUFBbEMsQ0FBNUI7QUFDQSxhQUFPLEtBQUtELGFBQVo7QUFDQSIsImZpbGUiOiJGaWVsZFNldEhhbmRsZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRmllbGRTZXRIYW5kbGVyIHtcblxuXHRjb25zdHJ1Y3RvcihmaWVsZFNldHMsIGRlc2t0b3AsIHRhYmxldCwgcGhvbmUpIHtcblx0XHR0aGlzLmZpZWxkU2V0cyA9IGZpZWxkU2V0cztcblx0XHR0aGlzLmRlc2t0b3BGaWVsZHMgPSB7bmFtZTogZGVza3RvcH07XG5cdFx0aWYodGFibGV0KVxuXHRcdFx0dGhpcy50YWJsZXRGaWVsZHMgPSB7bmFtZTogdGFibGV0fTtcblx0XHRpZihwaG9uZSlcblx0XHRcdHRoaXMucGhvbmVGaWVsZHMgPSB7bmFtZTogcGhvbmV9O1xuXHR9XG5cblx0Z2V0QnlWaWV3cG9ydCh2aWV3cG9ydCkge1xuXHRcdGxldCBzaXplID0gdmlld3BvcnQgPyB2aWV3cG9ydC5jdXJyZW50KCkuc2l6ZSA6ICcnO1xuXHRcdHN3aXRjaChzaXplKSB7XG5cdFx0XHRjYXNlICdYUyc6XG5cdFx0XHRcdHJldHVybiB0aGlzLl9nZXRQaG9uZUZpZWxkU2V0KCk7XG5cdFx0XHRjYXNlICdTJzpcblx0XHRcdFx0cmV0dXJuIHRoaXMuX2dldFRhYmxldEZpZWxkU2V0KCk7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRyZXR1cm4gdGhpcy5fZ2V0RGVza3RvcEZpZWxkU2V0KCk7XG5cdFx0fVxuXHR9XG5cblx0X2dldFBob25lRmllbGRTZXQoKSB7XG5cdFx0bGV0IGZpZWxkU2V0ID0gdGhpcy5waG9uZUZpZWxkcyA/IHRoaXMuZmllbGRTZXRzW3RoaXMucGhvbmVGaWVsZHMubmFtZV0gOiBudWxsO1xuXHRcdGlmKCFmaWVsZFNldCB8fCBmaWVsZFNldC5sZW5ndGggPT09IDApXG5cdFx0XHRyZXR1cm4gdGhpcy5fZ2V0VGFibGV0RmllbGRTZXQoKTtcblxuXHRcdHRoaXMucGhvbmVGaWVsZHMuZmllbGRzID0gZmllbGRTZXQ7XG5cdFx0cmV0dXJuIHRoaXMucGhvbmVGaWVsZHM7XG5cdH1cblxuXHRfZ2V0VGFibGV0RmllbGRTZXQoKSB7XG5cdFx0bGV0IGZpZWxkU2V0ID0gdGhpcy50YWJsZXRGaWVsZHMgPyB0aGlzLmZpZWxkU2V0c1t0aGlzLnRhYmxldEZpZWxkcy5uYW1lXSA6IG51bGw7XG5cdFx0aWYoIWZpZWxkU2V0IHx8IGZpZWxkU2V0Lmxlbmd0aCA9PT0gMClcblx0XHRcdHJldHVybiB0aGlzLl9nZXREZXNrdG9wRmllbGRTZXQoKTtcblxuXHRcdHRoaXMudGFibGV0RmllbGRzLmZpZWxkcyA9IGZpZWxkU2V0O1xuXHRcdHJldHVybiB0aGlzLnRhYmxldEZpZWxkcztcblx0fVxuXG5cdF9nZXREZXNrdG9wRmllbGRTZXQoKSB7XG5cdFx0dGhpcy5kZXNrdG9wRmllbGRzLmZpZWxkcyA9IHRoaXMuZmllbGRTZXRzW3RoaXMuZGVza3RvcEZpZWxkcy5uYW1lXTtcblx0XHRyZXR1cm4gdGhpcy5kZXNrdG9wRmllbGRzO1xuXHR9XG59Il19
'use strict';

System.register('common/layout/sb-div/Div.js', [], function (_export, _context) {
    var _createClass, Div;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('Div', Div = function () {
                function Div() {
                    _classCallCheck(this, Div);
                }

                _createClass(Div, [{
                    key: 'beforeRegister',
                    value: function beforeRegister() {
                        this.is = 'sb-div';
                    }
                }]);

                return Div;
            }());

            _export('Div', Div);

            Polymer(Div);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRpdi5qcyJdLCJuYW1lcyI6WyJEaXYiLCJpcyIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQUFhQSxHOzs7Ozs7O3FEQUVRO0FBQ2IsNkJBQUtDLEVBQUwsR0FBVSxRQUFWO0FBQ0g7Ozs7Ozs7O0FBR0xDLG9CQUFRRixHQUFSIiwiZmlsZSI6IkRpdi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEaXYge1xuXG4gICAgYmVmb3JlUmVnaXN0ZXIoKSB7XG4gICAgICAgIHRoaXMuaXMgPSAnc2ItZGl2JztcbiAgICB9XG59XG5cblBvbHltZXIoRGl2KTsiXX0=
'use strict';

System.register('common/layout/sb-group/Group.js', [], function (_export, _context) {
	var _createClass, Group;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('Group', Group = function () {
				function Group() {
					_classCallCheck(this, Group);
				}

				_createClass(Group, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-group';
						this.properties = {
							item: String,
							group: Array,
							data: {
								type: Object,
								notify: true
							},
							parent: {
								type: String,
								value: null
							},
							model: {
								type: Object,
								value: null
							},
							groupClass: String,
							itemClass: String,
							groupDisplay: Object,
							primaryIndex: Number };
					}
				}, {
					key: 'buildGroup',
					value: function buildGroup() {
						var template = Polymer.dom(this.$.g).querySelector('template');
						if (template) Polymer.dom(template.parentNode).removeChild(template);

						template = document.createElement('template', 'dom-bind');
						template.model = this.model;
						template.data = this.data;
						this.buildItems(template);
						Polymer.dom(this.$.g).appendChild(template);
						this.template = template;

						Polymer.dom(this.$.g).observeNodes(function (info) {
							if (info.addedNodes[0]) this.bindElementEvents(info.addedNodes[0].childNodes);
						}.bind(this));
					}
				}, {
					key: 'buildItems',
					value: function buildItems(template) {
						var doc = template.content.ownerDocument;
						var root = doc.createElement('div');
						if (this.groupClass) Polymer.dom(root).setAttribute('class', this.groupClass);
						this.group.forEach(function (item, index) {
							var html = '<' + this.item + ' ' + 'item="' + item + '" ' + 'value="{{data.' + item + '}}" ' + 'model="[[model]]"';

							if (this.primaryIndex !== index && this.groupDisplay && this.groupDisplay[item]) html += ' field-label="' + this.groupDisplay[item] + '"';

							var classes = '';
							if (this.itemClass) classes += this.itemClass + ' ';
							if (this.primaryIndex === index) classes += 'primary {{selected}} {{expanded}}';else if (this.primaryIndex >= 0) classes += 'secondary {{expanded}}';

							if (classes) {
								var equals = classes.indexOf('{{') != -1 ? '$=' : '=';
								html += ' class' + equals + '"' + classes + '"';
							}
							html += '></' + this.item + '>';

							var div = doc.createElement('div');
							div.innerHTML = html;
							Polymer.dom(root).appendChild(Polymer.dom(div).firstChild);
						}.bind(this));
						Polymer.dom(template.content).appendChild(root);
					}
				}, {
					key: 'bindElementEvents',
					value: function bindElementEvents(elements) {
						var numElements = elements ? elements.length : 0;
						for (var i = 0; i < numElements; i++) {
							elements[i].addEventListener('value-changed', function (e) {
								if (e.target.item && this.data[e.target.item] !== e.detail.value) this.set('data.' + e.target.item, e.detail.value);
							}.bind(this));
						}

						if (!this.parent) return;

						this.domHost.addEventListener(this.parent + '-changed', function (e) {
							if (!e.detail.path) return;

							var parts = e.detail.path.split('.');
							var item = parts[parts.length - 1];
							for (var i = 0; i < numElements; i++) {
								if (elements[i].item === item) elements[i].value = e.detail.value;
							}
						}.bind(this));
					}
				}, {
					key: 'handlePrimaryEvents',
					value: function handlePrimaryEvents() {
						this.addEventListener('group-selected', function (e) {
							var className = e.detail.selected ? 'selected' : '';
							this.template.selected = className;
						});
						this.addEventListener('group-expanded', function (e) {
							var primary = e.detail.path.filter(function (node) {
								var el = Polymer.dom(node);
								var tagName = el.node.tagName ? el.node.tagName.toLowerCase() : '';
								return tagName === this.item && el.classList.contains('primary');
							}.bind(this));
							if (primary && primary.length > 0) {
								var className = e.detail.expanded ? 'expanded' : '';
								this.template.expanded = className;
							}
						}.bind(this));
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['buildGroup(item, group, data)', 'handlePrimaryEvents(template, primaryIndex)'];
					}
				}]);

				return Group;
			}());

			_export('Group', Group);

			Polymer(Group);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/layout/sb-side-panel/SidePanel.js', [], function (_export, _context) {
	var _createClass, SidePanel;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('SidePanel', SidePanel = function () {
				function SidePanel() {
					_classCallCheck(this, SidePanel);
				}

				_createClass(SidePanel, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-side-panel';
					}
				}, {
					key: 'closeDrawer',
					value: function closeDrawer() {
						this.fire('x-clicked');
					}
				}, {
					key: 'keyCheck',
					value: function keyCheck(event) {
						if (event.keyCode == 13) this.fire('enter-keypress');
					}
				}]);

				return SidePanel;
			}());

			_export('SidePanel', SidePanel);

			Polymer(SidePanel);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNpZGVQYW5lbC5qcyJdLCJuYW1lcyI6WyJTaWRlUGFuZWwiLCJpcyIsImZpcmUiLCJldmVudCIsImtleUNvZGUiLCJQb2x5bWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFBYUEsUzs7Ozs7OztzQ0FFSztBQUNoQixXQUFLQyxFQUFMLEdBQVUsZUFBVjtBQUNBOzs7bUNBRWE7QUFDYixXQUFLQyxJQUFMLENBQVUsV0FBVjtBQUNBOzs7OEJBRVFDLEssRUFBTztBQUNmLFVBQUlBLE1BQU1DLE9BQU4sSUFBaUIsRUFBckIsRUFDQyxLQUFLRixJQUFMLENBQVUsZ0JBQVY7QUFDRDs7Ozs7Ozs7QUFHRkcsV0FBU0wsU0FBVCIsImZpbGUiOiJTaWRlUGFuZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgU2lkZVBhbmVse1xuXG5cdGJlZm9yZVJlZ2lzdGVyKCkge1xuXHRcdHRoaXMuaXMgPSAnc2Itc2lkZS1wYW5lbCc7XG5cdH1cblxuXHRjbG9zZURyYXdlcigpIHtcblx0XHR0aGlzLmZpcmUoJ3gtY2xpY2tlZCcpO1xuXHR9XG5cblx0a2V5Q2hlY2soZXZlbnQpIHtcblx0XHRpZiAoZXZlbnQua2V5Q29kZSA9PSAxMylcblx0XHRcdHRoaXMuZmlyZSgnZW50ZXIta2V5cHJlc3MnKTtcblx0fVxufVxuXG5Qb2x5bWVyKCBTaWRlUGFuZWwgKTsiXX0=
'use strict';

System.register('common/layout/sb-table-cell/TableCell.js', [], function (_export, _context) {
	var _createClass, TableCell;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('TableCell', TableCell = function () {
				function TableCell() {
					_classCallCheck(this, TableCell);
				}

				_createClass(TableCell, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-table-cell';
						this.properties = {
							item: String,
							value: {
								notify: true
							},
							model: Object
						};
					}
				}, {
					key: 'buildCell',
					value: function buildCell() {
						if (this.model && this.model[this.item] && this.model[this.item].type) {
							this.md = this.model[this.item];
							return;
						}

						var type;
						switch (this.item) {
							case 'boolean':
							case 'radio':
								type = this.item;
								break;
							default:
								type = 'string';
						}

						this.md = this.md || { type: type };
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['buildCell(item, value)'];
					}
				}]);

				return TableCell;
			}());

			_export('TableCell', TableCell);

			Polymer(TableCell);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYmxlQ2VsbC5qcyJdLCJuYW1lcyI6WyJUYWJsZUNlbGwiLCJpcyIsInByb3BlcnRpZXMiLCJpdGVtIiwiU3RyaW5nIiwidmFsdWUiLCJub3RpZnkiLCJtb2RlbCIsIk9iamVjdCIsInR5cGUiLCJtZCIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQUFhQSxTOzs7Ozs7O3NDQUVLO0FBQ2hCLFdBQUtDLEVBQUwsR0FBVSxlQUFWO0FBQ0EsV0FBS0MsVUFBTCxHQUFrQjtBQUNqQkMsYUFBTUMsTUFEVztBQUVqQkMsY0FBTztBQUNOQyxnQkFBUTtBQURGLFFBRlU7QUFLakJDLGNBQU9DO0FBTFUsT0FBbEI7QUFPQTs7O2lDQU1XO0FBQ1gsVUFBRyxLQUFLRCxLQUFMLElBQWMsS0FBS0EsS0FBTCxDQUFXLEtBQUtKLElBQWhCLENBQWQsSUFBdUMsS0FBS0ksS0FBTCxDQUFXLEtBQUtKLElBQWhCLEVBQXNCTSxJQUFoRSxFQUFzRTtBQUNyRSxZQUFLQyxFQUFMLEdBQVUsS0FBS0gsS0FBTCxDQUFXLEtBQUtKLElBQWhCLENBQVY7QUFDQTtBQUNBOztBQUVELFVBQUlNLElBQUo7QUFDQSxjQUFPLEtBQUtOLElBQVo7QUFDQyxZQUFLLFNBQUw7QUFDQSxZQUFLLE9BQUw7QUFDQ00sZUFBTyxLQUFLTixJQUFaO0FBQ0E7QUFDRDtBQUNDTSxlQUFPLFFBQVA7QUFORjs7QUFTQSxXQUFLQyxFQUFMLEdBQVUsS0FBS0EsRUFBTCxJQUFXLEVBQUNELE1BQU1BLElBQVAsRUFBckI7QUFDQTs7O3lCQXJCZTtBQUNmLGFBQU8sQ0FBQyx3QkFBRCxDQUFQO0FBQ0E7Ozs7Ozs7O0FBc0JGRSxXQUFRWCxTQUFSIiwiZmlsZSI6IlRhYmxlQ2VsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBUYWJsZUNlbGwge1xuXG5cdGJlZm9yZVJlZ2lzdGVyKCkge1xuXHRcdHRoaXMuaXMgPSAnc2ItdGFibGUtY2VsbCc7XG5cdFx0dGhpcy5wcm9wZXJ0aWVzID0ge1xuXHRcdFx0aXRlbTogU3RyaW5nLFxuXHRcdFx0dmFsdWU6IHtcblx0XHRcdFx0bm90aWZ5OiB0cnVlXG5cdFx0XHR9LFxuXHRcdFx0bW9kZWw6IE9iamVjdFxuXHRcdH1cblx0fVxuXG5cdGdldCBvYnNlcnZlcnMoKSB7XG5cdFx0cmV0dXJuIFsnYnVpbGRDZWxsKGl0ZW0sIHZhbHVlKSddO1xuXHR9XG5cblx0YnVpbGRDZWxsKCkge1xuXHRcdGlmKHRoaXMubW9kZWwgJiYgdGhpcy5tb2RlbFt0aGlzLml0ZW1dICYmIHRoaXMubW9kZWxbdGhpcy5pdGVtXS50eXBlKSB7XG5cdFx0XHR0aGlzLm1kID0gdGhpcy5tb2RlbFt0aGlzLml0ZW1dO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHQvLyBpZiBubyBtb2RlbCB0aGVuIGluZmVyIHRoZSB0eXBlIGJhc2VkIG9uIHRoZSBpdGVtIG5hbWVcblx0XHR2YXIgdHlwZTtcblx0XHRzd2l0Y2godGhpcy5pdGVtKSB7XG5cdFx0XHRjYXNlICdib29sZWFuJzpcblx0XHRcdGNhc2UgJ3JhZGlvJzpcblx0XHRcdFx0dHlwZSA9IHRoaXMuaXRlbTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHR0eXBlID0gJ3N0cmluZyc7XG5cdFx0fVxuXG5cdFx0dGhpcy5tZCA9IHRoaXMubWQgfHwge3R5cGU6IHR5cGV9O1xuXHR9XG59XG5cblBvbHltZXIoVGFibGVDZWxsKTsiXX0=
'use strict';

System.register('common/layout/sb-table-header/TableHeader.js', [], function (_export, _context) {
	var _createClass, TableHeader;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('TableHeader', TableHeader = function () {
				function TableHeader() {
					_classCallCheck(this, TableHeader);
				}

				_createClass(TableHeader, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-table-header';
						this.properties = {
							cols: Array,
							selectable: Boolean,
							selectionType: {
								type: String,
								value: 'boolean'
							},
							selected: {
								type: Boolean,
								value: false
							}
						};
					}
				}, {
					key: 'buildLabels',
					value: function buildLabels() {
						var data = {};
						var group = [];

						this.cols.forEach(function (col) {
							if (!col) return;

							var item = col.replace(/\W/g, '');
							group.push(item);
							data[item] = col;
						});

						this.$.header.data = undefined;
						this.$.header.group = undefined;

						this.$.header.data = data;
						this.$.header.group = group;
					}
				}, {
					key: 'setSelectable',
					value: function setSelectable() {
						if (!this.selectable) return;

						this.$.selection.addEventListener('data-changed', function (e) {
							this.internal = true;
							this.selected = typeof e.detail.value[this.selectionType] !== 'undefined' ? e.detail.value[this.selectionType] : e.detail.value;
							this.internal = false;
							this.fire('header-selection-changed', { selected: this.selected });
						}.bind(this));
					}
				}, {
					key: 'setSelected',
					value: function setSelected() {
						if (!this.selectable || this.internal) return;

						var key = this.selectionType === 'boolean' ? 'boolean' : 'string';
						this.$.selection.group = [key];
						var selectionData = {};

						var value = this.selectionType === 'boolean' ? this.selected : '';
						selectionData[key] = value;
						this.$.selection.data = selectionData;
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['buildLabels(cols)', 'setSelectable(selectable, selectionType)', 'setSelected(selected, selectable, selectionType)'];
					}
				}]);

				return TableHeader;
			}());

			_export('TableHeader', TableHeader);

			Polymer(TableHeader);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYmxlSGVhZGVyLmpzIl0sIm5hbWVzIjpbIlRhYmxlSGVhZGVyIiwiaXMiLCJwcm9wZXJ0aWVzIiwiY29scyIsIkFycmF5Iiwic2VsZWN0YWJsZSIsIkJvb2xlYW4iLCJzZWxlY3Rpb25UeXBlIiwidHlwZSIsIlN0cmluZyIsInZhbHVlIiwic2VsZWN0ZWQiLCJkYXRhIiwiZ3JvdXAiLCJmb3JFYWNoIiwiY29sIiwiaXRlbSIsInJlcGxhY2UiLCJwdXNoIiwiJCIsImhlYWRlciIsInVuZGVmaW5lZCIsInNlbGVjdGlvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiaW50ZXJuYWwiLCJkZXRhaWwiLCJmaXJlIiwiYmluZCIsImtleSIsInNlbGVjdGlvbkRhdGEiLCJQb2x5bWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFBYUEsVzs7Ozs7OztzQ0FFSztBQUNoQixXQUFLQyxFQUFMLEdBQVUsaUJBQVY7QUFDQSxXQUFLQyxVQUFMLEdBQWtCO0FBQ2pCQyxhQUFNQyxLQURXO0FBRWpCQyxtQkFBWUMsT0FGSztBQUdqQkMsc0JBQWU7QUFDZEMsY0FBTUMsTUFEUTtBQUVkQyxlQUFPO0FBRk8sUUFIRTtBQU9qQkMsaUJBQVU7QUFDVEgsY0FBTUYsT0FERztBQUVUSSxlQUFPO0FBRkU7QUFQTyxPQUFsQjtBQVlBOzs7bUNBTWE7QUFDYixVQUFJRSxPQUFPLEVBQVg7QUFDQSxVQUFJQyxRQUFRLEVBQVo7O0FBRUEsV0FBS1YsSUFBTCxDQUFVVyxPQUFWLENBQWtCLFVBQVNDLEdBQVQsRUFBYztBQUMvQixXQUFHLENBQUNBLEdBQUosRUFDQzs7QUFFRCxXQUFJQyxPQUFPRCxJQUFJRSxPQUFKLENBQVksS0FBWixFQUFtQixFQUFuQixDQUFYO0FBQ0FKLGFBQU1LLElBQU4sQ0FBV0YsSUFBWDtBQUNBSixZQUFLSSxJQUFMLElBQWFELEdBQWI7QUFDQSxPQVBEOztBQVNBLFdBQUtJLENBQUwsQ0FBT0MsTUFBUCxDQUFjUixJQUFkLEdBQXFCUyxTQUFyQjtBQUNBLFdBQUtGLENBQUwsQ0FBT0MsTUFBUCxDQUFjUCxLQUFkLEdBQXNCUSxTQUF0Qjs7QUFFQSxXQUFLRixDQUFMLENBQU9DLE1BQVAsQ0FBY1IsSUFBZCxHQUFxQkEsSUFBckI7QUFDQSxXQUFLTyxDQUFMLENBQU9DLE1BQVAsQ0FBY1AsS0FBZCxHQUFzQkEsS0FBdEI7QUFDQTs7O3FDQUVlO0FBQ2YsVUFBRyxDQUFDLEtBQUtSLFVBQVQsRUFDQzs7QUFFRCxXQUFLYyxDQUFMLENBQU9HLFNBQVAsQ0FBaUJDLGdCQUFqQixDQUFrQyxjQUFsQyxFQUFrRCxVQUFTQyxDQUFULEVBQVk7QUFDN0QsWUFBS0MsUUFBTCxHQUFnQixJQUFoQjtBQUNBLFlBQUtkLFFBQUwsR0FBZ0IsT0FBT2EsRUFBRUUsTUFBRixDQUFTaEIsS0FBVCxDQUFlLEtBQUtILGFBQXBCLENBQVAsS0FBOEMsV0FBOUMsR0FBNERpQixFQUFFRSxNQUFGLENBQVNoQixLQUFULENBQWUsS0FBS0gsYUFBcEIsQ0FBNUQsR0FBaUdpQixFQUFFRSxNQUFGLENBQVNoQixLQUExSDtBQUNBLFlBQUtlLFFBQUwsR0FBZ0IsS0FBaEI7QUFDQSxZQUFLRSxJQUFMLENBQVUsMEJBQVYsRUFBc0MsRUFBQ2hCLFVBQVUsS0FBS0EsUUFBaEIsRUFBdEM7QUFDQSxPQUxpRCxDQUtoRGlCLElBTGdELENBSzNDLElBTDJDLENBQWxEO0FBTUE7OzttQ0FFYTtBQUNiLFVBQUcsQ0FBQyxLQUFLdkIsVUFBTixJQUFvQixLQUFLb0IsUUFBNUIsRUFDQzs7QUFFRCxVQUFJSSxNQUFNLEtBQUt0QixhQUFMLEtBQXVCLFNBQXZCLEdBQW1DLFNBQW5DLEdBQStDLFFBQXpEO0FBQ0EsV0FBS1ksQ0FBTCxDQUFPRyxTQUFQLENBQWlCVCxLQUFqQixHQUF5QixDQUFDZ0IsR0FBRCxDQUF6QjtBQUNBLFVBQUlDLGdCQUFnQixFQUFwQjs7QUFFQSxVQUFJcEIsUUFBUSxLQUFLSCxhQUFMLEtBQXVCLFNBQXZCLEdBQW1DLEtBQUtJLFFBQXhDLEdBQW1ELEVBQS9EO0FBQ0FtQixvQkFBY0QsR0FBZCxJQUFxQm5CLEtBQXJCO0FBQ0EsV0FBS1MsQ0FBTCxDQUFPRyxTQUFQLENBQWlCVixJQUFqQixHQUF3QmtCLGFBQXhCO0FBQ0E7Ozt5QkEvQ2U7QUFDZixhQUFPLENBQUMsbUJBQUQsRUFBc0IsMENBQXRCLEVBQWtFLGtEQUFsRSxDQUFQO0FBQ0E7Ozs7Ozs7O0FBZ0RGQyxXQUFRL0IsV0FBUiIsImZpbGUiOiJUYWJsZUhlYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBUYWJsZUhlYWRlciB7XG5cblx0YmVmb3JlUmVnaXN0ZXIoKSB7XG5cdFx0dGhpcy5pcyA9ICdzYi10YWJsZS1oZWFkZXInO1xuXHRcdHRoaXMucHJvcGVydGllcyA9IHtcblx0XHRcdGNvbHM6IEFycmF5LCAvLyBhcnJheSBvZiBzdHJpbmdzIHRoYXQgcmVwcmVzZW50cyB0aGUgY29sdW1uc1xuXHRcdFx0c2VsZWN0YWJsZTogQm9vbGVhbiwgLy8gdHJ1ZSBpZiB0aGUgcm93J3MgbGVmdCBtb3N0IGNvbHVtbiBzZWxlY3RhYmxlXG5cdFx0XHRzZWxlY3Rpb25UeXBlOiB7IC8vIFwiYm9vbGVhblwiIGZvciBjaGVja2JveCBvciBcInJhZGlvXCIgZm9yIHJhZGlvXG5cdFx0XHRcdHR5cGU6IFN0cmluZyxcblx0XHRcdFx0dmFsdWU6ICdib29sZWFuJ1xuXHRcdFx0fSxcblx0XHRcdHNlbGVjdGVkOiB7IC8vIHRydWUgaWYgdGhlIHJvdyBpcyBzZWxlY3RhYmxlIGFuZCBzaG91bGQgYmUgc2VsZWN0ZWRcblx0XHRcdFx0dHlwZTogQm9vbGVhbixcblx0XHRcdFx0dmFsdWU6IGZhbHNlXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Z2V0IG9ic2VydmVycygpIHtcblx0XHRyZXR1cm4gWydidWlsZExhYmVscyhjb2xzKScsICdzZXRTZWxlY3RhYmxlKHNlbGVjdGFibGUsIHNlbGVjdGlvblR5cGUpJywgJ3NldFNlbGVjdGVkKHNlbGVjdGVkLCBzZWxlY3RhYmxlLCBzZWxlY3Rpb25UeXBlKSddO1xuXHR9XG5cblx0YnVpbGRMYWJlbHMoKSB7XG5cdFx0dmFyIGRhdGEgPSB7fTtcblx0XHR2YXIgZ3JvdXAgPSBbXTtcblxuXHRcdHRoaXMuY29scy5mb3JFYWNoKGZ1bmN0aW9uKGNvbCkge1xuXHRcdFx0aWYoIWNvbClcblx0XHRcdFx0cmV0dXJuO1xuXG5cdFx0XHR2YXIgaXRlbSA9IGNvbC5yZXBsYWNlKC9cXFcvZywgJycpO1xuXHRcdFx0Z3JvdXAucHVzaChpdGVtKTtcblx0XHRcdGRhdGFbaXRlbV0gPSBjb2w7XG5cdFx0fSk7XG5cblx0XHR0aGlzLiQuaGVhZGVyLmRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0dGhpcy4kLmhlYWRlci5ncm91cCA9IHVuZGVmaW5lZDtcblxuXHRcdHRoaXMuJC5oZWFkZXIuZGF0YSA9IGRhdGE7XG5cdFx0dGhpcy4kLmhlYWRlci5ncm91cCA9IGdyb3VwO1xuXHR9XG5cblx0c2V0U2VsZWN0YWJsZSgpIHtcblx0XHRpZighdGhpcy5zZWxlY3RhYmxlKVxuXHRcdFx0cmV0dXJuO1xuXG5cdFx0dGhpcy4kLnNlbGVjdGlvbi5hZGRFdmVudExpc3RlbmVyKCdkYXRhLWNoYW5nZWQnLCBmdW5jdGlvbihlKSB7XG5cdFx0XHR0aGlzLmludGVybmFsID0gdHJ1ZTsgLy8gaW50ZXJuYWwgc2V0dGluZyBvZiB0aGlzLnNlbGVjdGVkIHNvIGRvIG5vdCBleGVjdXRlIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgc2V0U2VsZWN0ZWQgb2JzZXJ2ZXIgYmVsb3dcblx0XHRcdHRoaXMuc2VsZWN0ZWQgPSB0eXBlb2YgZS5kZXRhaWwudmFsdWVbdGhpcy5zZWxlY3Rpb25UeXBlXSAhPT0gJ3VuZGVmaW5lZCcgPyBlLmRldGFpbC52YWx1ZVt0aGlzLnNlbGVjdGlvblR5cGVdIDogZS5kZXRhaWwudmFsdWU7XG5cdFx0XHR0aGlzLmludGVybmFsID0gZmFsc2U7XG5cdFx0XHR0aGlzLmZpcmUoJ2hlYWRlci1zZWxlY3Rpb24tY2hhbmdlZCcsIHtzZWxlY3RlZDogdGhpcy5zZWxlY3RlZH0pO1xuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH1cblxuXHRzZXRTZWxlY3RlZCgpIHtcblx0XHRpZighdGhpcy5zZWxlY3RhYmxlIHx8IHRoaXMuaW50ZXJuYWwpXG5cdFx0XHRyZXR1cm47XG5cblx0XHRsZXQga2V5ID0gdGhpcy5zZWxlY3Rpb25UeXBlID09PSAnYm9vbGVhbicgPyAnYm9vbGVhbicgOiAnc3RyaW5nJztcblx0XHR0aGlzLiQuc2VsZWN0aW9uLmdyb3VwID0gW2tleV07XG5cdFx0bGV0IHNlbGVjdGlvbkRhdGEgPSB7fTtcblxuXHRcdGxldCB2YWx1ZSA9IHRoaXMuc2VsZWN0aW9uVHlwZSA9PT0gJ2Jvb2xlYW4nID8gdGhpcy5zZWxlY3RlZCA6ICcnO1xuXHRcdHNlbGVjdGlvbkRhdGFba2V5XSA9IHZhbHVlO1xuXHRcdHRoaXMuJC5zZWxlY3Rpb24uZGF0YSA9IHNlbGVjdGlvbkRhdGE7XG5cdH1cbn1cblxuUG9seW1lcihUYWJsZUhlYWRlcik7Il19
'use strict';

System.register('common/layout/sb-table-row/TableRow.js', [], function (_export, _context) {
	var _createClass, TableRow;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('TableRow', TableRow = function () {
				function TableRow() {
					_classCallCheck(this, TableRow);
				}

				_createClass(TableRow, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-table-row';
						this.properties = {
							cell: String,
							cols: Array,
							colsDisplay: Object,
							data: {
								type: Object,
								notify: true
							},
							model: {
								type: Object,
								value: null
							},
							selectable: {
								type: Boolean,
								value: false
							},
							selected: {
								type: Boolean,
								value: false
							},
							selectionType: {
								type: String,
								value: 'boolean'
							},
							selectionIdDataPath: {
								type: String,
								value: 'Id'
							}
						};
					}
				}, {
					key: 'buildRow',
					value: function buildRow() {
						this.$.row.data = undefined;
						this.$.row.groupDisplay = undefined;
						this.$.row.group = undefined;

						this.$.row.data = this.data;
						this.$.row.groupDisplay = this.colsDisplay;
						this.$.row.primaryIndex = 0;
						this.$.row.group = this.cols;

						this.rowDataChangedListener = this.rowDataChangedListener || function (e) {
							if (e.detail.path) this.set(e.detail.path, e.detail.value);
						}.bind(this);

						this.$.row.removeEventListener('data-changed', this.rowDataChangedListener);
						this.$.row.addEventListener('data-changed', this.rowDataChangedListener);
					}
				}, {
					key: 'setSelectable',
					value: function setSelectable() {
						if (!this.selectable) return;

						this.$.selection.addEventListener('data-changed', function (e) {
							this.internal = true;
							this.selected = typeof e.detail.value[this.selectionType] !== 'undefined' ? e.detail.value[this.selectionType] : e.detail.value;
							this.internal = false;
							this.fire('selection-changed', { selected: this.selected, Id: this.get('data.' + this.selectionIdDataPath) });
						}.bind(this));
					}
				}, {
					key: 'setSelected',
					value: function setSelected() {
						if (!this.selectable || this.internal) return;

						this.$.selection.group = [this.selectionType];
						var selectionData = {};
						selectionData[this.selectionType] = this.selected;
						this.$.selection.data = selectionData;
					}
				}, {
					key: 'select',
					value: function select(e) {
						var rootTarget = Polymer.dom(e).rootTarget;
						var tagName = rootTarget && rootTarget.tagName ? rootTarget.tagName.toLowerCase() : '';
						if (tagName === 'sb-group') this.selected = !this.selected;
						this.$.row.fire('group-selected', { selected: this.selected });
					}
				}, {
					key: 'expand',
					value: function expand(e) {
						this.expanded = !this.expanded;
						this.$.row.fire('group-expanded', { expanded: this.expanded, path: Polymer.dom(e).path });
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['buildRow(cell, cols, colsDisplay, data)', 'setSelectable(selectable)', 'setSelected(selected, selectable, selectionType)'];
					}
				}]);

				return TableRow;
			}());

			_export('TableRow', TableRow);

			Polymer(TableRow);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
'use strict';

System.register('common/layout/sb-tabs/Tabs.js', [], function (_export, _context) {
	var _createClass, Tabs;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('Tabs', Tabs = function () {
				function Tabs() {
					_classCallCheck(this, Tabs);
				}

				_createClass(Tabs, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-tabs';
						this.properties = {
							tabs: Array,
							pageComponent: String,
							pageData: {
								type: Object,
								value: {}
							},
							commonData: {
								type: Object,
								value: {}
							},
							selectedTabIndex: {
								type: Number,
								value: 0,
								observer: 'handleSelectedChanged'
							},
							tabsClass: {
								type: String,
								value: 'horizontal layout center-justified'
							},
							usePagination: {
								type: Boolean,
								value: false
							},
							paginationClass: {
								type: String,
								value: 'horizontal layout center-justified'
							}
						};
					}
				}, {
					key: 'render',
					value: function render() {
						this.enforceValidTabSelected();
						this.buildTabs();
					}
				}, {
					key: 'buildTabs',
					value: function buildTabs() {
						var template = this.$.pages.querySelector('template');
						if (template) Polymer.dom(template.parentNode).removeChild(template);

						template = document.createElement('template', 'dom-bind');
						template.pageData = this.pageData;
						template.commonData = this.commonData;
						this.buildPages(template);
						Polymer.dom(this.$.pages).appendChild(template);
					}
				}, {
					key: 'buildPages',
					value: function buildPages(template) {
						var doc = template.content.ownerDocument;
						this.tabs.forEach(function (tab) {
							var d = doc.createElement('div');
							var elem = doc.createElement(this.pageComponent);
							Polymer.dom(elem).setAttribute('name', tab.name);
							Polymer.dom(elem).setAttribute('label', tab.label);
							Polymer.dom(elem).setAttribute('page-data', '[[pageData.' + tab.name + ']]');
							Polymer.dom(elem).setAttribute('common-data', '[[commonData]]');
							Polymer.dom(d).appendChild(elem);
							Polymer.dom(template.content).appendChild(d);
						}.bind(this));
					}
				}, {
					key: 'setPaginationListener',
					value: function setPaginationListener() {
						if (!this.usePagination) return;

						this.addEventListener('pagination-changed', function (e) {
							this.selectedTabIndex = e.detail.index;
						});
					}
				}, {
					key: 'handleSelectedChanged',
					value: function handleSelectedChanged() {
						this.enforceValidTabSelected();
						this.fire('selected-tab-changed', this.selectedTabIndex);
					}
				}, {
					key: 'enforceValidTabSelected',
					value: function enforceValidTabSelected() {
						if (this.tabs && this.tabs.length <= this.selectedTabIndex) this.selectedTabIndex = 0;
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['render(tabs, pageComponent)', 'setPaginationListener(usePagination)'];
					}
				}]);

				return Tabs;
			}());

			_export('Tabs', Tabs);

			Polymer(Tabs);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRhYnMuanMiXSwibmFtZXMiOlsiVGFicyIsImlzIiwicHJvcGVydGllcyIsInRhYnMiLCJBcnJheSIsInBhZ2VDb21wb25lbnQiLCJTdHJpbmciLCJwYWdlRGF0YSIsInR5cGUiLCJPYmplY3QiLCJ2YWx1ZSIsImNvbW1vbkRhdGEiLCJzZWxlY3RlZFRhYkluZGV4IiwiTnVtYmVyIiwib2JzZXJ2ZXIiLCJ0YWJzQ2xhc3MiLCJ1c2VQYWdpbmF0aW9uIiwiQm9vbGVhbiIsInBhZ2luYXRpb25DbGFzcyIsImVuZm9yY2VWYWxpZFRhYlNlbGVjdGVkIiwiYnVpbGRUYWJzIiwidGVtcGxhdGUiLCIkIiwicGFnZXMiLCJxdWVyeVNlbGVjdG9yIiwiUG9seW1lciIsImRvbSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJ1aWxkUGFnZXMiLCJhcHBlbmRDaGlsZCIsImRvYyIsImNvbnRlbnQiLCJvd25lckRvY3VtZW50IiwiZm9yRWFjaCIsInRhYiIsImQiLCJlbGVtIiwic2V0QXR0cmlidXRlIiwibmFtZSIsImxhYmVsIiwiYmluZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZGV0YWlsIiwiaW5kZXgiLCJmaXJlIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQkFBYUEsSTs7Ozs7OztzQ0FFSztBQUNoQixXQUFLQyxFQUFMLEdBQVUsU0FBVjtBQUNBLFdBQUtDLFVBQUwsR0FBa0I7QUFDakJDLGFBQU1DLEtBRFc7QUFFakJDLHNCQUFlQyxNQUZFO0FBR2pCQyxpQkFBVTtBQUNUQyxjQUFNQyxNQURHO0FBRVRDLGVBQU87QUFGRSxRQUhPO0FBT2pCQyxtQkFBWTtBQUNWSCxjQUFNQyxNQURJO0FBRVhDLGVBQU87QUFGSSxRQVBLO0FBV2hCRSx5QkFBa0I7QUFDbEJKLGNBQU1LLE1BRFk7QUFFbEJILGVBQU8sQ0FGVztBQUdsQkksa0JBQVU7QUFIUSxRQVhGO0FBZ0JqQkMsa0JBQVc7QUFDVlAsY0FBTUYsTUFESTtBQUVWSSxlQUFPO0FBRkcsUUFoQk07QUFvQmpCTSxzQkFBZTtBQUNkUixjQUFNUyxPQURRO0FBRWRQLGVBQU87QUFGTyxRQXBCRTtBQXdCakJRLHdCQUFpQjtBQUNoQlYsY0FBTUYsTUFEVTtBQUVoQkksZUFBTztBQUZTO0FBeEJBLE9BQWxCO0FBNkJBOzs7OEJBTVE7QUFDUixXQUFLUyx1QkFBTDtBQUNBLFdBQUtDLFNBQUw7QUFDQTs7O2lDQUVXO0FBQ1gsVUFBSUMsV0FBVyxLQUFLQyxDQUFMLENBQU9DLEtBQVAsQ0FBYUMsYUFBYixDQUEyQixVQUEzQixDQUFmO0FBQ0EsVUFBR0gsUUFBSCxFQUNDSSxRQUFRQyxHQUFSLENBQVlMLFNBQVNNLFVBQXJCLEVBQWlDQyxXQUFqQyxDQUE2Q1AsUUFBN0M7O0FBRURBLGlCQUFXUSxTQUFTQyxhQUFULENBQXVCLFVBQXZCLEVBQW1DLFVBQW5DLENBQVg7QUFDQVQsZUFBU2QsUUFBVCxHQUFvQixLQUFLQSxRQUF6QjtBQUNBYyxlQUFTVixVQUFULEdBQXNCLEtBQUtBLFVBQTNCO0FBQ0EsV0FBS29CLFVBQUwsQ0FBZ0JWLFFBQWhCO0FBQ0FJLGNBQVFDLEdBQVIsQ0FBWSxLQUFLSixDQUFMLENBQU9DLEtBQW5CLEVBQTBCUyxXQUExQixDQUFzQ1gsUUFBdEM7QUFDQTs7O2dDQUVVQSxRLEVBQVU7QUFDcEIsVUFBSVksTUFBTVosU0FBU2EsT0FBVCxDQUFpQkMsYUFBM0I7QUFDQSxXQUFLaEMsSUFBTCxDQUFVaUMsT0FBVixDQUFrQixVQUFTQyxHQUFULEVBQWM7QUFDL0IsV0FBSUMsSUFBSUwsSUFBSUgsYUFBSixDQUFrQixLQUFsQixDQUFSO0FBQ0EsV0FBSVMsT0FBT04sSUFBSUgsYUFBSixDQUFrQixLQUFLekIsYUFBdkIsQ0FBWDtBQUNBb0IsZUFBUUMsR0FBUixDQUFZYSxJQUFaLEVBQWtCQyxZQUFsQixDQUErQixNQUEvQixFQUF1Q0gsSUFBSUksSUFBM0M7QUFDQWhCLGVBQVFDLEdBQVIsQ0FBWWEsSUFBWixFQUFrQkMsWUFBbEIsQ0FBK0IsT0FBL0IsRUFBd0NILElBQUlLLEtBQTVDO0FBQ0FqQixlQUFRQyxHQUFSLENBQVlhLElBQVosRUFBa0JDLFlBQWxCLENBQStCLFdBQS9CLEVBQTRDLGdCQUFnQkgsSUFBSUksSUFBcEIsR0FBMkIsSUFBdkU7QUFDQWhCLGVBQVFDLEdBQVIsQ0FBWWEsSUFBWixFQUFrQkMsWUFBbEIsQ0FBK0IsYUFBL0IsRUFBOEMsZ0JBQTlDO0FBQ0FmLGVBQVFDLEdBQVIsQ0FBWVksQ0FBWixFQUFlTixXQUFmLENBQTJCTyxJQUEzQjtBQUNBZCxlQUFRQyxHQUFSLENBQVlMLFNBQVNhLE9BQXJCLEVBQThCRixXQUE5QixDQUEwQ00sQ0FBMUM7QUFDQSxPQVRpQixDQVNoQkssSUFUZ0IsQ0FTWCxJQVRXLENBQWxCO0FBVUE7Ozs2Q0FFdUI7QUFDdkIsVUFBRyxDQUFDLEtBQUszQixhQUFULEVBQ0M7O0FBRUQsV0FBSzRCLGdCQUFMLENBQXNCLG9CQUF0QixFQUE0QyxVQUFVQyxDQUFWLEVBQWE7QUFDeEQsWUFBS2pDLGdCQUFMLEdBQXdCaUMsRUFBRUMsTUFBRixDQUFTQyxLQUFqQztBQUNBLE9BRkQ7QUFHQTs7OzZDQUV1QjtBQUN2QixXQUFLNUIsdUJBQUw7QUFDQSxXQUFLNkIsSUFBTCxDQUFVLHNCQUFWLEVBQWtDLEtBQUtwQyxnQkFBdkM7QUFDQTs7OytDQUV5QjtBQUN6QixVQUFJLEtBQUtULElBQUwsSUFBYSxLQUFLQSxJQUFMLENBQVU4QyxNQUFWLElBQW9CLEtBQUtyQyxnQkFBMUMsRUFDQyxLQUFLQSxnQkFBTCxHQUF3QixDQUF4QjtBQUNEOzs7eUJBcERlO0FBQ2YsYUFBTyxDQUFDLDZCQUFELEVBQWdDLHNDQUFoQyxDQUFQO0FBQ0E7Ozs7Ozs7O0FBcURGYSxXQUFRekIsSUFBUiIsImZpbGUiOiJUYWJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIFRhYnMge1xuXG5cdGJlZm9yZVJlZ2lzdGVyKCkge1xuXHRcdHRoaXMuaXMgPSAnc2ItdGFicyc7XG5cdFx0dGhpcy5wcm9wZXJ0aWVzID0ge1xuXHRcdFx0dGFiczogQXJyYXksIC8vIGFycmF5IG9mIHRhYiBvYmplY3RzIHRoYXQgaGFzIGEgbmFtZSBhbmQgbGFiZWwgcHJvcGVydGllc1xuXHRcdFx0cGFnZUNvbXBvbmVudDogU3RyaW5nLCAvLyBuYW1lIG9mIGR5bmFtaWMgcGFnZSBjb21wb25lbnRcblx0XHRcdHBhZ2VEYXRhOiB7IC8vIG9iamVjdCB3aXRoIGtleXMgdGhhdCBtYXRjaCB0aGUgdGFiLm5hbWUgc28gZWFjaCBwYWdlIGNhbiBnZXQgcGFnZSBzcGVjaWZpYyBkYXRhXG5cdFx0XHRcdHR5cGU6IE9iamVjdCxcblx0XHRcdFx0dmFsdWU6IHt9XG5cdFx0XHR9LFxuXHRcdFx0Y29tbW9uRGF0YTogeyAvLyBvYmplY3QgdGhhdCB3aWxsIGJlIHBhc3NlZCB0aHJvdWdoIHRvIGFsbCBwYWdlc1xuIFx0XHRcdFx0dHlwZTogT2JqZWN0LFxuXHRcdFx0XHR2YWx1ZToge31cblx0XHRcdH0sXG4gXHRcdFx0c2VsZWN0ZWRUYWJJbmRleDogeyAvLyB0aGUgaW5kZXggb2YgdGhlIGN1cnJlbnQgc2VsZWN0ZWQgdGFiXG5cdFx0XHRcdHR5cGU6IE51bWJlcixcblx0XHRcdFx0dmFsdWU6IDAsXG5cdFx0XHRcdG9ic2VydmVyOiAnaGFuZGxlU2VsZWN0ZWRDaGFuZ2VkJ1xuXHRcdFx0fSxcblx0XHRcdHRhYnNDbGFzczogeyAvLyBjbGFzcyB2YWx1ZSBvZiB0aGUgcGFwZXItdGFicyBzdWIgY29tcG9uZW50XG5cdFx0XHRcdHR5cGU6IFN0cmluZyxcblx0XHRcdFx0dmFsdWU6ICdob3Jpem9udGFsIGxheW91dCBjZW50ZXItanVzdGlmaWVkJ1xuXHRcdFx0fSxcblx0XHRcdHVzZVBhZ2luYXRpb246IHsgLy8gaWYgdHJ1ZSB1c2UgcGFnaW5hdGlvbiB3aWRnZXQgdG8gbmF2aWdhdGUgdGhyb3VnaCB0YWJzXG5cdFx0XHRcdHR5cGU6IEJvb2xlYW4sXG5cdFx0XHRcdHZhbHVlOiBmYWxzZVxuXHRcdFx0fSxcblx0XHRcdHBhZ2luYXRpb25DbGFzczogeyAvLyBjbGFzcyB2YWx1ZSBvZiB0aGUgZGl2IHdyYXBwZXIgb2Ygc2ItcGFnaW5hdGlvbiBpZiB1c2VQYWdpbmF0aW9uIGlzIHRydWVcblx0XHRcdFx0dHlwZTogU3RyaW5nLFxuXHRcdFx0XHR2YWx1ZTogJ2hvcml6b250YWwgbGF5b3V0IGNlbnRlci1qdXN0aWZpZWQnXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Z2V0IG9ic2VydmVycygpIHtcblx0XHRyZXR1cm4gWydyZW5kZXIodGFicywgcGFnZUNvbXBvbmVudCknLCAnc2V0UGFnaW5hdGlvbkxpc3RlbmVyKHVzZVBhZ2luYXRpb24pJ107XG5cdH1cblxuXHRyZW5kZXIoKSB7XG5cdFx0dGhpcy5lbmZvcmNlVmFsaWRUYWJTZWxlY3RlZCgpO1xuXHRcdHRoaXMuYnVpbGRUYWJzKCk7XG5cdH1cblxuXHRidWlsZFRhYnMoKSB7XG5cdFx0bGV0IHRlbXBsYXRlID0gdGhpcy4kLnBhZ2VzLnF1ZXJ5U2VsZWN0b3IoJ3RlbXBsYXRlJyk7XG5cdFx0aWYodGVtcGxhdGUpIC8vIHJlbW92ZSB0ZW1wbGF0ZSBpZiBhbHJlYWR5IGV4aXN0c1xuXHRcdFx0UG9seW1lci5kb20odGVtcGxhdGUucGFyZW50Tm9kZSkucmVtb3ZlQ2hpbGQodGVtcGxhdGUpO1xuXG5cdFx0dGVtcGxhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZW1wbGF0ZScsICdkb20tYmluZCcpO1xuXHRcdHRlbXBsYXRlLnBhZ2VEYXRhID0gdGhpcy5wYWdlRGF0YTtcblx0XHR0ZW1wbGF0ZS5jb21tb25EYXRhID0gdGhpcy5jb21tb25EYXRhO1xuXHRcdHRoaXMuYnVpbGRQYWdlcyh0ZW1wbGF0ZSk7XG5cdFx0UG9seW1lci5kb20odGhpcy4kLnBhZ2VzKS5hcHBlbmRDaGlsZCh0ZW1wbGF0ZSk7XG5cdH1cblxuXHRidWlsZFBhZ2VzKHRlbXBsYXRlKSB7XG5cdFx0bGV0IGRvYyA9IHRlbXBsYXRlLmNvbnRlbnQub3duZXJEb2N1bWVudDtcblx0XHR0aGlzLnRhYnMuZm9yRWFjaChmdW5jdGlvbih0YWIpIHtcblx0XHRcdGxldCBkID0gZG9jLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXHRcdFx0bGV0IGVsZW0gPSBkb2MuY3JlYXRlRWxlbWVudCh0aGlzLnBhZ2VDb21wb25lbnQpO1xuXHRcdFx0UG9seW1lci5kb20oZWxlbSkuc2V0QXR0cmlidXRlKCduYW1lJywgdGFiLm5hbWUpO1xuXHRcdFx0UG9seW1lci5kb20oZWxlbSkuc2V0QXR0cmlidXRlKCdsYWJlbCcsIHRhYi5sYWJlbCk7XG5cdFx0XHRQb2x5bWVyLmRvbShlbGVtKS5zZXRBdHRyaWJ1dGUoJ3BhZ2UtZGF0YScsICdbW3BhZ2VEYXRhLicgKyB0YWIubmFtZSArICddXScpO1xuXHRcdFx0UG9seW1lci5kb20oZWxlbSkuc2V0QXR0cmlidXRlKCdjb21tb24tZGF0YScsICdbW2NvbW1vbkRhdGFdXScpO1xuXHRcdFx0UG9seW1lci5kb20oZCkuYXBwZW5kQ2hpbGQoZWxlbSk7XG5cdFx0XHRQb2x5bWVyLmRvbSh0ZW1wbGF0ZS5jb250ZW50KS5hcHBlbmRDaGlsZChkKTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9XG5cblx0c2V0UGFnaW5hdGlvbkxpc3RlbmVyKCkge1xuXHRcdGlmKCF0aGlzLnVzZVBhZ2luYXRpb24pXG5cdFx0XHRyZXR1cm47XG5cblx0XHR0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ3BhZ2luYXRpb24tY2hhbmdlZCcsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHR0aGlzLnNlbGVjdGVkVGFiSW5kZXggPSBlLmRldGFpbC5pbmRleDtcblx0XHR9KTtcblx0fVxuXG5cdGhhbmRsZVNlbGVjdGVkQ2hhbmdlZCgpIHtcblx0XHR0aGlzLmVuZm9yY2VWYWxpZFRhYlNlbGVjdGVkKCk7XG5cdFx0dGhpcy5maXJlKCdzZWxlY3RlZC10YWItY2hhbmdlZCcsIHRoaXMuc2VsZWN0ZWRUYWJJbmRleCk7XG5cdH1cblxuXHRlbmZvcmNlVmFsaWRUYWJTZWxlY3RlZCgpIHtcblx0XHRpZiAodGhpcy50YWJzICYmIHRoaXMudGFicy5sZW5ndGggPD0gdGhpcy5zZWxlY3RlZFRhYkluZGV4KVxuXHRcdFx0dGhpcy5zZWxlY3RlZFRhYkluZGV4ID0gMDtcblx0fVxufVxuXG5Qb2x5bWVyKFRhYnMpOyJdfQ==
'use strict';

System.register('common/services/sb-line-editor-cache-save/LineEditorCacheSaver.js', [], function (_export, _context) {
	var _createClass, LineEditorCacheSaver;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('LineEditorCacheSaver', LineEditorCacheSaver = function () {
				function LineEditorCacheSaver() {
					_classCallCheck(this, LineEditorCacheSaver);
				}

				_createClass(LineEditorCacheSaver, [{
					key: 'beforeRegister',
					value: function beforeRegister() {
						this.is = 'sb-line-editor-cache-save';
						this.properties = {
							quote: Object,
							error: {
								type: String,
								notify: true
							}
						};
					}
				}, {
					key: 'ready',
					value: function ready() {
						this.$.service.addEventListener('error-changed', function (e) {
							this.error = e.detail;
							console.log(e.detail);
						}.bind(this));
					}
				}, {
					key: 'save',
					value: function save() {
						this.$.service.transient = true;
						this.$.service.uid = this.quote.record.Id;
						this.$.service.model = this.quote;
						this.$.service.saver = null;
					}
				}, {
					key: 'observers',
					get: function get() {
						return ['save(quote)'];
					}
				}]);

				return LineEditorCacheSaver;
			}());

			_export('LineEditorCacheSaver', LineEditorCacheSaver);

			Polymer(LineEditorCacheSaver);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmVFZGl0b3JDYWNoZVNhdmVyLmpzIl0sIm5hbWVzIjpbIkxpbmVFZGl0b3JDYWNoZVNhdmVyIiwiaXMiLCJwcm9wZXJ0aWVzIiwicXVvdGUiLCJPYmplY3QiLCJlcnJvciIsInR5cGUiLCJTdHJpbmciLCJub3RpZnkiLCIkIiwic2VydmljZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZGV0YWlsIiwiY29uc29sZSIsImxvZyIsImJpbmQiLCJ0cmFuc2llbnQiLCJ1aWQiLCJyZWNvcmQiLCJJZCIsIm1vZGVsIiwic2F2ZXIiLCJQb2x5bWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttQ0FBYUEsb0I7Ozs7Ozs7c0NBRUs7QUFDaEIsV0FBS0MsRUFBTCxHQUFVLDJCQUFWO0FBQ0EsV0FBS0MsVUFBTCxHQUFrQjtBQUNqQkMsY0FBT0MsTUFEVTtBQUVqQkMsY0FBTztBQUNOQyxjQUFNQyxNQURBO0FBRU5DLGdCQUFRO0FBRkY7QUFGVSxPQUFsQjtBQU9BOzs7NkJBTU87QUFDUCxXQUFLQyxDQUFMLENBQU9DLE9BQVAsQ0FBZUMsZ0JBQWYsQ0FBZ0MsZUFBaEMsRUFBaUQsVUFBU0MsQ0FBVCxFQUFZO0FBQzVELFlBQUtQLEtBQUwsR0FBYU8sRUFBRUMsTUFBZjtBQUNBQyxlQUFRQyxHQUFSLENBQVlILEVBQUVDLE1BQWQ7QUFDQSxPQUhnRCxDQUcvQ0csSUFIK0MsQ0FHMUMsSUFIMEMsQ0FBakQ7QUFJQTs7OzRCQUVNO0FBQ04sV0FBS1AsQ0FBTCxDQUFPQyxPQUFQLENBQWVPLFNBQWYsR0FBMkIsSUFBM0I7QUFDQSxXQUFLUixDQUFMLENBQU9DLE9BQVAsQ0FBZVEsR0FBZixHQUFxQixLQUFLZixLQUFMLENBQVdnQixNQUFYLENBQWtCQyxFQUF2QztBQUNBLFdBQUtYLENBQUwsQ0FBT0MsT0FBUCxDQUFlVyxLQUFmLEdBQXVCLEtBQUtsQixLQUE1QjtBQUNBLFdBQUtNLENBQUwsQ0FBT0MsT0FBUCxDQUFlWSxLQUFmLEdBQXVCLElBQXZCO0FBQ0E7Ozt5QkFoQmU7QUFDZixhQUFPLENBQUMsYUFBRCxDQUFQO0FBQ0E7Ozs7Ozs7O0FBZ0JGQyxXQUFRdkIsb0JBQVIiLCJmaWxlIjoiTGluZUVkaXRvckNhY2hlU2F2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTGluZUVkaXRvckNhY2hlU2F2ZXIge1xuXG5cdGJlZm9yZVJlZ2lzdGVyKCkge1xuXHRcdHRoaXMuaXMgPSAnc2ItbGluZS1lZGl0b3ItY2FjaGUtc2F2ZSc7XG5cdFx0dGhpcy5wcm9wZXJ0aWVzID0ge1xuXHRcdFx0cXVvdGU6IE9iamVjdCxcblx0XHRcdGVycm9yOiB7XG5cdFx0XHRcdHR5cGU6IFN0cmluZyxcblx0XHRcdFx0bm90aWZ5OiB0cnVlXG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Z2V0IG9ic2VydmVycygpIHtcblx0XHRyZXR1cm4gWydzYXZlKHF1b3RlKSddO1xuXHR9XG5cblx0cmVhZHkoKSB7XG5cdFx0dGhpcy4kLnNlcnZpY2UuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3ItY2hhbmdlZCcsIGZ1bmN0aW9uKGUpIHtcblx0XHRcdHRoaXMuZXJyb3IgPSBlLmRldGFpbDtcblx0XHRcdGNvbnNvbGUubG9nKGUuZGV0YWlsKTtcblx0XHR9LmJpbmQodGhpcykpO1xuXHR9XG5cdFxuXHRzYXZlKCkge1xuXHRcdHRoaXMuJC5zZXJ2aWNlLnRyYW5zaWVudCA9IHRydWU7XG5cdFx0dGhpcy4kLnNlcnZpY2UudWlkID0gdGhpcy5xdW90ZS5yZWNvcmQuSWQ7XG5cdFx0dGhpcy4kLnNlcnZpY2UubW9kZWwgPSB0aGlzLnF1b3RlO1xuXHRcdHRoaXMuJC5zZXJ2aWNlLnNhdmVyID0gbnVsbDtcblx0fVxufVxuUG9seW1lcihMaW5lRWRpdG9yQ2FjaGVTYXZlcik7XG4iXX0=
'use strict';

System.register('common/services/sb-line-editor-calculate/LineEditorCalculator.js', [], function (_export, _context) {
    var _createClass, LineEditorCalculator;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('LineEditorCalculator', LineEditorCalculator = function () {
                function LineEditorCalculator() {
                    _classCallCheck(this, LineEditorCalculator);
                }

                _createClass(LineEditorCalculator, [{
                    key: 'beforeRegister',
                    value: function beforeRegister() {
                        this.is = 'sb-line-editor-calculate';
                        this.properties = {
                            error: {
                                type: String,
                                notify: true
                            }
                        };
                    }
                }, {
                    key: 'ready',
                    value: function ready() {
                        this.$.service.addEventListener('response-changed', function (e) {
                            if (e.detail.value) {
                                this.fire('quote-changed', {
                                    quote: e.detail.value
                                });
                            }
                        }.bind(this));

                        this.$.service.addEventListener('error-changed', function (e) {
                            if (e.detail.value) this.error = e.detail.value;
                        }.bind(this));
                    }
                }, {
                    key: 'calculate',
                    value: function calculate() {
                        if (!this.quote) {
                            return;
                        };
                        if (this.settings.usesClientCalculator) {
                            console.log('JSQC');
                        } else {
                            this.$.service.model = this.quote;
                        }
                    }
                }, {
                    key: 'observers',
                    get: function get() {
                        return ['calculate(quote)'];
                    }
                }]);

                return LineEditorCalculator;
            }());

            _export('LineEditorCalculator', LineEditorCalculator);

            Polymer(LineEditorCalculator);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmVFZGl0b3JDYWxjdWxhdG9yLmpzIl0sIm5hbWVzIjpbIkxpbmVFZGl0b3JDYWxjdWxhdG9yIiwiaXMiLCJwcm9wZXJ0aWVzIiwiZXJyb3IiLCJ0eXBlIiwiU3RyaW5nIiwibm90aWZ5IiwiJCIsInNlcnZpY2UiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImRldGFpbCIsInZhbHVlIiwiZmlyZSIsInF1b3RlIiwiYmluZCIsInNldHRpbmdzIiwidXNlc0NsaWVudENhbGN1bGF0b3IiLCJjb25zb2xlIiwibG9nIiwibW9kZWwiLCJQb2x5bWVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs0Q0FBYUEsb0I7Ozs7Ozs7cURBRVE7QUFDYiw2QkFBS0MsRUFBTCxHQUFVLDBCQUFWO0FBQ0EsNkJBQUtDLFVBQUwsR0FBa0I7QUFDZEMsbUNBQU87QUFDSEMsc0NBQU1DLE1BREg7QUFFSEMsd0NBQVE7QUFGTDtBQURPLHlCQUFsQjtBQU1IOzs7NENBTU87QUFDSiw2QkFBS0MsQ0FBTCxDQUFPQyxPQUFQLENBQWVDLGdCQUFmLENBQWdDLGtCQUFoQyxFQUFvRCxVQUFTQyxDQUFULEVBQVk7QUFDNUQsZ0NBQUlBLEVBQUVDLE1BQUYsQ0FBU0MsS0FBYixFQUFvQjtBQUNoQixxQ0FBS0MsSUFBTCxDQUFVLGVBQVYsRUFBMkI7QUFDdkJDLDJDQUFPSixFQUFFQyxNQUFGLENBQVNDO0FBRE8saUNBQTNCO0FBR0g7QUFDSix5QkFObUQsQ0FNbERHLElBTmtELENBTTdDLElBTjZDLENBQXBEOztBQVFBLDZCQUFLUixDQUFMLENBQU9DLE9BQVAsQ0FBZUMsZ0JBQWYsQ0FBZ0MsZUFBaEMsRUFBaUQsVUFBU0MsQ0FBVCxFQUFZO0FBQ3pELGdDQUFJQSxFQUFFQyxNQUFGLENBQVNDLEtBQWIsRUFDSSxLQUFLVCxLQUFMLEdBQWFPLEVBQUVDLE1BQUYsQ0FBU0MsS0FBdEI7QUFDUCx5QkFIZ0QsQ0FHL0NHLElBSCtDLENBRzFDLElBSDBDLENBQWpEO0FBSUg7OztnREFFVztBQUNSLDRCQUFJLENBQUMsS0FBS0QsS0FBVixFQUFpQjtBQUFFO0FBQVE7QUFDM0IsNEJBQUksS0FBS0UsUUFBTCxDQUFjQyxvQkFBbEIsRUFBd0M7QUFDcENDLG9DQUFRQyxHQUFSLENBQVksTUFBWjtBQUNILHlCQUZELE1BRU87QUFDSCxpQ0FBS1osQ0FBTCxDQUFPQyxPQUFQLENBQWVZLEtBQWYsR0FBdUIsS0FBS04sS0FBNUI7QUFDSDtBQUNKOzs7d0NBMUJlO0FBQ1osK0JBQU8sQ0FBQyxrQkFBRCxDQUFQO0FBQ0g7Ozs7Ozs7O0FBMkJMTyxvQkFBUXJCLG9CQUFSIiwiZmlsZSI6IkxpbmVFZGl0b3JDYWxjdWxhdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIExpbmVFZGl0b3JDYWxjdWxhdG9yIHtcblxuICAgIGJlZm9yZVJlZ2lzdGVyKCkge1xuICAgICAgICB0aGlzLmlzID0gJ3NiLWxpbmUtZWRpdG9yLWNhbGN1bGF0ZSc7XG4gICAgICAgIHRoaXMucHJvcGVydGllcyA9IHtcbiAgICAgICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IG9ic2VydmVycygpIHtcbiAgICAgICAgcmV0dXJuIFsnY2FsY3VsYXRlKHF1b3RlKSddO1xuICAgIH1cblxuICAgIHJlYWR5KCkge1xuICAgICAgICB0aGlzLiQuc2VydmljZS5hZGRFdmVudExpc3RlbmVyKCdyZXNwb25zZS1jaGFuZ2VkJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaWYgKGUuZGV0YWlsLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5maXJlKCdxdW90ZS1jaGFuZ2VkJywge1xuICAgICAgICAgICAgICAgICAgICBxdW90ZTogZS5kZXRhaWwudmFsdWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcblxuICAgICAgICB0aGlzLiQuc2VydmljZS5hZGRFdmVudExpc3RlbmVyKCdlcnJvci1jaGFuZ2VkJywgZnVuY3Rpb24oZSkge1xuICAgICAgICAgICAgaWYgKGUuZGV0YWlsLnZhbHVlKVxuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBlLmRldGFpbC52YWx1ZTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICBjYWxjdWxhdGUoKSB7XG4gICAgICAgIGlmICghdGhpcy5xdW90ZSkgeyByZXR1cm4gfTtcbiAgICAgICAgaWYgKHRoaXMuc2V0dGluZ3MudXNlc0NsaWVudENhbGN1bGF0b3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdKU1FDJylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuJC5zZXJ2aWNlLm1vZGVsID0gdGhpcy5xdW90ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuUG9seW1lcihMaW5lRWRpdG9yQ2FsY3VsYXRvcik7Il19
'use strict';

System.register('common/services/sb-line-editor-read/LineEditorReader.js', [], function (_export, _context) {
    var _createClass, LineEditorReader;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('LineEditorReader', LineEditorReader = function () {
                function LineEditorReader() {
                    _classCallCheck(this, LineEditorReader);
                }

                _createClass(LineEditorReader, [{
                    key: 'beforeRegister',
                    value: function beforeRegister() {
                        this.is = 'sb-line-editor-read';
                        this.properties = {
                            quoteId: String,
                            lineEditorModel: {
                                type: Object,
                                notify: true
                            },
                            error: {
                                type: String,
                                notify: true
                            }
                        };
                    }
                }, {
                    key: 'ready',
                    value: function ready() {
                        this.$.service.addEventListener('response-changed', function (e) {
                            if (e.detail.value) this.lineEditorModel = e.detail.value;
                        }.bind(this));

                        this.$.service.addEventListener('error-changed', function (e) {
                            if (e.detail.value) this.error = e.detail.value;
                        }.bind(this));
                    }
                }, {
                    key: 'read',
                    value: function read() {
                        this.$.service.uid = this.quoteId.substring(0, 15);
                    }
                }, {
                    key: 'observers',
                    get: function get() {
                        return ['read(quoteId)'];
                    }
                }]);

                return LineEditorReader;
            }());

            _export('LineEditorReader', LineEditorReader);

            Polymer(LineEditorReader);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkxpbmVFZGl0b3JSZWFkZXIuanMiXSwibmFtZXMiOlsiTGluZUVkaXRvclJlYWRlciIsImlzIiwicHJvcGVydGllcyIsInF1b3RlSWQiLCJTdHJpbmciLCJsaW5lRWRpdG9yTW9kZWwiLCJ0eXBlIiwiT2JqZWN0Iiwibm90aWZ5IiwiZXJyb3IiLCIkIiwic2VydmljZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZGV0YWlsIiwidmFsdWUiLCJiaW5kIiwidWlkIiwic3Vic3RyaW5nIiwiUG9seW1lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0NBQWFBLGdCOzs7Ozs7O3FEQUVRO0FBQ2IsNkJBQUtDLEVBQUwsR0FBVSxxQkFBVjtBQUNBLDZCQUFLQyxVQUFMLEdBQWtCO0FBQ2RDLHFDQUFTQyxNQURLO0FBRWRDLDZDQUFpQjtBQUNiQyxzQ0FBTUMsTUFETztBQUViQyx3Q0FBUTtBQUZLLDZCQUZIO0FBTWRDLG1DQUFPO0FBQ0hILHNDQUFNRixNQURIO0FBRUhJLHdDQUFRO0FBRkw7QUFOTyx5QkFBbEI7QUFnQkg7Ozs0Q0FPTztBQUNKLDZCQUFLRSxDQUFMLENBQU9DLE9BQVAsQ0FBZUMsZ0JBQWYsQ0FBZ0Msa0JBQWhDLEVBQW9ELFVBQVNDLENBQVQsRUFBWTtBQUM1RCxnQ0FBR0EsRUFBRUMsTUFBRixDQUFTQyxLQUFaLEVBQ0ksS0FBS1YsZUFBTCxHQUF1QlEsRUFBRUMsTUFBRixDQUFTQyxLQUFoQztBQUNQLHlCQUhtRCxDQUdsREMsSUFIa0QsQ0FHN0MsSUFINkMsQ0FBcEQ7O0FBS0EsNkJBQUtOLENBQUwsQ0FBT0MsT0FBUCxDQUFlQyxnQkFBZixDQUFnQyxlQUFoQyxFQUFpRCxVQUFTQyxDQUFULEVBQVk7QUFDekQsZ0NBQUdBLEVBQUVDLE1BQUYsQ0FBU0MsS0FBWixFQUNJLEtBQUtOLEtBQUwsR0FBYUksRUFBRUMsTUFBRixDQUFTQyxLQUF0QjtBQUNQLHlCQUhnRCxDQUcvQ0MsSUFIK0MsQ0FHMUMsSUFIMEMsQ0FBakQ7QUFJSDs7OzJDQUVNO0FBQ0gsNkJBQUtOLENBQUwsQ0FBT0MsT0FBUCxDQUFlTSxHQUFmLEdBQXFCLEtBQUtkLE9BQUwsQ0FBYWUsU0FBYixDQUF1QixDQUF2QixFQUEwQixFQUExQixDQUFyQjtBQUNIOzs7d0NBbkJlO0FBQ1osK0JBQU8sQ0FBQyxlQUFELENBQVA7QUFDSDs7Ozs7Ozs7QUFvQkxDLG9CQUFRbkIsZ0JBQVIiLCJmaWxlIjoiTGluZUVkaXRvclJlYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBMaW5lRWRpdG9yUmVhZGVyIHtcblxuICAgIGJlZm9yZVJlZ2lzdGVyKCkge1xuICAgICAgICB0aGlzLmlzID0gJ3NiLWxpbmUtZWRpdG9yLXJlYWQnO1xuICAgICAgICB0aGlzLnByb3BlcnRpZXMgPSB7XG4gICAgICAgICAgICBxdW90ZUlkOiBTdHJpbmcsXG4gICAgICAgICAgICBsaW5lRWRpdG9yTW9kZWw6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBPYmplY3QsXG4gICAgICAgICAgICAgICAgbm90aWZ5OiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3I6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICAgICAgbm90aWZ5OiB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBUT0RPIHVwZGF0ZSBjb21wb25lbnQgdG8gdXNlIHJlc3BvbnNlIGF0dHJpYnV0ZSBhbmQgZ2V0IHJpZCBvZiByZXNwb25zZS1jaGFuZ2VkIGV2ZW50IGxpc3RlbmVyXG4gICAgICAgICAgICAvL3Jlc3BvbnNlOiB7XG4gICAgICAgICAgICAvLyAgICB0eXBlOiBPYmplY3QsXG4gICAgICAgICAgICAvLyAgICBub3RpZnk6IHRydWVcbiAgICAgICAgICAgIC8vfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IG9ic2VydmVycygpIHtcbiAgICAgICAgcmV0dXJuIFsncmVhZChxdW90ZUlkKSddO1xuICAgIH1cblxuICAgIC8vIFRPRE8gZ2V0IHJpZCBvZiBsaXN0ZW5lcnNcbiAgICByZWFkeSgpIHtcbiAgICAgICAgdGhpcy4kLnNlcnZpY2UuYWRkRXZlbnRMaXN0ZW5lcigncmVzcG9uc2UtY2hhbmdlZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGlmKGUuZGV0YWlsLnZhbHVlKVxuICAgICAgICAgICAgICAgIHRoaXMubGluZUVkaXRvck1vZGVsID0gZS5kZXRhaWwudmFsdWU7XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG5cbiAgICAgICAgdGhpcy4kLnNlcnZpY2UuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3ItY2hhbmdlZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIGlmKGUuZGV0YWlsLnZhbHVlKVxuICAgICAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBlLmRldGFpbC52YWx1ZTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICByZWFkKCkge1xuICAgICAgICB0aGlzLiQuc2VydmljZS51aWQgPSB0aGlzLnF1b3RlSWQuc3Vic3RyaW5nKDAsIDE1KTtcbiAgICB9XG59XG5cblBvbHltZXIoTGluZUVkaXRvclJlYWRlcik7Il19
'use strict';

System.register('dealdesk/services/sb-dd-model-read/DealDeskModelReader.js', [], function (_export, _context) {
    var _createClass, DealDeskModelReader;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('DealDeskModelReader', DealDeskModelReader = function () {
                function DealDeskModelReader() {
                    _classCallCheck(this, DealDeskModelReader);
                }

                _createClass(DealDeskModelReader, [{
                    key: 'beforeRegister',
                    value: function beforeRegister() {
                        this.is = 'sb-dd-model-read';
                        this.properties = {
                            recordId: String,
                            dealDeskModelRead: {
                                type: Object,
                                notify: true
                            },
                            error: {
                                type: String,
                                notify: true
                            }
                        };
                    }
                }, {
                    key: 'ready',
                    value: function ready() {
                        this.$.service.addEventListener('response-changed', function (e) {
                            var returnModel = e.detail.value;
                            this.$.validation.model = returnModel;
                        }.bind(this));
                        this.$.service.addEventListener('error-changed', function (e) {
                            this.error = e.detail.value;
                        }.bind(this));
                        this.$.validation.addEventListener('modelValidated', function (e) {
                            this.dealDeskModelRead = e.detail.model;
                            this.fire('showDealDesk');
                            this.fire('setIFrame');
                        }.bind(this));
                    }
                }, {
                    key: 'read',
                    value: function read() {
                        this.$.service.uid = this.recordId;
                    }
                }, {
                    key: 'observers',
                    get: function get() {
                        return ['read(recordId)'];
                    }
                }]);

                return DealDeskModelReader;
            }());

            _export('DealDeskModelReader', DealDeskModelReader);

            Polymer(DealDeskModelReader);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlYWxEZXNrTW9kZWxSZWFkZXIuanMiXSwibmFtZXMiOlsiRGVhbERlc2tNb2RlbFJlYWRlciIsImlzIiwicHJvcGVydGllcyIsInJlY29yZElkIiwiU3RyaW5nIiwiZGVhbERlc2tNb2RlbFJlYWQiLCJ0eXBlIiwiT2JqZWN0Iiwibm90aWZ5IiwiZXJyb3IiLCIkIiwic2VydmljZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicmV0dXJuTW9kZWwiLCJkZXRhaWwiLCJ2YWx1ZSIsInZhbGlkYXRpb24iLCJtb2RlbCIsImJpbmQiLCJmaXJlIiwidWlkIiwiUG9seW1lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkNBQWFBLG1COzs7Ozs7O3FEQUVRO0FBQ2IsNkJBQUtDLEVBQUwsR0FBVSxrQkFBVjtBQUNBLDZCQUFLQyxVQUFMLEdBQWtCO0FBQ2RDLHNDQUFVQyxNQURJO0FBRWRDLCtDQUFtQjtBQUNmQyxzQ0FBTUMsTUFEUztBQUVmQyx3Q0FBUTtBQUZPLDZCQUZMO0FBTWRDLG1DQUFPO0FBQ0hILHNDQUFNRixNQURIO0FBRUhJLHdDQUFRO0FBRkw7QUFOTyx5QkFBbEI7QUFXSDs7OzRDQU1PO0FBQ0osNkJBQUtFLENBQUwsQ0FBT0MsT0FBUCxDQUFlQyxnQkFBZixDQUFnQyxrQkFBaEMsRUFBb0QsVUFBU0MsQ0FBVCxFQUFZO0FBQzVELGdDQUFJQyxjQUFjRCxFQUFFRSxNQUFGLENBQVNDLEtBQTNCO0FBQ0EsaUNBQUtOLENBQUwsQ0FBT08sVUFBUCxDQUFrQkMsS0FBbEIsR0FBMEJKLFdBQTFCO0FBQ0gseUJBSG1ELENBR2xESyxJQUhrRCxDQUc3QyxJQUg2QyxDQUFwRDtBQUlBLDZCQUFLVCxDQUFMLENBQU9DLE9BQVAsQ0FBZUMsZ0JBQWYsQ0FBZ0MsZUFBaEMsRUFBaUQsVUFBU0MsQ0FBVCxFQUFZO0FBQ3pELGlDQUFLSixLQUFMLEdBQWFJLEVBQUVFLE1BQUYsQ0FBU0MsS0FBdEI7QUFDSCx5QkFGZ0QsQ0FFL0NHLElBRitDLENBRTFDLElBRjBDLENBQWpEO0FBR0EsNkJBQUtULENBQUwsQ0FBT08sVUFBUCxDQUFrQkwsZ0JBQWxCLENBQW1DLGdCQUFuQyxFQUFxRCxVQUFTQyxDQUFULEVBQVk7QUFDN0QsaUNBQUtSLGlCQUFMLEdBQXlCUSxFQUFFRSxNQUFGLENBQVNHLEtBQWxDO0FBQ0EsaUNBQUtFLElBQUwsQ0FBVSxjQUFWO0FBQ0EsaUNBQUtBLElBQUwsQ0FBVSxXQUFWO0FBQ0gseUJBSm9ELENBSW5ERCxJQUptRCxDQUk5QyxJQUo4QyxDQUFyRDtBQUtIOzs7MkNBRU07QUFDSCw2QkFBS1QsQ0FBTCxDQUFPQyxPQUFQLENBQWVVLEdBQWYsR0FBcUIsS0FBS2xCLFFBQTFCO0FBQ0g7Ozt3Q0FyQmU7QUFDWiwrQkFBTyxDQUFDLGdCQUFELENBQVA7QUFDSDs7Ozs7Ozs7QUF1QkxtQixvQkFBU3RCLG1CQUFUIiwiZmlsZSI6IkRlYWxEZXNrTW9kZWxSZWFkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRGVhbERlc2tNb2RlbFJlYWRlciB7XG5cbiAgICBiZWZvcmVSZWdpc3RlcigpIHtcbiAgICAgICAgdGhpcy5pcyA9ICdzYi1kZC1tb2RlbC1yZWFkJztcbiAgICAgICAgdGhpcy5wcm9wZXJ0aWVzID0ge1xuICAgICAgICAgICAgcmVjb3JkSWQ6IFN0cmluZyxcbiAgICAgICAgICAgIGRlYWxEZXNrTW9kZWxSZWFkOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IG9ic2VydmVycygpIHtcbiAgICAgICAgcmV0dXJuIFsncmVhZChyZWNvcmRJZCknXTtcbiAgICB9XG5cbiAgICByZWFkeSgpIHtcbiAgICAgICAgdGhpcy4kLnNlcnZpY2UuYWRkRXZlbnRMaXN0ZW5lcigncmVzcG9uc2UtY2hhbmdlZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHZhciByZXR1cm5Nb2RlbCA9IGUuZGV0YWlsLnZhbHVlO1xuICAgICAgICAgICAgdGhpcy4kLnZhbGlkYXRpb24ubW9kZWwgPSByZXR1cm5Nb2RlbDtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy4kLnNlcnZpY2UuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3ItY2hhbmdlZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IgPSBlLmRldGFpbC52YWx1ZTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy4kLnZhbGlkYXRpb24uYWRkRXZlbnRMaXN0ZW5lcignbW9kZWxWYWxpZGF0ZWQnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICB0aGlzLmRlYWxEZXNrTW9kZWxSZWFkID0gZS5kZXRhaWwubW9kZWw7XG4gICAgICAgICAgICB0aGlzLmZpcmUoJ3Nob3dEZWFsRGVzaycpO1xuICAgICAgICAgICAgdGhpcy5maXJlKCdzZXRJRnJhbWUnKTtcbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICB9XG5cbiAgICByZWFkKCkge1xuICAgICAgICB0aGlzLiQuc2VydmljZS51aWQgPSB0aGlzLnJlY29yZElkO1xuICAgIH1cblxuXG59XG5Qb2x5bWVyKCBEZWFsRGVza01vZGVsUmVhZGVyICk7Il19
'use strict';

System.register('dealdesk/services/sb-dd-model-save/DealDeskModelSaver.js', [], function (_export, _context) {
    var _createClass, DealDeskModelSaver;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('DealDeskModelSaver', DealDeskModelSaver = function () {
                function DealDeskModelSaver() {
                    _classCallCheck(this, DealDeskModelSaver);
                }

                _createClass(DealDeskModelSaver, [{
                    key: 'beforeRegister',
                    value: function beforeRegister() {
                        this.is = 'sb-dd-model-save';
                        this.properties = {
                            recordId: String,
                            dealDeskModelUpdated: {
                                type: Object,
                                notify: true
                            },
                            error: {
                                type: String,
                                notify: true
                            }
                        };
                    }
                }, {
                    key: 'ready',
                    value: function ready() {
                        this.$.service.addEventListener('response-changed', function (e) {
                            if (this.closeAfterSave == true) {
                                this.$.service.waiting = true;
                                setTimeout(function () {
                                    window.location.href = window.location.origin + '/' + e.detail.value.parentRecord.Id;
                                }, 0);
                            } else {
                                this.clearProps();
                                this.dealDeskModelUpdated = e.detail.value;
                                this.fire('cleanAfterSave');
                                this.fire('reloadIFrame');
                                setTimeout(function () {
                                    this.fire('newModelReceived');
                                }.bind(this), 0);
                            }
                        }.bind(this));
                        this.$.service.addEventListener('error-changed', function (e) {
                            this.clearProps();
                            this.error = e.detail.value;
                        }.bind(this));
                    }
                }, {
                    key: 'save',
                    value: function save() {
                        this.$.service.model = this.dealDeskModelSave;
                    }
                }, {
                    key: 'clearProps',
                    value: function clearProps() {
                        this.dealDeskModelSave = undefined;
                        this.closeAfterSave = undefined;
                        this.$.service.model = undefined;
                    }
                }, {
                    key: 'observers',
                    get: function get() {
                        return ['save(dealDeskModelSave, closeAfterSave)'];
                    }
                }]);

                return DealDeskModelSaver;
            }());

            _export('DealDeskModelSaver', DealDeskModelSaver);

            Polymer(DealDeskModelSaver);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlYWxEZXNrTW9kZWxTYXZlci5qcyJdLCJuYW1lcyI6WyJEZWFsRGVza01vZGVsU2F2ZXIiLCJpcyIsInByb3BlcnRpZXMiLCJyZWNvcmRJZCIsIlN0cmluZyIsImRlYWxEZXNrTW9kZWxVcGRhdGVkIiwidHlwZSIsIk9iamVjdCIsIm5vdGlmeSIsImVycm9yIiwiJCIsInNlcnZpY2UiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImNsb3NlQWZ0ZXJTYXZlIiwid2FpdGluZyIsInNldFRpbWVvdXQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJvcmlnaW4iLCJkZXRhaWwiLCJ2YWx1ZSIsInBhcmVudFJlY29yZCIsIklkIiwiY2xlYXJQcm9wcyIsImZpcmUiLCJiaW5kIiwibW9kZWwiLCJkZWFsRGVza01vZGVsU2F2ZSIsInVuZGVmaW5lZCIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBDQUFhQSxrQjs7Ozs7OztxREFFUTtBQUNiLDZCQUFLQyxFQUFMLEdBQVUsa0JBQVY7QUFDQSw2QkFBS0MsVUFBTCxHQUFrQjtBQUNkQyxzQ0FBVUMsTUFESTtBQUVkQyxrREFBc0I7QUFDbEJDLHNDQUFNQyxNQURZO0FBRWxCQyx3Q0FBUTtBQUZVLDZCQUZSO0FBTWRDLG1DQUFPO0FBQ0hILHNDQUFNRixNQURIO0FBRUhJLHdDQUFRO0FBRkw7QUFOTyx5QkFBbEI7QUFXSDs7OzRDQU1PO0FBQ0osNkJBQUtFLENBQUwsQ0FBT0MsT0FBUCxDQUFlQyxnQkFBZixDQUFnQyxrQkFBaEMsRUFBb0QsVUFBU0MsQ0FBVCxFQUFZO0FBQzVELGdDQUFJLEtBQUtDLGNBQUwsSUFBdUIsSUFBM0IsRUFBaUM7QUFDN0IscUNBQUtKLENBQUwsQ0FBT0MsT0FBUCxDQUFlSSxPQUFmLEdBQXlCLElBQXpCO0FBQ0FDLDJDQUFXLFlBQVU7QUFDakJDLDJDQUFPQyxRQUFQLENBQWdCQyxJQUFoQixHQUF1QkYsT0FBT0MsUUFBUCxDQUFnQkUsTUFBaEIsR0FBeUIsR0FBekIsR0FBK0JQLEVBQUVRLE1BQUYsQ0FBU0MsS0FBVCxDQUFlQyxZQUFmLENBQTRCQyxFQUFsRjtBQUNILGlDQUZELEVBRUcsQ0FGSDtBQUdILDZCQUxELE1BS087QUFDSCxxQ0FBS0MsVUFBTDtBQUNBLHFDQUFLcEIsb0JBQUwsR0FBNEJRLEVBQUVRLE1BQUYsQ0FBU0MsS0FBckM7QUFDQSxxQ0FBS0ksSUFBTCxDQUFVLGdCQUFWO0FBQ0EscUNBQUtBLElBQUwsQ0FBVSxjQUFWO0FBQ0FWLDJDQUFXLFlBQVU7QUFDakIseUNBQUtVLElBQUwsQ0FBVSxrQkFBVjtBQUNILGlDQUZVLENBRVRDLElBRlMsQ0FFSixJQUZJLENBQVgsRUFFYyxDQUZkO0FBR0g7QUFDSix5QkFmbUQsQ0FlbERBLElBZmtELENBZTdDLElBZjZDLENBQXBEO0FBZ0JBLDZCQUFLakIsQ0FBTCxDQUFPQyxPQUFQLENBQWVDLGdCQUFmLENBQWdDLGVBQWhDLEVBQWlELFVBQVNDLENBQVQsRUFBWTtBQUN6RCxpQ0FBS1ksVUFBTDtBQUNBLGlDQUFLaEIsS0FBTCxHQUFhSSxFQUFFUSxNQUFGLENBQVNDLEtBQXRCO0FBQ0gseUJBSGdELENBRy9DSyxJQUgrQyxDQUcxQyxJQUgwQyxDQUFqRDtBQUlIOzs7MkNBRU07QUFDSCw2QkFBS2pCLENBQUwsQ0FBT0MsT0FBUCxDQUFlaUIsS0FBZixHQUF1QixLQUFLQyxpQkFBNUI7QUFDSDs7O2lEQUVZO0FBQ1QsNkJBQUtBLGlCQUFMLEdBQXlCQyxTQUF6QjtBQUNBLDZCQUFLaEIsY0FBTCxHQUFzQmdCLFNBQXRCO0FBQ0EsNkJBQUtwQixDQUFMLENBQU9DLE9BQVAsQ0FBZWlCLEtBQWYsR0FBdUJFLFNBQXZCO0FBQ0g7Ozt3Q0FuQ2U7QUFDWiwrQkFBTyxDQUFDLHlDQUFELENBQVA7QUFDSDs7Ozs7Ozs7QUFtQ0xDLG9CQUFTL0Isa0JBQVQiLCJmaWxlIjoiRGVhbERlc2tNb2RlbFNhdmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIERlYWxEZXNrTW9kZWxTYXZlciB7XG5cbiAgICBiZWZvcmVSZWdpc3RlcigpIHtcbiAgICAgICAgdGhpcy5pcyA9ICdzYi1kZC1tb2RlbC1zYXZlJztcbiAgICAgICAgdGhpcy5wcm9wZXJ0aWVzID0ge1xuICAgICAgICAgICAgcmVjb3JkSWQ6IFN0cmluZyxcbiAgICAgICAgICAgIGRlYWxEZXNrTW9kZWxVcGRhdGVkOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogT2JqZWN0LFxuICAgICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgICAgIG5vdGlmeTogdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZ2V0IG9ic2VydmVycygpIHtcbiAgICAgICAgcmV0dXJuIFsnc2F2ZShkZWFsRGVza01vZGVsU2F2ZSwgY2xvc2VBZnRlclNhdmUpJ107XG4gICAgfVxuXG4gICAgcmVhZHkoKSB7XG4gICAgICAgIHRoaXMuJC5zZXJ2aWNlLmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc3BvbnNlLWNoYW5nZWQnLCBmdW5jdGlvbihlKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5jbG9zZUFmdGVyU2F2ZSA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kLnNlcnZpY2Uud2FpdGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW4gKyAnLycgKyBlLmRldGFpbC52YWx1ZS5wYXJlbnRSZWNvcmQuSWQ7XG4gICAgICAgICAgICAgICAgfSwgMCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJQcm9wcygpXG4gICAgICAgICAgICAgICAgdGhpcy5kZWFsRGVza01vZGVsVXBkYXRlZCA9IGUuZGV0YWlsLnZhbHVlO1xuICAgICAgICAgICAgICAgIHRoaXMuZmlyZSgnY2xlYW5BZnRlclNhdmUnKTtcbiAgICAgICAgICAgICAgICB0aGlzLmZpcmUoJ3JlbG9hZElGcmFtZScpO1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5maXJlKCduZXdNb2RlbFJlY2VpdmVkJyk7XG4gICAgICAgICAgICAgICAgfS5iaW5kKHRoaXMpLCAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfS5iaW5kKHRoaXMpKTtcbiAgICAgICAgdGhpcy4kLnNlcnZpY2UuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3ItY2hhbmdlZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJQcm9wcygpXG4gICAgICAgICAgICB0aGlzLmVycm9yID0gZS5kZXRhaWwudmFsdWU7XG4gICAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgfVxuXG4gICAgc2F2ZSgpIHtcbiAgICAgICAgdGhpcy4kLnNlcnZpY2UubW9kZWwgPSB0aGlzLmRlYWxEZXNrTW9kZWxTYXZlO1xuICAgIH1cblxuICAgIGNsZWFyUHJvcHMoKSB7XG4gICAgICAgIHRoaXMuZGVhbERlc2tNb2RlbFNhdmUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuY2xvc2VBZnRlclNhdmUgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoaXMuJC5zZXJ2aWNlLm1vZGVsID0gdW5kZWZpbmVkO1xuICAgIH1cbn1cblBvbHltZXIoIERlYWxEZXNrTW9kZWxTYXZlciApOyJdfQ==
'use strict';

System.register('dealdesk/validations/sb-dd-read-validations/DealDeskReadValidations.js', ['common/core/AppContext.js'], function (_export, _context) {
    var AppContext, _createClass, DealDeskReadValidations;

    function _classCallCheck(instance, Constructor) {
        if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
        }
    }

    return {
        setters: [function (_commonCoreAppContextJs) {
            AppContext = _commonCoreAppContextJs.AppContext;
        }],
        execute: function () {
            _createClass = function () {
                function defineProperties(target, props) {
                    for (var i = 0; i < props.length; i++) {
                        var descriptor = props[i];
                        descriptor.enumerable = descriptor.enumerable || false;
                        descriptor.configurable = true;
                        if ("value" in descriptor) descriptor.writable = true;
                        Object.defineProperty(target, descriptor.key, descriptor);
                    }
                }

                return function (Constructor, protoProps, staticProps) {
                    if (protoProps) defineProperties(Constructor.prototype, protoProps);
                    if (staticProps) defineProperties(Constructor, staticProps);
                    return Constructor;
                };
            }();

            _export('DealDeskReadValidations', DealDeskReadValidations = function () {
                function DealDeskReadValidations() {
                    _classCallCheck(this, DealDeskReadValidations);
                }

                _createClass(DealDeskReadValidations, [{
                    key: 'beforeRegister',
                    value: function beforeRegister() {
                        this.is = 'sb-dd-read-validations';
                        this.properties = {
                            validationMessages: {
                                type: Array,
                                value: []
                            }
                        };
                    }
                }, {
                    key: 'validate',
                    value: function validate() {
                        this.validateChildLineStatuses(this.model);
                        if (this.validationMessages.length <= 0) {
                            this.fire("modelValidated", {
                                model: this.model
                            });
                        } else {
                            this.fire('addMessages', {
                                value: this.validationMessages
                            });
                        }
                    }
                }, {
                    key: 'validateChildLineStatuses',
                    value: function validateChildLineStatuses(model) {
                        console.log('AppContext.org.prefix: ', AppContext.org.prefix);
                        var fieldName = AppContext.org.prefix ? AppContext.org.prefix + '__ApprovalStatus__c' : 'ApprovalStatus__c';
                        console.log('fieldName: ', fieldName);
                        var childLines = model.childRecords;
                        var numChildLines = childLines.length;
                        for (var i = 0; i < numChildLines; i++) {
                            console.log('childLines[i]', childLines[i]);
                            if (!childLines[i][fieldName]) {
                                var message = "Object must be submitted for approval before accessing Deal Desk";
                                this.push("validationMessages", message);
                                return;
                            }
                        }
                    }
                }, {
                    key: 'observers',
                    get: function get() {
                        return ['validate(model)'];
                    }
                }]);

                return DealDeskReadValidations;
            }());

            _export('DealDeskReadValidations', DealDeskReadValidations);

            Polymer(DealDeskReadValidations);
        }
    };
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlYWxEZXNrUmVhZFZhbGlkYXRpb25zLmpzIl0sIm5hbWVzIjpbIkFwcENvbnRleHQiLCJEZWFsRGVza1JlYWRWYWxpZGF0aW9ucyIsImlzIiwicHJvcGVydGllcyIsInZhbGlkYXRpb25NZXNzYWdlcyIsInR5cGUiLCJBcnJheSIsInZhbHVlIiwidmFsaWRhdGVDaGlsZExpbmVTdGF0dXNlcyIsIm1vZGVsIiwibGVuZ3RoIiwiZmlyZSIsImNvbnNvbGUiLCJsb2ciLCJvcmciLCJwcmVmaXgiLCJmaWVsZE5hbWUiLCJjaGlsZExpbmVzIiwiY2hpbGRSZWNvcmRzIiwibnVtQ2hpbGRMaW5lcyIsImkiLCJtZXNzYWdlIiwicHVzaCIsIlBvbHltZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBUUEsc0IsMkJBQUFBLFU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQ0FFS0MsdUI7Ozs7Ozs7cURBRVE7QUFDYiw2QkFBS0MsRUFBTCxHQUFVLHdCQUFWO0FBQ0EsNkJBQUtDLFVBQUwsR0FBa0I7QUFDZEMsZ0RBQW9CO0FBQ2hCQyxzQ0FBTUMsS0FEVTtBQUVoQkMsdUNBQU87QUFGUztBQUROLHlCQUFsQjtBQU1IOzs7K0NBTVU7QUFDUCw2QkFBS0MseUJBQUwsQ0FBK0IsS0FBS0MsS0FBcEM7QUFDQSw0QkFBSSxLQUFLTCxrQkFBTCxDQUF3Qk0sTUFBeEIsSUFBa0MsQ0FBdEMsRUFBeUM7QUFDckMsaUNBQUtDLElBQUwsQ0FBVSxnQkFBVixFQUE0QjtBQUN4QkYsdUNBQU8sS0FBS0E7QUFEWSw2QkFBNUI7QUFHSCx5QkFKRCxNQUlPO0FBQ0gsaUNBQUtFLElBQUwsQ0FBVSxhQUFWLEVBQXlCO0FBQ3JCSix1Q0FBTyxLQUFLSDtBQURTLDZCQUF6QjtBQUdIO0FBQ0o7Ozs4REFFeUJLLEssRUFBTztBQUM3QkcsZ0NBQVFDLEdBQVIsQ0FBWSx5QkFBWixFQUF1Q2IsV0FBV2MsR0FBWCxDQUFlQyxNQUF0RDtBQUNOLDRCQUFJQyxZQUFZaEIsV0FBV2MsR0FBWCxDQUFlQyxNQUFmLEdBQXdCZixXQUFXYyxHQUFYLENBQWVDLE1BQWYsR0FBd0IscUJBQWhELEdBQXdFLG1CQUF4RjtBQUNNSCxnQ0FBUUMsR0FBUixDQUFZLGFBQVosRUFBMkJHLFNBQTNCO0FBQ0EsNEJBQUlDLGFBQWFSLE1BQU1TLFlBQXZCO0FBQ0EsNEJBQUlDLGdCQUFnQkYsV0FBV1AsTUFBL0I7QUFDQSw2QkFBSyxJQUFJVSxJQUFJLENBQWIsRUFBZ0JBLElBQUlELGFBQXBCLEVBQW1DQyxHQUFuQyxFQUF3QztBQUNwQ1Isb0NBQVFDLEdBQVIsQ0FBWSxlQUFaLEVBQTZCSSxXQUFXRyxDQUFYLENBQTdCO0FBQ0EsZ0NBQUksQ0FBQ0gsV0FBV0csQ0FBWCxFQUFjSixTQUFkLENBQUwsRUFBK0I7QUFDM0Isb0NBQUlLLFVBQVUsa0VBQWQ7QUFDQSxxQ0FBS0MsSUFBTCxDQUFVLG9CQUFWLEVBQWdDRCxPQUFoQztBQUNBO0FBQ0g7QUFDSjtBQUNKOzs7d0NBL0JlO0FBQ1osK0JBQU8sQ0FBQyxpQkFBRCxDQUFQO0FBQ0g7Ozs7Ozs7O0FBK0JMRSxvQkFBU3RCLHVCQUFUIiwiZmlsZSI6IkRlYWxEZXNrUmVhZFZhbGlkYXRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBcHBDb250ZXh0fSBmcm9tICdjb21tb24vY29yZS9BcHBDb250ZXh0LmpzJztcblxuZXhwb3J0IGNsYXNzIERlYWxEZXNrUmVhZFZhbGlkYXRpb25zIHtcblxuICAgIGJlZm9yZVJlZ2lzdGVyKCkge1xuICAgICAgICB0aGlzLmlzID0gJ3NiLWRkLXJlYWQtdmFsaWRhdGlvbnMnO1xuICAgICAgICB0aGlzLnByb3BlcnRpZXMgPSB7XG4gICAgICAgICAgICB2YWxpZGF0aW9uTWVzc2FnZXM6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBBcnJheSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogW11cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldCBvYnNlcnZlcnMoKSB7XG4gICAgICAgIHJldHVybiBbJ3ZhbGlkYXRlKG1vZGVsKSddO1xuICAgIH1cblxuICAgIHZhbGlkYXRlKCkge1xuICAgICAgICB0aGlzLnZhbGlkYXRlQ2hpbGRMaW5lU3RhdHVzZXModGhpcy5tb2RlbCk7XG4gICAgICAgIGlmICh0aGlzLnZhbGlkYXRpb25NZXNzYWdlcy5sZW5ndGggPD0gMCkge1xuICAgICAgICAgICAgdGhpcy5maXJlKFwibW9kZWxWYWxpZGF0ZWRcIiwge1xuICAgICAgICAgICAgICAgIG1vZGVsOiB0aGlzLm1vZGVsXG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5maXJlKCdhZGRNZXNzYWdlcycsIHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy52YWxpZGF0aW9uTWVzc2FnZXNcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgdmFsaWRhdGVDaGlsZExpbmVTdGF0dXNlcyhtb2RlbCkge1xuICAgICAgICBjb25zb2xlLmxvZygnQXBwQ29udGV4dC5vcmcucHJlZml4OiAnLCBBcHBDb250ZXh0Lm9yZy5wcmVmaXgpO1xuXHRcdGxldCBmaWVsZE5hbWUgPSBBcHBDb250ZXh0Lm9yZy5wcmVmaXggPyBBcHBDb250ZXh0Lm9yZy5wcmVmaXggKyAnX19BcHByb3ZhbFN0YXR1c19fYycgOiAnQXBwcm92YWxTdGF0dXNfX2MnO1xuICAgICAgICBjb25zb2xlLmxvZygnZmllbGROYW1lOiAnLCBmaWVsZE5hbWUpO1xuICAgICAgICBsZXQgY2hpbGRMaW5lcyA9IG1vZGVsLmNoaWxkUmVjb3JkcztcbiAgICAgICAgbGV0IG51bUNoaWxkTGluZXMgPSBjaGlsZExpbmVzLmxlbmd0aDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBudW1DaGlsZExpbmVzOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjaGlsZExpbmVzW2ldJywgY2hpbGRMaW5lc1tpXSk7XG4gICAgICAgICAgICBpZiAoIWNoaWxkTGluZXNbaV1bZmllbGROYW1lXSkge1xuICAgICAgICAgICAgICAgIGxldCBtZXNzYWdlID0gXCJPYmplY3QgbXVzdCBiZSBzdWJtaXR0ZWQgZm9yIGFwcHJvdmFsIGJlZm9yZSBhY2Nlc3NpbmcgRGVhbCBEZXNrXCI7XG4gICAgICAgICAgICAgICAgdGhpcy5wdXNoKFwidmFsaWRhdGlvbk1lc3NhZ2VzXCIsIG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblBvbHltZXIoIERlYWxEZXNrUmVhZFZhbGlkYXRpb25zICk7Il19
'use strict';

System.register('common/data/sb-service/test/Setup.js', ['../../../oauth/OAuth.js'], function (_export, _context) {
	var OAuth, _createClass, ORG_URL, ORG_ID, REFRESH_TOKEN, LOGIN_URL, Setup;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [function (_oauthOAuthJs) {
			OAuth = _oauthOAuthJs.OAuth;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			ORG_URL = 'https://na34.salesforce.com';
			ORG_ID = '00D61000000dwYmEAI';
			REFRESH_TOKEN = '5Aep861tbt360sO1.vax81FWRk4cQc8WdhWW6kMjRQMgJ9b1jsXbB9KTqr4OJWqucCWzAJdxSZapNU6w6_VAReK';
			LOGIN_URL = 'https://login.salesforce.com';

			_export('Setup', Setup = function () {
				function Setup(orgUrl, orgId, refreshToken) {
					_classCallCheck(this, Setup);

					this.orgUrl = orgUrl || ORG_URL;
					this.orgId = orgId || ORG_ID;
					this.refreshToken = refreshToken || REFRESH_TOKEN;
					this.id = LOGIN_URL + '/id/' + this.orgId;
					this.oauth = new OAuth();
				}

				_createClass(Setup, [{
					key: 'setup',
					value: function setup() {
						var tokens = {
							instance_url: this.orgUrl,
							id: this.id,
							refresh_token: this.refreshToken
						};
						this.tokens = this.oauth.tokens;
						this.oauth.tokens = tokens;
					}
				}, {
					key: 'cleanup',
					value: function cleanup() {
						if (!this.tokens || !this.tokens.refreshToken) return;

						var tokens = {
							instance_url: this.tokens.instanceUrl,
							id: this.tokens.userInfo.url,
							refresh_token: this.tokens.refreshToken,
							access_token: this.tokens.accessToken
						};
						this.oauth.tokens = tokens;
					}
				}]);

				return Setup;
			}());

			_export('Setup', Setup);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNldHVwLmpzIl0sIm5hbWVzIjpbIk9BdXRoIiwiT1JHX1VSTCIsIk9SR19JRCIsIlJFRlJFU0hfVE9LRU4iLCJMT0dJTl9VUkwiLCJTZXR1cCIsIm9yZ1VybCIsIm9yZ0lkIiwicmVmcmVzaFRva2VuIiwiaWQiLCJvYXV0aCIsInRva2VucyIsImluc3RhbmNlX3VybCIsInJlZnJlc2hfdG9rZW4iLCJpbnN0YW5jZVVybCIsInVzZXJJbmZvIiwidXJsIiwiYWNjZXNzX3Rva2VuIiwiYWNjZXNzVG9rZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBUUEsUSxpQkFBQUEsSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUZDLFUsR0FBVSw2QjtBQUNWQyxTLEdBQVMsb0I7QUFDVEMsZ0IsR0FBZ0IseUY7QUFDaEJDLFksR0FBWSw4Qjs7b0JBRUxDLEs7QUFFWixtQkFBWUMsTUFBWixFQUFvQkMsS0FBcEIsRUFBMkJDLFlBQTNCLEVBQXlDO0FBQUE7O0FBQ3hDLFVBQUtGLE1BQUwsR0FBY0EsVUFBVUwsT0FBeEI7QUFDQSxVQUFLTSxLQUFMLEdBQWFBLFNBQVNMLE1BQXRCO0FBQ0EsVUFBS00sWUFBTCxHQUFvQkEsZ0JBQWdCTCxhQUFwQztBQUNBLFVBQUtNLEVBQUwsR0FBVUwsWUFBWSxNQUFaLEdBQXFCLEtBQUtHLEtBQXBDO0FBQ0EsVUFBS0csS0FBTCxHQUFhLElBQUlWLEtBQUosRUFBYjtBQUNBOzs7OzZCQUVPO0FBQ1AsVUFBSVcsU0FBUztBQUNaQyxxQkFBYyxLQUFLTixNQURQO0FBRVpHLFdBQUksS0FBS0EsRUFGRztBQUdaSSxzQkFBZSxLQUFLTDtBQUhSLE9BQWI7QUFLQSxXQUFLRyxNQUFMLEdBQWMsS0FBS0QsS0FBTCxDQUFXQyxNQUF6QjtBQUNBLFdBQUtELEtBQUwsQ0FBV0MsTUFBWCxHQUFvQkEsTUFBcEI7QUFDQTs7OytCQUVTO0FBQ1QsVUFBRyxDQUFDLEtBQUtBLE1BQU4sSUFBZ0IsQ0FBQyxLQUFLQSxNQUFMLENBQVlILFlBQWhDLEVBQ0M7O0FBRUQsVUFBSUcsU0FBUztBQUNaQyxxQkFBYyxLQUFLRCxNQUFMLENBQVlHLFdBRGQ7QUFFWkwsV0FBSSxLQUFLRSxNQUFMLENBQVlJLFFBQVosQ0FBcUJDLEdBRmI7QUFHWkgsc0JBQWUsS0FBS0YsTUFBTCxDQUFZSCxZQUhmO0FBSVpTLHFCQUFjLEtBQUtOLE1BQUwsQ0FBWU87QUFKZCxPQUFiO0FBTUEsV0FBS1IsS0FBTCxDQUFXQyxNQUFYLEdBQW9CQSxNQUFwQjtBQUNBIiwiZmlsZSI6IlNldHVwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPQXV0aH0gZnJvbSAnLi4vLi4vLi4vb2F1dGgvT0F1dGguanMnO1xuXG5jb25zdCBPUkdfVVJMID0gJ2h0dHBzOi8vbmEzNC5zYWxlc2ZvcmNlLmNvbSc7XG5jb25zdCBPUkdfSUQgPSAnMDBENjEwMDAwMDBkd1ltRUFJJztcbmNvbnN0IFJFRlJFU0hfVE9LRU4gPSAnNUFlcDg2MXRidDM2MHNPMS52YXg4MUZXUms0Y1FjOFdkaFdXNmtNalJRTWdKOWIxanNYYkI5S1RxcjRPSldxdWNDV3pBSmR4U1phcE5VNnc2X1ZBUmVLJztcbmNvbnN0IExPR0lOX1VSTCA9ICdodHRwczovL2xvZ2luLnNhbGVzZm9yY2UuY29tJztcblxuZXhwb3J0IGNsYXNzIFNldHVwIHtcblxuXHRjb25zdHJ1Y3RvcihvcmdVcmwsIG9yZ0lkLCByZWZyZXNoVG9rZW4pIHtcblx0XHR0aGlzLm9yZ1VybCA9IG9yZ1VybCB8fCBPUkdfVVJMO1xuXHRcdHRoaXMub3JnSWQgPSBvcmdJZCB8fCBPUkdfSUQ7XG5cdFx0dGhpcy5yZWZyZXNoVG9rZW4gPSByZWZyZXNoVG9rZW4gfHwgUkVGUkVTSF9UT0tFTjtcblx0XHR0aGlzLmlkID0gTE9HSU5fVVJMICsgJy9pZC8nICsgdGhpcy5vcmdJZDtcblx0XHR0aGlzLm9hdXRoID0gbmV3IE9BdXRoKCk7XG5cdH1cblxuXHRzZXR1cCgpIHtcblx0XHR2YXIgdG9rZW5zID0ge1xuXHRcdFx0aW5zdGFuY2VfdXJsOiB0aGlzLm9yZ1VybCxcblx0XHRcdGlkOiB0aGlzLmlkLFxuXHRcdFx0cmVmcmVzaF90b2tlbjogdGhpcy5yZWZyZXNoVG9rZW5cblx0XHR9O1xuXHRcdHRoaXMudG9rZW5zID0gdGhpcy5vYXV0aC50b2tlbnM7XG5cdFx0dGhpcy5vYXV0aC50b2tlbnMgPSB0b2tlbnM7XG5cdH1cblxuXHRjbGVhbnVwKCkge1xuXHRcdGlmKCF0aGlzLnRva2VucyB8fCAhdGhpcy50b2tlbnMucmVmcmVzaFRva2VuKVxuXHRcdFx0cmV0dXJuO1xuXG5cdFx0dmFyIHRva2VucyA9IHtcblx0XHRcdGluc3RhbmNlX3VybDogdGhpcy50b2tlbnMuaW5zdGFuY2VVcmwsXG5cdFx0XHRpZDogdGhpcy50b2tlbnMudXNlckluZm8udXJsLFxuXHRcdFx0cmVmcmVzaF90b2tlbjogdGhpcy50b2tlbnMucmVmcmVzaFRva2VuLFxuXHRcdFx0YWNjZXNzX3Rva2VuOiB0aGlzLnRva2Vucy5hY2Nlc3NUb2tlblxuXHRcdH07XG5cdFx0dGhpcy5vYXV0aC50b2tlbnMgPSB0b2tlbnM7XG5cdH1cbn0iXX0=
'use strict';

System.register('common/data/sb-db/adapter/leveljs/LevelAdapter.js', ['common/Util.js'], function (_export, _context) {
	var Util, _createClass, ID, ID_DELIM, LevelAdapter;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	function getRelatedId(ref) {
		var id = null;

		if (ref && typeof ref === 'string') id = ref;else if (ref && ref.id) id = ref.id;

		return id;
	}

	function getAll(db, model) {
		if (!model) return Promise.reject('Cannot query all records without model');

		return new Promise(function (resolve, reject) {
			var it = db.iterator({
				'gte': model.schema.id + ID_DELIM,
				'lte': model.schema.id + ID_DELIM + '\uFFFF',
				'valueAsBuffer': false
			});

			next(it, []).then(function (records) {
				resolve(records);
			}).catch(function (err) {
				reject(err);
			});
		});
	}

	function next(it, records) {
		return new Promise(function (resolve, reject) {
			it.next(function (err, key, value) {
				if (err) {
					reject(err);
				} else {
					if (!key && !value) {
						resolve(records);
					} else {
						records.push(value);
						next(it, records).then(function (newRecords) {
							resolve(newRecords);
						}).catch(function (err) {
							reject(err);
						});
					}
				}
			});
		});
	}

	function getOne(db, id) {
		if (!id) return Promise.resolve();

		return new Promise(function (resolve, reject) {
			db.get(id, { asBuffer: false }, function (err, obj) {
				if (err) reject(err);else resolve(obj);
			});
		});
	}

	function toArray(x) {
		return x == null || Array.isArray(x) ? x : [x];
	}

	function hasProp(x) {
		if (!x) return false;

		for (var p in x) {
			return true;
		}return false;
	}
	return {
		setters: [function (_commonUtilJs) {
			Util = _commonUtilJs.Util;
		}],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			ID = 'id';
			ID_DELIM = '_';

			_export('LevelAdapter', LevelAdapter = function () {
				function LevelAdapter() {
					_classCallCheck(this, LevelAdapter);
				}

				_createClass(LevelAdapter, [{
					key: 'open',
					value: function open(name) {
						this.db = new window.Level(name);
						return new Promise(function (resolve, reject) {
							this.db.open(function (err) {
								if (err) reject(err);else resolve(this.db);
							}.bind(this));
						}.bind(this));
					}
				}, {
					key: 'save',
					value: function save(objs) {
						if (objs == null) return Promise.reject('Cannot save a null object');

						var ops = [],
						    self = this,
						    wasArray = Array.isArray(objs),
						    now = Date.now(),
						    nowStr = Util.toIsoDate(now),
						    user = 1;

						objs = toArray(objs);

						var _iteratorNormalCompletion = true;
						var _didIteratorError = false;
						var _iteratorError = undefined;

						try {
							for (var _iterator = objs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
								var obj = _step.value;

								if (hasProp(obj)) {
									for (var r in obj.constructor.relationships()) {
										var ref = obj[r];
										if (Array.isArray(ref)) {
											var len = ref.length;
											for (var i = 0; i < len; i++) {
												ref[i] = getRelatedId(ref[i]);
											}obj[r] = ref.filter(function (v) {
												return v != null;
											});

											if (!obj[r].length) delete obj[r];
										} else {
											obj[r] = getRelatedId(ref);
											if (!obj[r]) delete obj[r];
										}
									}

									if (!obj.id) {
										obj.id = obj.constructor.schema.id + ID_DELIM + now;
										obj.createdDate = nowStr;
										obj.createdBy = user;
									}

									obj.lastModifiedDate = nowStr;
									obj.lastModifiedBy = user;

									ops.push({
										type: 'put',
										key: obj.id,
										value: obj
									});
								}
							}
						} catch (err) {
							_didIteratorError = true;
							_iteratorError = err;
						} finally {
							try {
								if (!_iteratorNormalCompletion && _iterator.return) {
									_iterator.return();
								}
							} finally {
								if (_didIteratorError) {
									throw _iteratorError;
								}
							}
						}

						return new Promise(function (resolve, reject) {
							this.db.batch(ops, function (err) {
								if (err) {
									reject(err);
								} else {
									resolve(wasArray ? objs : objs[0]);
								}
							}.bind(this));
						}.bind(this));
					}
				}, {
					key: 'remove',
					value: function remove(objs) {
						if (objs == null) return Promise.reject('Cannot remove a null object');

						var ops = [];
						objs = toArray(objs);
						var _iteratorNormalCompletion2 = true;
						var _didIteratorError2 = false;
						var _iteratorError2 = undefined;

						try {
							for (var _iterator2 = objs[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
								var obj = _step2.value;

								if (obj) {
									ops.push({
										type: 'del',
										key: obj.id ? obj.id : obj });
								}
							}
						} catch (err) {
							_didIteratorError2 = true;
							_iteratorError2 = err;
						} finally {
							try {
								if (!_iteratorNormalCompletion2 && _iterator2.return) {
									_iterator2.return();
								}
							} finally {
								if (_didIteratorError2) {
									throw _iteratorError2;
								}
							}
						}

						return new Promise(function (resolve, reject) {
							this.db.batch(ops, function (err) {
								if (err) {
									reject(err);
								} else {
									resolve();
								}
							});
						}.bind(this));
					}
				}, {
					key: 'get',
					value: function get(id, model) {
						if (id) {
							return getOne(this.db, id);
						} else {
							return getAll(this.db, model);
						}
					}
				}]);

				return LevelAdapter;
			}());

			_export('LevelAdapter', LevelAdapter);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
window.Level = require( '../../../../../../node_modules/level-js/index.js' );

},{"../../../../../../node_modules/level-js/index.js":14}],2:[function(require,module,exports){
(function (process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

function AbstractChainedBatch (db) {
  this._db         = db
  this._operations = []
  this._written    = false
}

AbstractChainedBatch.prototype._checkWritten = function () {
  if (this._written)
    throw new Error('write() already called on this batch')
}

AbstractChainedBatch.prototype.put = function (key, value) {
  this._checkWritten()

  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer)
  if (err) throw err
  err = this._db._checkKeyValue(value, 'value', this._db._isBuffer)
  if (err) throw err

  if (!this._db._isBuffer(key)) key = String(key)
  if (!this._db._isBuffer(value)) value = String(value)

  if (typeof this._put == 'function' )
    this._put(key, value)
  else
    this._operations.push({ type: 'put', key: key, value: value })

  return this
}

AbstractChainedBatch.prototype.del = function (key) {
  this._checkWritten()

  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer)
  if (err) throw err

  if (!this._db._isBuffer(key)) key = String(key)

  if (typeof this._del == 'function' )
    this._del(key)
  else
    this._operations.push({ type: 'del', key: key })

  return this
}

AbstractChainedBatch.prototype.clear = function () {
  this._checkWritten()

  this._operations = []

  if (typeof this._clear == 'function' )
    this._clear()

  return this
}

AbstractChainedBatch.prototype.write = function (options, callback) {
  this._checkWritten()

  if (typeof options == 'function')
    callback = options
  if (typeof callback != 'function')
    throw new Error('write() requires a callback argument')
  if (typeof options != 'object')
    options = {}

  this._written = true

  if (typeof this._write == 'function' )
    return this._write(callback)

  if (typeof this._db._batch == 'function')
    return this._db._batch(this._operations, options, callback)

  process.nextTick(callback)
}

module.exports = AbstractChainedBatch
}).call(this,require('_process'))
},{"_process":23}],3:[function(require,module,exports){
(function (process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

function AbstractIterator (db) {
  this.db = db
  this._ended = false
  this._nexting = false
}

AbstractIterator.prototype.next = function (callback) {
  var self = this

  if (typeof callback != 'function')
    throw new Error('next() requires a callback argument')

  if (self._ended)
    return callback(new Error('cannot call next() after end()'))
  if (self._nexting)
    return callback(new Error('cannot call next() before previous next() has completed'))

  self._nexting = true
  if (typeof self._next == 'function') {
    return self._next(function () {
      self._nexting = false
      callback.apply(null, arguments)
    })
  }

  process.nextTick(function () {
    self._nexting = false
    callback()
  })
}

AbstractIterator.prototype.end = function (callback) {
  if (typeof callback != 'function')
    throw new Error('end() requires a callback argument')

  if (this._ended)
    return callback(new Error('end() already called on iterator'))

  this._ended = true

  if (typeof this._end == 'function')
    return this._end(callback)

  process.nextTick(callback)
}

module.exports = AbstractIterator

}).call(this,require('_process'))
},{"_process":23}],4:[function(require,module,exports){
(function (Buffer,process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

var xtend                = require('xtend')
  , AbstractIterator     = require('./abstract-iterator')
  , AbstractChainedBatch = require('./abstract-chained-batch')

function AbstractLevelDOWN (location) {
  if (!arguments.length || location === undefined)
    throw new Error('constructor requires at least a location argument')

  if (typeof location != 'string')
    throw new Error('constructor requires a location string argument')

  this.location = location
}

AbstractLevelDOWN.prototype.open = function (options, callback) {
  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('open() requires a callback argument')

  if (typeof options != 'object')
    options = {}

  if (typeof this._open == 'function')
    return this._open(options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.close = function (callback) {
  if (typeof callback != 'function')
    throw new Error('close() requires a callback argument')

  if (typeof this._close == 'function')
    return this._close(callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.get = function (key, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('get() requires a callback argument')

  if (err = this._checkKeyValue(key, 'key', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  if (typeof options != 'object')
    options = {}

  if (typeof this._get == 'function')
    return this._get(key, options, callback)

  process.nextTick(function () { callback(new Error('NotFound')) })
}

AbstractLevelDOWN.prototype.put = function (key, value, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('put() requires a callback argument')

  if (err = this._checkKeyValue(key, 'key', this._isBuffer))
    return callback(err)

  if (err = this._checkKeyValue(value, 'value', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  // coerce value to string in node, don't touch it in browser
  // (indexeddb can store any JS type)
  if (!this._isBuffer(value) && !process.browser)
    value = String(value)

  if (typeof options != 'object')
    options = {}

  if (typeof this._put == 'function')
    return this._put(key, value, options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.del = function (key, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('del() requires a callback argument')

  if (err = this._checkKeyValue(key, 'key', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  if (typeof options != 'object')
    options = {}

  if (typeof this._del == 'function')
    return this._del(key, options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.batch = function (array, options, callback) {
  if (!arguments.length)
    return this._chainedBatch()

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('batch(array) requires a callback argument')

  if (!Array.isArray(array))
    return callback(new Error('batch(array) requires an array argument'))

  if (typeof options != 'object')
    options = {}

  var i = 0
    , l = array.length
    , e
    , err

  for (; i < l; i++) {
    e = array[i]
    if (typeof e != 'object')
      continue

    if (err = this._checkKeyValue(e.type, 'type', this._isBuffer))
      return callback(err)

    if (err = this._checkKeyValue(e.key, 'key', this._isBuffer))
      return callback(err)

    if (e.type == 'put') {
      if (err = this._checkKeyValue(e.value, 'value', this._isBuffer))
        return callback(err)
    }
  }

  if (typeof this._batch == 'function')
    return this._batch(array, options, callback)

  process.nextTick(callback)
}

//TODO: remove from here, not a necessary primitive
AbstractLevelDOWN.prototype.approximateSize = function (start, end, callback) {
  if (   start == null
      || end == null
      || typeof start == 'function'
      || typeof end == 'function') {
    throw new Error('approximateSize() requires valid `start`, `end` and `callback` arguments')
  }

  if (typeof callback != 'function')
    throw new Error('approximateSize() requires a callback argument')

  if (!this._isBuffer(start))
    start = String(start)

  if (!this._isBuffer(end))
    end = String(end)

  if (typeof this._approximateSize == 'function')
    return this._approximateSize(start, end, callback)

  process.nextTick(function () {
    callback(null, 0)
  })
}

AbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {
  var self = this

  options = xtend(options)

  ;[ 'start', 'end', 'gt', 'gte', 'lt', 'lte' ].forEach(function (o) {
    if (options[o] && self._isBuffer(options[o]) && options[o].length === 0)
      delete options[o]
  })

  options.reverse = !!options.reverse

  // fix `start` so it takes into account gt, gte, lt, lte as appropriate
  if (options.reverse && options.lt)
    options.start = options.lt
  if (options.reverse && options.lte)
    options.start = options.lte
  if (!options.reverse && options.gt)
    options.start = options.gt
  if (!options.reverse && options.gte)
    options.start = options.gte

  if ((options.reverse && options.lt && !options.lte)
    || (!options.reverse && options.gt && !options.gte))
    options.exclusiveStart = true // start should *not* include matching key

  return options
}

AbstractLevelDOWN.prototype.iterator = function (options) {
  if (typeof options != 'object')
    options = {}

  options = this._setupIteratorOptions(options)

  if (typeof this._iterator == 'function')
    return this._iterator(options)

  return new AbstractIterator(this)
}

AbstractLevelDOWN.prototype._chainedBatch = function () {
  return new AbstractChainedBatch(this)
}

AbstractLevelDOWN.prototype._isBuffer = function (obj) {
  return Buffer.isBuffer(obj)
}

AbstractLevelDOWN.prototype._checkKeyValue = function (obj, type) {

  if (obj === null || obj === undefined)
    return new Error(type + ' cannot be `null` or `undefined`')

  if (this._isBuffer(obj)) {
    if (obj.length === 0)
      return new Error(type + ' cannot be an empty Buffer')
  } else if (String(obj) === '')
    return new Error(type + ' cannot be an empty String')
}

module.exports.AbstractLevelDOWN    = AbstractLevelDOWN
module.exports.AbstractIterator     = AbstractIterator
module.exports.AbstractChainedBatch = AbstractChainedBatch

}).call(this,{"isBuffer":require("../is-buffer/index.js")},require('_process'))
},{"../is-buffer/index.js":12,"./abstract-chained-batch":2,"./abstract-iterator":3,"_process":23,"xtend":5}],5:[function(require,module,exports){
module.exports = extend

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (source.hasOwnProperty(key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}],6:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],7:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('is-array')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
 *     on objects.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

function typedArraySupport () {
  function Bar () {}
  try {
    var arr = new Uint8Array(1)
    arr.foo = function () { return 42 }
    arr.constructor = Bar
    return arr.foo() === 42 && // typed array instances can be augmented
        arr.constructor === Bar && // constructor can be set
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (arg) {
  if (!(this instanceof Buffer)) {
    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
    if (arguments.length > 1) return new Buffer(arg, arguments[1])
    return new Buffer(arg)
  }

  this.length = 0
  this.parent = undefined

  // Common case.
  if (typeof arg === 'number') {
    return fromNumber(this, arg)
  }

  // Slightly less common case.
  if (typeof arg === 'string') {
    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
  }

  // Unusual.
  return fromObject(this, arg)
}

function fromNumber (that, length) {
  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < length; i++) {
      that[i] = 0
    }
  }
  return that
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

  // Assumption: byteLength() return value is always < kMaxLength.
  var length = byteLength(string, encoding) | 0
  that = allocate(that, length)

  that.write(string, encoding)
  return that
}

function fromObject (that, object) {
  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

  if (isArray(object)) return fromArray(that, object)

  if (object == null) {
    throw new TypeError('must start with number, buffer, array or string')
  }

  if (typeof ArrayBuffer !== 'undefined') {
    if (object.buffer instanceof ArrayBuffer) {
      return fromTypedArray(that, object)
    }
    if (object instanceof ArrayBuffer) {
      return fromArrayBuffer(that, object)
    }
  }

  if (object.length) return fromArrayLike(that, object)

  return fromJsonObject(that, object)
}

function fromBuffer (that, buffer) {
  var length = checked(buffer.length) | 0
  that = allocate(that, length)
  buffer.copy(that, 0, 0, length)
  return that
}

function fromArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Duplicate of fromArray() to keep fromArray() monomorphic.
function fromTypedArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  // Truncating the elements is probably not what people expect from typed
  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
  // of the old Buffer constructor.
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    array.byteLength
    that = Buffer._augment(new Uint8Array(array))
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromTypedArray(that, new Uint8Array(array))
  }
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
function fromJsonObject (that, object) {
  var array
  var length = 0

  if (object.type === 'Buffer' && isArray(object.data)) {
    array = object.data
    length = checked(array.length) | 0
  }
  that = allocate(that, length)

  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
}

function allocate (that, length) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = Buffer._augment(new Uint8Array(length))
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that.length = length
    that._isBuffer = true
  }

  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
  if (fromPool) that.parent = rootParent

  return that
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (subject, encoding) {
  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

  var buf = new Buffer(subject, encoding)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  var i = 0
  var len = Math.min(x, y)
  while (i < len) {
    if (a[i] !== b[i]) break

    ++i
  }

  if (i !== len) {
    x = a[i]
    y = b[i]
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

  if (list.length === 0) {
    return new Buffer(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; i++) {
      length += list[i].length
    }
  }

  var buf = new Buffer(length)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

function byteLength (string, encoding) {
  if (typeof string !== 'string') string = '' + string

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'binary':
      // Deprecated
      case 'raw':
      case 'raws':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

// pre-set for values that may exist in the future
//Buffer.prototype.length = undefined
//Buffer.prototype.parent = undefined

function slowToString (encoding, start, end) {
  var loweredCase = false

  start = start | 0
  end = end === undefined || end === Infinity ? this.length : end | 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return 0
  return Buffer.compare(this, b)
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    if (val.length === 0) return -1 // special case: looking for empty string always fails
    return String.prototype.indexOf.call(this, val, byteOffset)
  }
  if (Buffer.isBuffer(val)) {
    return arrayIndexOf(this, val, byteOffset)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset)
  }

  function arrayIndexOf (arr, val, byteOffset) {
    var foundIndex = -1
    for (var i = 0; byteOffset + i < arr.length; i++) {
      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
      } else {
        foundIndex = -1
      }
    }
    return -1
  }

  throw new TypeError('val must be string, number or Buffer')
}

// `get` is deprecated
Buffer.prototype.get = function get (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` is deprecated
Buffer.prototype.set = function set (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) throw new Error('Invalid hex string')
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    var swap = encoding
    encoding = offset
    offset = length | 0
    length = swap
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length) newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; i--) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; i++) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), targetStart)
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function fill (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function _augment (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array set method before overwriting
  arr._set = arr.set

  // deprecated
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.indexOf = BP.indexOf
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUIntLE = BP.readUIntLE
  arr.readUIntBE = BP.readUIntBE
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readIntLE = BP.readIntLE
  arr.readIntBE = BP.readIntBE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUIntLE = BP.writeUIntLE
  arr.writeUIntBE = BP.writeUIntBE
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeIntLE = BP.writeIntLE
  arr.writeIntBE = BP.writeIntBE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"base64-js":6,"ieee754":9,"is-array":11}],8:[function(require,module,exports){
/*global window:false, self:false, define:false, module:false */

/**
 * @license IDBWrapper - A cross-browser wrapper for IndexedDB
 * Version 1.6.1
 * Copyright (c) 2011 - 2015 Jens Arps
 * http://jensarps.de/
 *
 * Licensed under the MIT (X11) license
 */

(function (name, definition, global) {
  if (typeof define === 'function') {
    define(definition);
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = definition();
  } else {
    global[name] = definition();
  }
})('IDBStore', function () {

  'use strict';

  var defaultErrorHandler = function (error) {
    throw error;
  };
  var defaultSuccessHandler = function () {};

  var defaults = {
    storeName: 'Store',
    storePrefix: 'IDBWrapper-',
    dbVersion: 1,
    keyPath: 'id',
    autoIncrement: true,
    onStoreReady: function () {
    },
    onError: defaultErrorHandler,
    indexes: [],
    implementationPreference: [
      'indexedDB',
      'webkitIndexedDB',
      'mozIndexedDB',
      'shimIndexedDB'
    ]
  };

  /**
   *
   * The IDBStore constructor
   *
   * @constructor
   * @name IDBStore
   * @version 1.6.1
   *
   * @param {Object} [kwArgs] An options object used to configure the store and
   *  set callbacks
   * @param {String} [kwArgs.storeName='Store'] The name of the store
   * @param {String} [kwArgs.storePrefix='IDBWrapper-'] A prefix that is
   *  internally used to construct the name of the database, which will be
   *  kwArgs.storePrefix + kwArgs.storeName
   * @param {Number} [kwArgs.dbVersion=1] The version of the store
   * @param {String} [kwArgs.keyPath='id'] The key path to use. If you want to
   *  setup IDBWrapper to work with out-of-line keys, you need to set this to
   *  `null`
   * @param {Boolean} [kwArgs.autoIncrement=true] If set to true, IDBStore will
   *  automatically make sure a unique keyPath value is present on each object
   *  that is stored.
   * @param {Function} [kwArgs.onStoreReady] A callback to be called when the
   *  store is ready to be used.
   * @param {Function} [kwArgs.onError=throw] A callback to be called when an
   *  error occurred during instantiation of the store.
   * @param {Array} [kwArgs.indexes=[]] An array of indexData objects
   *  defining the indexes to use with the store. For every index to be used
   *  one indexData object needs to be passed in the array.
   *  An indexData object is defined as follows:
   * @param {Object} [kwArgs.indexes.indexData] An object defining the index to
   *  use
   * @param {String} kwArgs.indexes.indexData.name The name of the index
   * @param {String} [kwArgs.indexes.indexData.keyPath] The key path of the index
   * @param {Boolean} [kwArgs.indexes.indexData.unique] Whether the index is unique
   * @param {Boolean} [kwArgs.indexes.indexData.multiEntry] Whether the index is multi entry
   * @param {Array} [kwArgs.implementationPreference=['indexedDB','webkitIndexedDB','mozIndexedDB','shimIndexedDB']] An array of strings naming implementations to be used, in order or preference
   * @param {Function} [onStoreReady] A callback to be called when the store
   * is ready to be used.
   * @example
      // create a store for customers with an additional index over the
      // `lastname` property.
      var myCustomerStore = new IDBStore({
        dbVersion: 1,
        storeName: 'customer-index',
        keyPath: 'customerid',
        autoIncrement: true,
        onStoreReady: populateTable,
        indexes: [
          { name: 'lastname', keyPath: 'lastname', unique: false, multiEntry: false }
        ]
      });
   * @example
      // create a generic store
      var myCustomerStore = new IDBStore({
        storeName: 'my-data-store',
        onStoreReady: function(){
          // start working with the store.
        }
      });
   */
  var IDBStore = function (kwArgs, onStoreReady) {

    if (typeof onStoreReady == 'undefined' && typeof kwArgs == 'function') {
      onStoreReady = kwArgs;
    }
    if (Object.prototype.toString.call(kwArgs) != '[object Object]') {
      kwArgs = {};
    }

    for (var key in defaults) {
      this[key] = typeof kwArgs[key] != 'undefined' ? kwArgs[key] : defaults[key];
    }

    this.dbName = this.storePrefix + this.storeName;
    this.dbVersion = parseInt(this.dbVersion, 10) || 1;

    onStoreReady && (this.onStoreReady = onStoreReady);

    var env = typeof window == 'object' ? window : self;
    var availableImplementations = this.implementationPreference.filter(function (implName) {
      return implName in env;
    });
    this.implementation = availableImplementations[0];
    this.idb = env[this.implementation];
    this.keyRange = env.IDBKeyRange || env.webkitIDBKeyRange || env.mozIDBKeyRange;

    this.consts = {
      'READ_ONLY':         'readonly',
      'READ_WRITE':        'readwrite',
      'VERSION_CHANGE':    'versionchange',
      'NEXT':              'next',
      'NEXT_NO_DUPLICATE': 'nextunique',
      'PREV':              'prev',
      'PREV_NO_DUPLICATE': 'prevunique'
    };

    this.openDB();
  };

  IDBStore.prototype = /** @lends IDBStore */ {

    /**
     * A pointer to the IDBStore ctor
     *
     * @private
     * @type {Function}
     */
    constructor: IDBStore,

    /**
     * The version of IDBStore
     *
     * @type {String}
     */
    version: '1.6.1',

    /**
     * A reference to the IndexedDB object
     *
     * @type {Object}
     */
    db: null,

    /**
     * The full name of the IndexedDB used by IDBStore, composed of
     * this.storePrefix + this.storeName
     *
     * @type {String}
     */
    dbName: null,

    /**
     * The version of the IndexedDB used by IDBStore
     *
     * @type {Number}
     */
    dbVersion: null,

    /**
     * A reference to the objectStore used by IDBStore
     *
     * @type {Object}
     */
    store: null,

    /**
     * The store name
     *
     * @type {String}
     */
    storeName: null,

    /**
     * The prefix to prepend to the store name
     *
     * @type {String}
     */
    storePrefix: null,

    /**
     * The key path
     *
     * @type {String}
     */
    keyPath: null,

    /**
     * Whether IDBStore uses autoIncrement
     *
     * @type {Boolean}
     */
    autoIncrement: null,

    /**
     * The indexes used by IDBStore
     *
     * @type {Array}
     */
    indexes: null,

    /**
     * The implemantations to try to use, in order of preference
     *
     * @type {Array}
     */
    implementationPreference: null,

    /**
     * The actual implementation being used
     *
     * @type {String}
     */
    implementation: '',

    /**
     * The callback to be called when the store is ready to be used
     *
     * @type {Function}
     */
    onStoreReady: null,

    /**
     * The callback to be called if an error occurred during instantiation
     * of the store
     *
     * @type {Function}
     */
    onError: null,

    /**
     * The internal insertID counter
     *
     * @type {Number}
     * @private
     */
    _insertIdCount: 0,

    /**
     * Opens an IndexedDB; called by the constructor.
     *
     * Will check if versions match and compare provided index configuration
     * with existing ones, and update indexes if necessary.
     *
     * Will call this.onStoreReady() if everything went well and the store
     * is ready to use, and this.onError() is something went wrong.
     *
     * @private
     *
     */
    openDB: function () {

      var openRequest = this.idb.open(this.dbName, this.dbVersion);
      var preventSuccessCallback = false;

      openRequest.onerror = function (error) {

        var gotVersionErr = false;
        if ('error' in error.target) {
          gotVersionErr = error.target.error.name == 'VersionError';
        } else if ('errorCode' in error.target) {
          gotVersionErr = error.target.errorCode == 12;
        }

        if (gotVersionErr) {
          this.onError(new Error('The version number provided is lower than the existing one.'));
        } else {
          this.onError(error);
        }
      }.bind(this);

      openRequest.onsuccess = function (event) {

        if (preventSuccessCallback) {
          return;
        }

        if(this.db){
          this.onStoreReady();
          return;
        }

        this.db = event.target.result;

        if(typeof this.db.version == 'string'){
          this.onError(new Error('The IndexedDB implementation in this browser is outdated. Please upgrade your browser.'));
          return;
        }

        if(!this.db.objectStoreNames.contains(this.storeName)){
          // We should never ever get here.
          // Lets notify the user anyway.
          this.onError(new Error('Object store couldn\'t be created.'));
          return;
        }

        var emptyTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);
        this.store = emptyTransaction.objectStore(this.storeName);

        // check indexes
        var existingIndexes = Array.prototype.slice.call(this.getIndexList());
        this.indexes.forEach(function(indexData){
          var indexName = indexData.name;

          if(!indexName){
            preventSuccessCallback = true;
            this.onError(new Error('Cannot create index: No index name given.'));
            return;
          }

          this.normalizeIndexData(indexData);

          if(this.hasIndex(indexName)){
            // check if it complies
            var actualIndex = this.store.index(indexName);
            var complies = this.indexComplies(actualIndex, indexData);
            if(!complies){
              preventSuccessCallback = true;
              this.onError(new Error('Cannot modify index "' + indexName + '" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));
            }

            existingIndexes.splice(existingIndexes.indexOf(indexName), 1);
          } else {
            preventSuccessCallback = true;
            this.onError(new Error('Cannot create new index "' + indexName + '" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));
          }

        }, this);

        if (existingIndexes.length) {
          preventSuccessCallback = true;
          this.onError(new Error('Cannot delete index(es) "' + existingIndexes.toString() + '" for current version. Please bump version number to ' + ( this.dbVersion + 1 ) + '.'));
        }

        preventSuccessCallback || this.onStoreReady();
      }.bind(this);

      openRequest.onupgradeneeded = function(/* IDBVersionChangeEvent */ event){

        this.db = event.target.result;

        if(this.db.objectStoreNames.contains(this.storeName)){
          this.store = event.target.transaction.objectStore(this.storeName);
        } else {
          var optionalParameters = { autoIncrement: this.autoIncrement };
          if (this.keyPath !== null) {
            optionalParameters.keyPath = this.keyPath;
          }
          this.store = this.db.createObjectStore(this.storeName, optionalParameters);
        }

        var existingIndexes = Array.prototype.slice.call(this.getIndexList());
        this.indexes.forEach(function(indexData){
          var indexName = indexData.name;

          if(!indexName){
            preventSuccessCallback = true;
            this.onError(new Error('Cannot create index: No index name given.'));
          }

          this.normalizeIndexData(indexData);

          if(this.hasIndex(indexName)){
            // check if it complies
            var actualIndex = this.store.index(indexName);
            var complies = this.indexComplies(actualIndex, indexData);
            if(!complies){
              // index differs, need to delete and re-create
              this.store.deleteIndex(indexName);
              this.store.createIndex(indexName, indexData.keyPath, { unique: indexData.unique, multiEntry: indexData.multiEntry });
            }

            existingIndexes.splice(existingIndexes.indexOf(indexName), 1);
          } else {
            this.store.createIndex(indexName, indexData.keyPath, { unique: indexData.unique, multiEntry: indexData.multiEntry });
          }

        }, this);

        if (existingIndexes.length) {
          existingIndexes.forEach(function(_indexName){
            this.store.deleteIndex(_indexName);
          }, this);
        }

      }.bind(this);
    },

    /**
     * Deletes the database used for this store if the IDB implementations
     * provides that functionality.
     *
     * @param {Function} [onSuccess] A callback that is called if deletion
     *  was successful.
     * @param {Function} [onError] A callback that is called if deletion
     *  failed.
     */
    deleteDatabase: function (onSuccess, onError) {
      if (this.idb.deleteDatabase) {
        this.db.close();
        var deleteRequest = this.idb.deleteDatabase(this.dbName);
        deleteRequest.onsuccess = onSuccess;
        deleteRequest.onerror = onError;
      } else {
        onError(new Error('Browser does not support IndexedDB deleteDatabase!'));
      }
    },

    /*********************
     * data manipulation *
     *********************/

    /**
     * Puts an object into the store. If an entry with the given id exists,
     * it will be overwritten. This method has a different signature for inline
     * keys and out-of-line keys; please see the examples below.
     *
     * @param {*} [key] The key to store. This is only needed if IDBWrapper
     *  is set to use out-of-line keys. For inline keys - the default scenario -
     *  this can be omitted.
     * @param {Object} value The data object to store.
     * @param {Function} [onSuccess] A callback that is called if insertion
     *  was successful.
     * @param {Function} [onError] A callback that is called if insertion
     *  failed.
     * @returns {IDBTransaction} The transaction used for this operation.
     * @example
        // Storing an object, using inline keys (the default scenario):
        var myCustomer = {
          customerid: 2346223,
          lastname: 'Doe',
          firstname: 'John'
        };
        myCustomerStore.put(myCustomer, mySuccessHandler, myErrorHandler);
        // Note that passing success- and error-handlers is optional.
     * @example
        // Storing an object, using out-of-line keys:
       var myCustomer = {
         lastname: 'Doe',
         firstname: 'John'
       };
       myCustomerStore.put(2346223, myCustomer, mySuccessHandler, myErrorHandler);
      // Note that passing success- and error-handlers is optional.
     */
    put: function (key, value, onSuccess, onError) {
      if (this.keyPath !== null) {
        onError = onSuccess;
        onSuccess = value;
        value = key;
      }
      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);

      var hasSuccess = false,
          result = null,
          putRequest;

      var putTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);
      putTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      putTransaction.onabort = onError;
      putTransaction.onerror = onError;

      if (this.keyPath !== null) { // in-line keys
        this._addIdPropertyIfNeeded(value);
        putRequest = putTransaction.objectStore(this.storeName).put(value);
      } else { // out-of-line keys
        putRequest = putTransaction.objectStore(this.storeName).put(value, key);
      }
      putRequest.onsuccess = function (event) {
        hasSuccess = true;
        result = event.target.result;
      };
      putRequest.onerror = onError;

      return putTransaction;
    },

    /**
     * Retrieves an object from the store. If no entry exists with the given id,
     * the success handler will be called with null as first and only argument.
     *
     * @param {*} key The id of the object to fetch.
     * @param {Function} [onSuccess] A callback that is called if fetching
     *  was successful. Will receive the object as only argument.
     * @param {Function} [onError] A callback that will be called if an error
     *  occurred during the operation.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    get: function (key, onSuccess, onError) {
      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);

      var hasSuccess = false,
          result = null;

      var getTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);
      getTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      getTransaction.onabort = onError;
      getTransaction.onerror = onError;
      var getRequest = getTransaction.objectStore(this.storeName).get(key);
      getRequest.onsuccess = function (event) {
        hasSuccess = true;
        result = event.target.result;
      };
      getRequest.onerror = onError;

      return getTransaction;
    },

    /**
     * Removes an object from the store.
     *
     * @param {*} key The id of the object to remove.
     * @param {Function} [onSuccess] A callback that is called if the removal
     *  was successful.
     * @param {Function} [onError] A callback that will be called if an error
     *  occurred during the operation.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    remove: function (key, onSuccess, onError) {
      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);

      var hasSuccess = false,
          result = null;

      var removeTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);
      removeTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      removeTransaction.onabort = onError;
      removeTransaction.onerror = onError;

      var deleteRequest = removeTransaction.objectStore(this.storeName)['delete'](key);
      deleteRequest.onsuccess = function (event) {
        hasSuccess = true;
        result = event.target.result;
      };
      deleteRequest.onerror = onError;

      return removeTransaction;
    },

    /**
     * Runs a batch of put and/or remove operations on the store.
     *
     * @param {Array} dataArray An array of objects containing the operation to run
     *  and the data object (for put operations).
     * @param {Function} [onSuccess] A callback that is called if all operations
     *  were successful.
     * @param {Function} [onError] A callback that is called if an error
     *  occurred during one of the operations.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    batch: function (dataArray, onSuccess, onError) {
      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);

      if(Object.prototype.toString.call(dataArray) != '[object Array]'){
        onError(new Error('dataArray argument must be of type Array.'));
      } else if (dataArray.length === 0) {
        return onSuccess(true);
      }
      var batchTransaction = this.db.transaction([this.storeName] , this.consts.READ_WRITE);
      batchTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(hasSuccess);
      };
      batchTransaction.onabort = onError;
      batchTransaction.onerror = onError;

      var count = dataArray.length;
      var called = false;
      var hasSuccess = false;

      var onItemSuccess = function () {
        count--;
        if (count === 0 && !called) {
          called = true;
          hasSuccess = true;
        }
      };

      dataArray.forEach(function (operation) {
        var type = operation.type;
        var key = operation.key;
        var value = operation.value;

        var onItemError = function (err) {
          batchTransaction.abort();
          if (!called) {
            called = true;
            onError(err, type, key);
          }
        };

        if (type == 'remove') {
          var deleteRequest = batchTransaction.objectStore(this.storeName)['delete'](key);
          deleteRequest.onsuccess = onItemSuccess;
          deleteRequest.onerror = onItemError;
        } else if (type == 'put') {
          var putRequest;
          if (this.keyPath !== null) { // in-line keys
            this._addIdPropertyIfNeeded(value);
            putRequest = batchTransaction.objectStore(this.storeName).put(value);
          } else { // out-of-line keys
            putRequest = batchTransaction.objectStore(this.storeName).put(value, key);
          }
          putRequest.onsuccess = onItemSuccess;
          putRequest.onerror = onItemError;
        }
      }, this);

      return batchTransaction;
    },

    /**
     * Takes an array of objects and stores them in a single transaction.
     *
     * @param {Array} dataArray An array of objects to store
     * @param {Function} [onSuccess] A callback that is called if all operations
     *  were successful.
     * @param {Function} [onError] A callback that is called if an error
     *  occurred during one of the operations.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    putBatch: function (dataArray, onSuccess, onError) {
      var batchData = dataArray.map(function(item){
        return { type: 'put', value: item };
      });

      return this.batch(batchData, onSuccess, onError);
    },

    /**
     * Like putBatch, takes an array of objects and stores them in a single
     * transaction, but allows processing of the result values.  Returns the
     * processed records containing the key for newly created records to the
     * onSuccess calllback instead of only returning true or false for success.
     * In addition, added the option for the caller to specify a key field that
     * should be set to the newly created key.
     *
     * @param {Array} dataArray An array of objects to store
     * @param {Object} [options] An object containing optional options
     * @param {String} [options.keyField=this.keyPath] Specifies a field in the record to update
     *  with the auto-incrementing key. Defaults to the store's keyPath.
     * @param {Function} [onSuccess] A callback that is called if all operations
     *  were successful.
     * @param {Function} [onError] A callback that is called if an error
     *  occurred during one of the operations.
     * @returns {IDBTransaction} The transaction used for this operation.
     *
     */
    upsertBatch: function (dataArray, options, onSuccess, onError) {
      // handle `dataArray, onSuccess, onError` signature
      if (typeof options == 'function') {
        onSuccess = options;
        onError = onSuccess;
        options = {};
      }

      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);
      options || (options = {});

      if (Object.prototype.toString.call(dataArray) != '[object Array]') {
        onError(new Error('dataArray argument must be of type Array.'));
      }
      var batchTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);
      batchTransaction.oncomplete = function () {
        if (hasSuccess) {
          onSuccess(dataArray);
        } else {
          onError(false);
        }
      };
      batchTransaction.onabort = onError;
      batchTransaction.onerror = onError;

      var keyField = options.keyField || this.keyPath;
      var count = dataArray.length;
      var called = false;
      var hasSuccess = false;
      var index = 0; // assume success callbacks are executed in order

      var onItemSuccess = function (event) {
        var record = dataArray[index++];
        record[keyField] = event.target.result;

        count--;
        if (count === 0 && !called) {
          called = true;
          hasSuccess = true;
        }
      };

      dataArray.forEach(function (record) {
        var key = record.key;

        var onItemError = function (err) {
          batchTransaction.abort();
          if (!called) {
            called = true;
            onError(err);
          }
        };

        var putRequest;
        if (this.keyPath !== null) { // in-line keys
          this._addIdPropertyIfNeeded(record);
          putRequest = batchTransaction.objectStore(this.storeName).put(record);
        } else { // out-of-line keys
          putRequest = batchTransaction.objectStore(this.storeName).put(record, key);
        }
        putRequest.onsuccess = onItemSuccess;
        putRequest.onerror = onItemError;
      }, this);

      return batchTransaction;
    },

    /**
     * Takes an array of keys and removes matching objects in a single
     * transaction.
     *
     * @param {Array} keyArray An array of keys to remove
     * @param {Function} [onSuccess] A callback that is called if all operations
     *  were successful.
     * @param {Function} [onError] A callback that is called if an error
     *  occurred during one of the operations.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    removeBatch: function (keyArray, onSuccess, onError) {
      var batchData = keyArray.map(function(key){
        return { type: 'remove', key: key };
      });

      return this.batch(batchData, onSuccess, onError);
    },

    /**
     * Takes an array of keys and fetches matching objects
     *
     * @param {Array} keyArray An array of keys identifying the objects to fetch
     * @param {Function} [onSuccess] A callback that is called if all operations
     *  were successful.
     * @param {Function} [onError] A callback that is called if an error
     *  occurred during one of the operations.
     * @param {String} [arrayType='sparse'] The type of array to pass to the
     *  success handler. May be one of 'sparse', 'dense' or 'skip'. Defaults to
     *  'sparse'. This parameter specifies how to handle the situation if a get
     *  operation did not throw an error, but there was no matching object in
     *  the database. In most cases, 'sparse' provides the most desired
     *  behavior. See the examples for details.
     * @returns {IDBTransaction} The transaction used for this operation.
     * @example
     // given that there are two objects in the database with the keypath
     // values 1 and 2, and the call looks like this:
     myStore.getBatch([1, 5, 2], onError, function (data) { … }, arrayType);

     // this is what the `data` array will be like:

     // arrayType == 'sparse':
     // data is a sparse array containing two entries and having a length of 3:
       [Object, 2: Object]
         0: Object
         2: Object
         length: 3
         __proto__: Array[0]
     // calling forEach on data will result in the callback being called two
     // times, with the index parameter matching the index of the key in the
     // keyArray.

     // arrayType == 'dense':
     // data is a dense array containing three entries and having a length of 3,
     // where data[1] is of type undefined:
       [Object, undefined, Object]
         0: Object
         1: undefined
         2: Object
         length: 3
         __proto__: Array[0]
     // calling forEach on data will result in the callback being called three
     // times, with the index parameter matching the index of the key in the
     // keyArray, but the second call will have undefined as first argument.

     // arrayType == 'skip':
     // data is a dense array containing two entries and having a length of 2:
       [Object, Object]
         0: Object
         1: Object
         length: 2
         __proto__: Array[0]
     // calling forEach on data will result in the callback being called two
     // times, with the index parameter not matching the index of the key in the
     // keyArray.
     */
    getBatch: function (keyArray, onSuccess, onError, arrayType) {
      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);
      arrayType || (arrayType = 'sparse');

      if (Object.prototype.toString.call(keyArray) != '[object Array]'){
        onError(new Error('keyArray argument must be of type Array.'));
      } else if (keyArray.length === 0) {
        return onSuccess([]);
      }
      var batchTransaction = this.db.transaction([this.storeName] , this.consts.READ_ONLY);
      batchTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      batchTransaction.onabort = onError;
      batchTransaction.onerror = onError;

      var data = [];
      var count = keyArray.length;
      var called = false;
      var hasSuccess = false;
      var result = null;

      var onItemSuccess = function (event) {
        if (event.target.result || arrayType == 'dense') {
          data.push(event.target.result);
        } else if (arrayType == 'sparse') {
          data.length++;
        }
        count--;
        if (count === 0) {
          called = true;
          hasSuccess = true;
          result = data;
        }
      };

      keyArray.forEach(function (key) {

        var onItemError = function (err) {
          called = true;
          result = err;
          onError(err);
          batchTransaction.abort();
        };

        var getRequest = batchTransaction.objectStore(this.storeName).get(key);
        getRequest.onsuccess = onItemSuccess;
        getRequest.onerror = onItemError;

      }, this);

      return batchTransaction;
    },

    /**
     * Fetches all entries in the store.
     *
     * @param {Function} [onSuccess] A callback that is called if the operation
     *  was successful. Will receive an array of objects.
     * @param {Function} [onError] A callback that will be called if an error
     *  occurred during the operation.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    getAll: function (onSuccess, onError) {
      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);
      var getAllTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);
      var store = getAllTransaction.objectStore(this.storeName);
      if (store.getAll) {
        this._getAllNative(getAllTransaction, store, onSuccess, onError);
      } else {
        this._getAllCursor(getAllTransaction, store, onSuccess, onError);
      }

      return getAllTransaction;
    },

    /**
     * Implements getAll for IDB implementations that have a non-standard
     * getAll() method.
     *
     * @param {Object} getAllTransaction An open READ transaction.
     * @param {Object} store A reference to the store.
     * @param {Function} onSuccess A callback that will be called if the
     *  operation was successful.
     * @param {Function} onError A callback that will be called if an
     *  error occurred during the operation.
     * @private
     */
    _getAllNative: function (getAllTransaction, store, onSuccess, onError) {
      var hasSuccess = false,
          result = null;

      getAllTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      getAllTransaction.onabort = onError;
      getAllTransaction.onerror = onError;

      var getAllRequest = store.getAll();
      getAllRequest.onsuccess = function (event) {
        hasSuccess = true;
        result = event.target.result;
      };
      getAllRequest.onerror = onError;
    },

    /**
     * Implements getAll for IDB implementations that do not have a getAll()
     * method.
     *
     * @param {Object} getAllTransaction An open READ transaction.
     * @param {Object} store A reference to the store.
     * @param {Function} onSuccess A callback that will be called if the
     *  operation was successful.
     * @param {Function} onError A callback that will be called if an
     *  error occurred during the operation.
     * @private
     */
    _getAllCursor: function (getAllTransaction, store, onSuccess, onError) {
      var all = [],
          hasSuccess = false,
          result = null;

      getAllTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      getAllTransaction.onabort = onError;
      getAllTransaction.onerror = onError;

      var cursorRequest = store.openCursor();
      cursorRequest.onsuccess = function (event) {
        var cursor = event.target.result;
        if (cursor) {
          all.push(cursor.value);
          cursor['continue']();
        }
        else {
          hasSuccess = true;
          result = all;
        }
      };
      cursorRequest.onError = onError;
    },

    /**
     * Clears the store, i.e. deletes all entries in the store.
     *
     * @param {Function} [onSuccess] A callback that will be called if the
     *  operation was successful.
     * @param {Function} [onError] A callback that will be called if an
     *  error occurred during the operation.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    clear: function (onSuccess, onError) {
      onError || (onError = defaultErrorHandler);
      onSuccess || (onSuccess = defaultSuccessHandler);

      var hasSuccess = false,
          result = null;

      var clearTransaction = this.db.transaction([this.storeName], this.consts.READ_WRITE);
      clearTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      clearTransaction.onabort = onError;
      clearTransaction.onerror = onError;

      var clearRequest = clearTransaction.objectStore(this.storeName).clear();
      clearRequest.onsuccess = function (event) {
        hasSuccess = true;
        result = event.target.result;
      };
      clearRequest.onerror = onError;

      return clearTransaction;
    },

    /**
     * Checks if an id property needs to present on a object and adds one if
     * necessary.
     *
     * @param {Object} dataObj The data object that is about to be stored
     * @private
     */
    _addIdPropertyIfNeeded: function (dataObj) {
      if (typeof dataObj[this.keyPath] == 'undefined') {
        dataObj[this.keyPath] = this._insertIdCount++ + Date.now();
      }
    },

    /************
     * indexing *
     ************/

    /**
     * Returns a DOMStringList of index names of the store.
     *
     * @return {DOMStringList} The list of index names
     */
    getIndexList: function () {
      return this.store.indexNames;
    },

    /**
     * Checks if an index with the given name exists in the store.
     *
     * @param {String} indexName The name of the index to look for
     * @return {Boolean} Whether the store contains an index with the given name
     */
    hasIndex: function (indexName) {
      return this.store.indexNames.contains(indexName);
    },

    /**
     * Normalizes an object containing index data and assures that all
     * properties are set.
     *
     * @param {Object} indexData The index data object to normalize
     * @param {String} indexData.name The name of the index
     * @param {String} [indexData.keyPath] The key path of the index
     * @param {Boolean} [indexData.unique] Whether the index is unique
     * @param {Boolean} [indexData.multiEntry] Whether the index is multi entry
     */
    normalizeIndexData: function (indexData) {
      indexData.keyPath = indexData.keyPath || indexData.name;
      indexData.unique = !!indexData.unique;
      indexData.multiEntry = !!indexData.multiEntry;
    },

    /**
     * Checks if an actual index complies with an expected index.
     *
     * @param {Object} actual The actual index found in the store
     * @param {Object} expected An Object describing an expected index
     * @return {Boolean} Whether both index definitions are identical
     */
    indexComplies: function (actual, expected) {
      var complies = ['keyPath', 'unique', 'multiEntry'].every(function (key) {
        // IE10 returns undefined for no multiEntry
        if (key == 'multiEntry' && actual[key] === undefined && expected[key] === false) {
          return true;
        }
        // Compound keys
        if (key == 'keyPath' && Object.prototype.toString.call(expected[key]) == '[object Array]') {
          var exp = expected.keyPath;
          var act = actual.keyPath;

          // IE10 can't handle keyPath sequences and stores them as a string.
          // The index will be unusable there, but let's still return true if
          // the keyPath sequence matches.
          if (typeof act == 'string') {
            return exp.toString() == act;
          }

          // Chrome/Opera stores keyPath squences as DOMStringList, Firefox
          // as Array
          if ( ! (typeof act.contains == 'function' || typeof act.indexOf == 'function') ) {
            return false;
          }

          if (act.length !== exp.length) {
            return false;
          }

          for (var i = 0, m = exp.length; i<m; i++) {
            if ( ! ( (act.contains && act.contains(exp[i])) || act.indexOf(exp[i] !== -1) )) {
              return false;
            }
          }
          return true;
        }
        return expected[key] == actual[key];
      });
      return complies;
    },

    /**********
     * cursor *
     **********/

    /**
     * Iterates over the store using the given options and calling onItem
     * for each entry matching the options.
     *
     * @param {Function} onItem A callback to be called for each match
     * @param {Object} [options] An object defining specific options
     * @param {Object} [options.index=null] An IDBIndex to operate on
     * @param {String} [options.order=ASC] The order in which to provide the
     *  results, can be 'DESC' or 'ASC'
     * @param {Boolean} [options.autoContinue=true] Whether to automatically
     *  iterate the cursor to the next result
     * @param {Boolean} [options.filterDuplicates=false] Whether to exclude
     *  duplicate matches
     * @param {Object} [options.keyRange=null] An IDBKeyRange to use
     * @param {Boolean} [options.writeAccess=false] Whether grant write access
     *  to the store in the onItem callback
     * @param {Function} [options.onEnd=null] A callback to be called after
     *  iteration has ended
     * @param {Function} [options.onError=throw] A callback to be called
     *  if an error occurred during the operation.
     * @param {Number} [options.limit=Infinity] Limit the number of returned
     *  results to this number
     * @param {Number} [options.offset=0] Skip the provided number of results
     *  in the resultset
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    iterate: function (onItem, options) {
      options = mixin({
        index: null,
        order: 'ASC',
        autoContinue: true,
        filterDuplicates: false,
        keyRange: null,
        writeAccess: false,
        onEnd: null,
        onError: defaultErrorHandler,
        limit: Infinity,
        offset: 0
      }, options || {});

      var directionType = options.order.toLowerCase() == 'desc' ? 'PREV' : 'NEXT';
      if (options.filterDuplicates) {
        directionType += '_NO_DUPLICATE';
      }

      var hasSuccess = false;
      var cursorTransaction = this.db.transaction([this.storeName], this.consts[options.writeAccess ? 'READ_WRITE' : 'READ_ONLY']);
      var cursorTarget = cursorTransaction.objectStore(this.storeName);
      if (options.index) {
        cursorTarget = cursorTarget.index(options.index);
      }
      var recordCount = 0;

      cursorTransaction.oncomplete = function () {
        if (!hasSuccess) {
          options.onError(null);
          return;
        }
        if (options.onEnd) {
          options.onEnd();
        } else {
          onItem(null);
        }
      };
      cursorTransaction.onabort = options.onError;
      cursorTransaction.onerror = options.onError;

      var cursorRequest = cursorTarget.openCursor(options.keyRange, this.consts[directionType]);
      cursorRequest.onerror = options.onError;
      cursorRequest.onsuccess = function (event) {
        var cursor = event.target.result;
        if (cursor) {
          if (options.offset) {
            cursor.advance(options.offset);
            options.offset = 0;
          } else {
            onItem(cursor.value, cursor, cursorTransaction);
            recordCount++;
            if (options.autoContinue) {
              if (recordCount + options.offset < options.limit) {
                cursor['continue']();
              } else {
                hasSuccess = true;
              }
            }
          }
        } else {
          hasSuccess = true;
        }
      };

      return cursorTransaction;
    },

    /**
     * Runs a query against the store and passes an array containing matched
     * objects to the success handler.
     *
     * @param {Function} onSuccess A callback to be called when the operation
     *  was successful.
     * @param {Object} [options] An object defining specific options
     * @param {Object} [options.index=null] An IDBIndex to operate on
     * @param {String} [options.order=ASC] The order in which to provide the
     *  results, can be 'DESC' or 'ASC'
     * @param {Boolean} [options.filterDuplicates=false] Whether to exclude
     *  duplicate matches
     * @param {Object} [options.keyRange=null] An IDBKeyRange to use
     * @param {Function} [options.onError=throw] A callback to be called
     *  if an error occurred during the operation.
     * @param {Number} [options.limit=Infinity] Limit the number of returned
     *  results to this number
     * @param {Number} [options.offset=0] Skip the provided number of results
     *  in the resultset
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    query: function (onSuccess, options) {
      var result = [];
      options = options || {};
      options.autoContinue = true;
      options.writeAccess = false;
      options.onEnd = function () {
        onSuccess(result);
      };
      return this.iterate(function (item) {
        result.push(item);
      }, options);
    },

    /**
     *
     * Runs a query against the store, but only returns the number of matches
     * instead of the matches itself.
     *
     * @param {Function} onSuccess A callback to be called if the opration
     *  was successful.
     * @param {Object} [options] An object defining specific options
     * @param {Object} [options.index=null] An IDBIndex to operate on
     * @param {Object} [options.keyRange=null] An IDBKeyRange to use
     * @param {Function} [options.onError=throw] A callback to be called if an error
     *  occurred during the operation.
     * @returns {IDBTransaction} The transaction used for this operation.
     */
    count: function (onSuccess, options) {

      options = mixin({
        index: null,
        keyRange: null
      }, options || {});

      var onError = options.onError || defaultErrorHandler;

      var hasSuccess = false,
          result = null;

      var cursorTransaction = this.db.transaction([this.storeName], this.consts.READ_ONLY);
      cursorTransaction.oncomplete = function () {
        var callback = hasSuccess ? onSuccess : onError;
        callback(result);
      };
      cursorTransaction.onabort = onError;
      cursorTransaction.onerror = onError;

      var cursorTarget = cursorTransaction.objectStore(this.storeName);
      if (options.index) {
        cursorTarget = cursorTarget.index(options.index);
      }
      var countRequest = cursorTarget.count(options.keyRange);
      countRequest.onsuccess = function (evt) {
        hasSuccess = true;
        result = evt.target.result;
      };
      countRequest.onError = onError;

      return cursorTransaction;
    },

    /**************/
    /* key ranges */
    /**************/

    /**
     * Creates a key range using specified options. This key range can be
     * handed over to the count() and iterate() methods.
     *
     * Note: You must provide at least one or both of "lower" or "upper" value.
     *
     * @param {Object} options The options for the key range to create
     * @param {*} [options.lower] The lower bound
     * @param {Boolean} [options.excludeLower] Whether to exclude the lower
     *  bound passed in options.lower from the key range
     * @param {*} [options.upper] The upper bound
     * @param {Boolean} [options.excludeUpper] Whether to exclude the upper
     *  bound passed in options.upper from the key range
     * @param {*} [options.only] A single key value. Use this if you need a key
     *  range that only includes one value for a key. Providing this
     *  property invalidates all other properties.
     * @return {Object} The IDBKeyRange representing the specified options
     */
    makeKeyRange: function(options){
      /*jshint onecase:true */
      var keyRange,
          hasLower = typeof options.lower != 'undefined',
          hasUpper = typeof options.upper != 'undefined',
          isOnly = typeof options.only != 'undefined';

      switch(true){
        case isOnly:
          keyRange = this.keyRange.only(options.only);
          break;
        case hasLower && hasUpper:
          keyRange = this.keyRange.bound(options.lower, options.upper, options.excludeLower, options.excludeUpper);
          break;
        case hasLower:
          keyRange = this.keyRange.lowerBound(options.lower, options.excludeLower);
          break;
        case hasUpper:
          keyRange = this.keyRange.upperBound(options.upper, options.excludeUpper);
          break;
        default:
          throw new Error('Cannot create KeyRange. Provide one or both of "lower" or "upper" value, or an "only" value.');
      }

      return keyRange;

    }

  };

  /** helpers **/
  var empty = {};
  var mixin = function (target, source) {
    var name, s;
    for (name in source) {
      s = source[name];
      if (s !== empty[name] && s !== target[name]) {
        target[name] = s;
      }
    }
    return target;
  };

  IDBStore.version = IDBStore.prototype.version;

  return IDBStore;

}, this);

},{}],9:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],10:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],11:[function(require,module,exports){

/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};

},{}],12:[function(require,module,exports){
/**
 * Determine if an object is Buffer
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install is-buffer`
 */

module.exports = function (obj) {
  return !!(obj != null &&
    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
      (obj.constructor &&
      typeof obj.constructor.isBuffer === 'function' &&
      obj.constructor.isBuffer(obj))
    ))
}

},{}],13:[function(require,module,exports){
var Buffer = require('buffer').Buffer;

module.exports = isBuffer;

function isBuffer (o) {
  return Buffer.isBuffer(o)
    || /\[object (.+Array|Array.+)\]/.test(Object.prototype.toString.call(o));
}

},{"buffer":7}],14:[function(require,module,exports){
(function (Buffer){
module.exports = Level

var IDB = require('idb-wrapper')
var AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN
var util = require('util')
var Iterator = require('./iterator')
var isBuffer = require('isbuffer')
var xtend = require('xtend')
var toBuffer = require('typedarray-to-buffer')

function Level(location) {
  if (!(this instanceof Level)) return new Level(location)
  if (!location) throw new Error("constructor requires at least a location argument")
  this.IDBOptions = {}
  this.location = location
}

util.inherits(Level, AbstractLevelDOWN)

Level.prototype._open = function(options, callback) {
  var self = this

  var idbOpts = {
    storeName: this.location,
    autoIncrement: false,
    keyPath: null,
    onStoreReady: function () {
      callback && callback(null, self.idb)
    },
    onError: function(err) {
      callback && callback(err)
    }
  }

  xtend(idbOpts, options)
  this.IDBOptions = idbOpts
  this.idb = new IDB(idbOpts)
}

Level.prototype._get = function (key, options, callback) {
  this.idb.get(key, function (value) {
    if (value === undefined) {
      // 'NotFound' error, consistent with LevelDOWN API
      return callback(new Error('NotFound'))
    }
    // by default return buffers, unless explicitly told not to
    var asBuffer = true
    if (options.asBuffer === false) asBuffer = false
    if (options.raw) asBuffer = false
    if (asBuffer) {
      if (value instanceof Uint8Array) value = toBuffer(value)
      else value = new Buffer(String(value))
    }
    return callback(null, value, key)
  }, callback)
}

Level.prototype._del = function(id, options, callback) {
  this.idb.remove(id, callback, callback)
}

Level.prototype._put = function (key, value, options, callback) {
  if (value instanceof ArrayBuffer) {
    value = toBuffer(new Uint8Array(value))
  }
  var obj = this.convertEncoding(key, value, options)
  if (Buffer.isBuffer(obj.value)) {
    obj.value = new Uint8Array(value.toArrayBuffer())
  }
  this.idb.put(obj.key, obj.value, function() { callback() }, callback)
}

Level.prototype.convertEncoding = function(key, value, options) {
  if (options.raw) return {key: key, value: value}
  if (value) {
    var stringed = value.toString()
    if (stringed === 'NaN') value = 'NaN'
  }
  var valEnc = options.valueEncoding
  var obj = {key: key, value: value}
  if (value && (!valEnc || valEnc !== 'binary')) {
    if (typeof obj.value !== 'object') {
      obj.value = stringed
    }
  }
  return obj
}

Level.prototype.iterator = function (options) {
  if (typeof options !== 'object') options = {}
  return new Iterator(this.idb, options)
}

Level.prototype._batch = function (array, options, callback) {
  var op
  var i
  var k
  var copiedOp
  var currentOp
  var modified = []

  if (array.length === 0) return setTimeout(callback, 0)

  for (i = 0; i < array.length; i++) {
    copiedOp = {}
    currentOp = array[i]
    modified[i] = copiedOp

    var converted = this.convertEncoding(currentOp.key, currentOp.value, options)
    currentOp.key = converted.key
    currentOp.value = converted.value

    for (k in currentOp) {
      if (k === 'type' && currentOp[k] == 'del') {
        copiedOp[k] = 'remove'
      } else {
        copiedOp[k] = currentOp[k]
      }
    }
  }

  return this.idb.batch(modified, function(){ callback() }, callback)
}

Level.prototype._close = function (callback) {
  this.idb.db.close()
  callback()
}

Level.prototype._approximateSize = function (start, end, callback) {
  var err = new Error('Not implemented')
  if (callback)
    return callback(err)

  throw err
}

Level.prototype._isBuffer = function (obj) {
  return Buffer.isBuffer(obj)
}

Level.destroy = function (db, callback) {
  if (typeof db === 'object') {
    var prefix = db.IDBOptions.storePrefix || 'IDBWrapper-'
    var dbname = db.location
  } else {
    var prefix = 'IDBWrapper-'
    var dbname = db
  }
  var request = indexedDB.deleteDatabase(prefix + dbname)
  request.onsuccess = function() {
    callback()
  }
  request.onerror = function(err) {
    callback(err)
  }
}

var checkKeyValue = Level.prototype._checkKeyValue = function (obj, type) {
  if (obj === null || obj === undefined)
    return new Error(type + ' cannot be `null` or `undefined`')
  if (obj === null || obj === undefined)
    return new Error(type + ' cannot be `null` or `undefined`')
  if (isBuffer(obj) && obj.byteLength === 0)
    return new Error(type + ' cannot be an empty ArrayBuffer')
  if (String(obj) === '')
    return new Error(type + ' cannot be an empty String')
  if (obj.length === 0)
    return new Error(type + ' cannot be an empty Array')
}

}).call(this,require("buffer").Buffer)
},{"./iterator":15,"abstract-leveldown":4,"buffer":7,"idb-wrapper":8,"isbuffer":13,"typedarray-to-buffer":24,"util":26,"xtend":21}],15:[function(require,module,exports){
var util = require('util')
var AbstractIterator  = require('abstract-leveldown').AbstractIterator
var ltgt = require('ltgt')

module.exports = Iterator

function Iterator (db, options) {
  if (!options) options = {}
  this.options = options
  AbstractIterator.call(this, db)
  this._order = options.reverse ? 'DESC': 'ASC'
  this._limit = options.limit
  this._count = 0
  this._done  = false
  var lower = ltgt.lowerBound(options)
  var upper = ltgt.upperBound(options)
  try {
    this._keyRange = lower || upper ? this.db.makeKeyRange({
      lower: lower,
      upper: upper,
      excludeLower: ltgt.lowerBoundExclusive(options),
      excludeUpper: ltgt.upperBoundExclusive(options)
    }) : null
  } catch (e) {
    // The lower key is greater than the upper key.
    // IndexedDB throws an error, but we'll just return 0 results.
    this._keyRangeError = true
  }
  this.callback = null
}

util.inherits(Iterator, AbstractIterator)

Iterator.prototype.createIterator = function() {
  var self = this

  self.iterator = self.db.iterate(function () {
    self.onItem.apply(self, arguments)
  }, {
    keyRange: self._keyRange,
    autoContinue: false,
    order: self._order,
    onError: function(err) { console.log('horrible error', err) },
  })
}

// TODO the limit implementation here just ignores all reads after limit has been reached
// it should cancel the iterator instead but I don't know how
Iterator.prototype.onItem = function (value, cursor, cursorTransaction) {
  if (!cursor && this.callback) {
    this.callback()
    this.callback = false
    return
  }
  var shouldCall = true

  if (!!this._limit && this._limit > 0 && this._count++ >= this._limit)
    shouldCall = false

  if (shouldCall) this.callback(false, cursor.key, cursor.value)
  if (cursor) cursor['continue']()
}

Iterator.prototype._next = function (callback) {
  if (!callback) return new Error('next() requires a callback argument')
  if (this._keyRangeError) return callback()
  if (!this._started) {
    this.createIterator()
    this._started = true
  }
  this.callback = callback
}

},{"abstract-leveldown":4,"ltgt":22,"util":26}],16:[function(require,module,exports){
var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

var isFunction = function (fn) {
	var isFunc = (typeof fn === 'function' && !(fn instanceof RegExp)) || toString.call(fn) === '[object Function]';
	if (!isFunc && typeof window !== 'undefined') {
		isFunc = fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt;
	}
	return isFunc;
};

module.exports = function forEach(obj, fn) {
	if (!isFunction(fn)) {
		throw new TypeError('iterator must be a function');
	}
	var i, k,
		isString = typeof obj === 'string',
		l = obj.length,
		context = arguments.length > 2 ? arguments[2] : null;
	if (l === +l) {
		for (i = 0; i < l; i++) {
			if (context === null) {
				fn(isString ? obj.charAt(i) : obj[i], i, obj);
			} else {
				fn.call(context, isString ? obj.charAt(i) : obj[i], i, obj);
			}
		}
	} else {
		for (k in obj) {
			if (hasOwn.call(obj, k)) {
				if (context === null) {
					fn(obj[k], k, obj);
				} else {
					fn.call(context, obj[k], k, obj);
				}
			}
		}
	}
};


},{}],17:[function(require,module,exports){
module.exports = Object.keys || require('./shim');


},{"./shim":19}],18:[function(require,module,exports){
var toString = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toString.call(value);
	var isArguments = str === '[object Arguments]';
	if (!isArguments) {
		isArguments = str !== '[object Array]'
			&& value !== null
			&& typeof value === 'object'
			&& typeof value.length === 'number'
			&& value.length >= 0
			&& toString.call(value.callee) === '[object Function]';
	}
	return isArguments;
};


},{}],19:[function(require,module,exports){
(function () {
	"use strict";

	// modified from https://github.com/kriskowal/es5-shim
	var has = Object.prototype.hasOwnProperty,
		toString = Object.prototype.toString,
		forEach = require('./foreach'),
		isArgs = require('./isArguments'),
		hasDontEnumBug = !({'toString': null}).propertyIsEnumerable('toString'),
		hasProtoEnumBug = (function () {}).propertyIsEnumerable('prototype'),
		dontEnums = [
			"toString",
			"toLocaleString",
			"valueOf",
			"hasOwnProperty",
			"isPrototypeOf",
			"propertyIsEnumerable",
			"constructor"
		],
		keysShim;

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object',
			isFunction = toString.call(object) === '[object Function]',
			isArguments = isArgs(object),
			theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError("Object.keys called on a non-object");
		}

		if (isArguments) {
			forEach(object, function (value) {
				theKeys.push(value);
			});
		} else {
			var name,
				skipProto = hasProtoEnumBug && isFunction;

			for (name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(name);
				}
			}
		}

		if (hasDontEnumBug) {
			var ctor = object.constructor,
				skipConstructor = ctor && ctor.prototype === object;

			forEach(dontEnums, function (dontEnum) {
				if (!(skipConstructor && dontEnum === 'constructor') && has.call(object, dontEnum)) {
					theKeys.push(dontEnum);
				}
			});
		}
		return theKeys;
	};

	module.exports = keysShim;
}());


},{"./foreach":16,"./isArguments":18}],20:[function(require,module,exports){
module.exports = hasKeys

function hasKeys(source) {
    return source !== null &&
        (typeof source === "object" ||
        typeof source === "function")
}

},{}],21:[function(require,module,exports){
var Keys = require("object-keys")
var hasKeys = require("./has-keys")

module.exports = extend

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        if (!hasKeys(source)) {
            continue
        }

        var keys = Keys(source)

        for (var j = 0; j < keys.length; j++) {
            var name = keys[j]
            target[name] = source[name]
        }
    }

    return target
}

},{"./has-keys":20,"object-keys":17}],22:[function(require,module,exports){
(function (Buffer){

exports.compare = function (a, b) {

  if(Buffer.isBuffer(a)) {
    var l = Math.min(a.length, b.length)
    for(var i = 0; i < l; i++) {
      var cmp = a[i] - b[i]
      if(cmp) return cmp
    }
    return a.length - b.length
  }

  return a < b ? -1 : a > b ? 1 : 0
}

function has(obj, key) {
  return Object.hasOwnProperty.call(obj, key)
}

// to be compatible with the current abstract-leveldown tests
// nullish or empty strings.
// I could use !!val but I want to permit numbers and booleans,
// if possible.

function isDef (val) {
  return val !== undefined && val !== ''
}

function has (range, name) {
  return Object.hasOwnProperty.call(range, name)
}

function hasKey(range, name) {
  return Object.hasOwnProperty.call(range, name) && name
}

var lowerBoundKey = exports.lowerBoundKey = function (range) {
    return (
       hasKey(range, 'gt')
    || hasKey(range, 'gte')
    || hasKey(range, 'min')
    || (range.reverse ? hasKey(range, 'end') : hasKey(range, 'start'))
    || undefined
    )
}

var lowerBound = exports.lowerBound = function (range) {
  var k = lowerBoundKey(range)
  return k && range[k]
}

exports.lowerBoundInclusive = function (range) {
  return has(range, 'gt') ? false : true
}

exports.upperBoundInclusive =
  function (range) {
    return has(range, 'lt') || !range.minEx ? false : true
  }

var lowerBoundExclusive = exports.lowerBoundExclusive =
  function (range) {
    return has(range, 'gt') || range.minEx ? true : false
  }

var upperBoundExclusive = exports.upperBoundExclusive =
  function (range) {
    return has(range, 'lt') ? true : false
  }

var upperBoundKey = exports.upperBoundKey = function (range) {
    return (
       hasKey(range, 'lt')
    || hasKey(range, 'lte')
    || hasKey(range, 'max')
    || (range.reverse ? hasKey(range, 'start') : hasKey(range, 'end'))
    || undefined
    )
}

var upperBound = exports.upperBound = function (range) {
  var k = upperBoundKey(range)
  return k && range[k]
}

function id (e) { return e }

exports.toLtgt = function (range, _range, map, lower, upper) {
  _range = _range || {}
  map = map || id
  var defaults = arguments.length > 3
  var lb = exports.lowerBoundKey(range)
  var ub = exports.upperBoundKey(range)
  if(lb) {
    if(lb === 'gt') _range.gt = map(range.gt, false)
    else            _range.gte = map(range[lb], false)
  }
  else if(defaults)
    _range.gte = map(lower, false)

  if(ub) {
    if(ub === 'lt') _range.lt = map(range.lt, true)
    else            _range.lte = map(range[ub], true)
  }
  else if(defaults)
    _range.lte = map(upper, true)

  if(range.reverse != null)
    _range.reverse = !!range.reverse

  //if range was used mutably
  //(in level-sublevel it's part of an options object
  //that has more properties on it.)
  if(has(_range, 'max'))   delete _range.max
  if(has(_range, 'min'))   delete _range.min
  if(has(_range, 'start')) delete _range.start
  if(has(_range, 'end'))   delete _range.end

  return _range
}

exports.contains = function (range, key, compare) {
  compare = compare || exports.compare

  var lb = lowerBound(range)
  if(isDef(lb)) {
    var cmp = compare(key, lb)
    if(cmp < 0 || (cmp === 0 && lowerBoundExclusive(range)))
      return false
  }

  var ub = upperBound(range)
  if(isDef(ub)) {
    var cmp = compare(key, ub)
    if(cmp > 0 || (cmp === 0) && upperBoundExclusive(range))
      return false
  }

  return true
}

exports.filter = function (range, compare) {
  return function (key) {
    return exports.contains(range, key, compare)
  }
}

}).call(this,{"isBuffer":require("../is-buffer/index.js")})
},{"../is-buffer/index.js":12}],23:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],24:[function(require,module,exports){
(function (Buffer){
/**
 * Convert a typed array to a Buffer without a copy
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install typedarray-to-buffer`
 */

module.exports = function (arr) {
  if (typeof Buffer._augment === 'function' && Buffer.TYPED_ARRAY_SUPPORT) {
    // If `Buffer` is from the `buffer` module and this browser supports typed arrays,
    // then augment it with all the `Buffer` methods.
    return Buffer._augment(arr)
  } else {
    // Otherwise, fallback to creating a `Buffer` with a copy.
    return new Buffer(arr)
  }
}

}).call(this,require("buffer").Buffer)
},{"buffer":7}],25:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],26:[function(require,module,exports){
(function (process,global){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  // Allow for deprecating things in the process of starting up.
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":25,"_process":23,"inherits":10}]},{},[1]);

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
window.Memdown = require( '../node_modules/memdown/memdown.js' );

},{"../node_modules/memdown/memdown.js":9}],2:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)
	var PLUS_URL_SAFE = '-'.charCodeAt(0)
	var SLASH_URL_SAFE = '_'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS ||
		    code === PLUS_URL_SAFE)
			return 62 // '+'
		if (code === SLASH ||
		    code === SLASH_URL_SAFE)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		// the number of equal signs (place holders)
		// if there are two placeholders, than the two characters before it
		// represent one byte
		// if there is only one, then the three characters before it represent 2 bytes
		// this is just a cheap hack to not do indexOf twice
		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		// base64 is 4/3 + up to two characters of the original data
		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		// if there are placeholders, only get up to the last complete 4 chars
		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		// go through the array every three bytes, we'll deal with trailing stuff later
		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		// pad the end with zeros, but make sure to not forget the extra bytes
		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	exports.toByteArray = b64ToByteArray
	exports.fromByteArray = uint8ToBase64
}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))

},{}],3:[function(require,module,exports){
(function (global){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('is-array')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192 // not used by this implementation

var rootParent = {}

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property
 *     on objects.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

function typedArraySupport () {
  function Bar () {}
  try {
    var arr = new Uint8Array(1)
    arr.foo = function () { return 42 }
    arr.constructor = Bar
    return arr.foo() === 42 && // typed array instances can be augmented
        arr.constructor === Bar && // constructor can be set
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

/**
 * Class: Buffer
 * =============
 *
 * The Buffer constructor returns instances of `Uint8Array` that are augmented
 * with function properties for all the node `Buffer` API functions. We use
 * `Uint8Array` so that square bracket notation works as expected -- it returns
 * a single octet.
 *
 * By augmenting the instances, we can avoid modifying the `Uint8Array`
 * prototype.
 */
function Buffer (arg) {
  if (!(this instanceof Buffer)) {
    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.
    if (arguments.length > 1) return new Buffer(arg, arguments[1])
    return new Buffer(arg)
  }

  this.length = 0
  this.parent = undefined

  // Common case.
  if (typeof arg === 'number') {
    return fromNumber(this, arg)
  }

  // Slightly less common case.
  if (typeof arg === 'string') {
    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')
  }

  // Unusual.
  return fromObject(this, arg)
}

function fromNumber (that, length) {
  that = allocate(that, length < 0 ? 0 : checked(length) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < length; i++) {
      that[i] = 0
    }
  }
  return that
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'

  // Assumption: byteLength() return value is always < kMaxLength.
  var length = byteLength(string, encoding) | 0
  that = allocate(that, length)

  that.write(string, encoding)
  return that
}

function fromObject (that, object) {
  if (Buffer.isBuffer(object)) return fromBuffer(that, object)

  if (isArray(object)) return fromArray(that, object)

  if (object == null) {
    throw new TypeError('must start with number, buffer, array or string')
  }

  if (typeof ArrayBuffer !== 'undefined') {
    if (object.buffer instanceof ArrayBuffer) {
      return fromTypedArray(that, object)
    }
    if (object instanceof ArrayBuffer) {
      return fromArrayBuffer(that, object)
    }
  }

  if (object.length) return fromArrayLike(that, object)

  return fromJsonObject(that, object)
}

function fromBuffer (that, buffer) {
  var length = checked(buffer.length) | 0
  that = allocate(that, length)
  buffer.copy(that, 0, 0, length)
  return that
}

function fromArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Duplicate of fromArray() to keep fromArray() monomorphic.
function fromTypedArray (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  // Truncating the elements is probably not what people expect from typed
  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior
  // of the old Buffer constructor.
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    array.byteLength
    that = Buffer._augment(new Uint8Array(array))
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromTypedArray(that, new Uint8Array(array))
  }
  return that
}

function fromArrayLike (that, array) {
  var length = checked(array.length) | 0
  that = allocate(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.
// Returns a zero-length buffer for inputs that don't conform to the spec.
function fromJsonObject (that, object) {
  var array
  var length = 0

  if (object.type === 'Buffer' && isArray(object.data)) {
    array = object.data
    length = checked(array.length) | 0
  }
  that = allocate(that, length)

  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
}

function allocate (that, length) {
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = Buffer._augment(new Uint8Array(length))
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that.length = length
    that._isBuffer = true
  }

  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1
  if (fromPool) that.parent = rootParent

  return that
}

function checked (length) {
  // Note: cannot use `length < kMaxLength` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (subject, encoding) {
  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)

  var buf = new Buffer(subject, encoding)
  delete buf.parent
  return buf
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  var i = 0
  var len = Math.min(x, y)
  while (i < len) {
    if (a[i] !== b[i]) break

    ++i
  }

  if (i !== len) {
    x = a[i]
    y = b[i]
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')

  if (list.length === 0) {
    return new Buffer(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; i++) {
      length += list[i].length
    }
  }

  var buf = new Buffer(length)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}

function byteLength (string, encoding) {
  if (typeof string !== 'string') string = '' + string

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'binary':
      // Deprecated
      case 'raw':
      case 'raws':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

// pre-set for values that may exist in the future
//Buffer.prototype.length = undefined
//Buffer.prototype.parent = undefined

function slowToString (encoding, start, end) {
  var loweredCase = false

  start = start | 0
  end = end === undefined || end === Infinity ? this.length : end | 0

  if (!encoding) encoding = 'utf8'
  if (start < 0) start = 0
  if (end > this.length) end = this.length
  if (end <= start) return ''

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'binary':
        return binarySlice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return 0
  return Buffer.compare(this, b)
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset) {
  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff
  else if (byteOffset < -0x80000000) byteOffset = -0x80000000
  byteOffset >>= 0

  if (this.length === 0) return -1
  if (byteOffset >= this.length) return -1

  // Negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)

  if (typeof val === 'string') {
    if (val.length === 0) return -1 // special case: looking for empty string always fails
    return String.prototype.indexOf.call(this, val, byteOffset)
  }
  if (Buffer.isBuffer(val)) {
    return arrayIndexOf(this, val, byteOffset)
  }
  if (typeof val === 'number') {
    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)
    }
    return arrayIndexOf(this, [ val ], byteOffset)
  }

  function arrayIndexOf (arr, val, byteOffset) {
    var foundIndex = -1
    for (var i = 0; byteOffset + i < arr.length; i++) {
      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex
      } else {
        foundIndex = -1
      }
    }
    return -1
  }

  throw new TypeError('val must be string, number or Buffer')
}

// `get` is deprecated
Buffer.prototype.get = function get (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

// `set` is deprecated
Buffer.prototype.set = function set (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new Error('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) throw new Error('Invalid hex string')
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function binaryWrite (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    var swap = encoding
    encoding = offset
    offset = length | 0
    length = swap
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'binary':
        return binaryWrite(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function binarySlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = Buffer._augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
  }

  if (newBuf.length) newBuf.parent = this.parent || this

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = value < 0 ? 1 : 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (value > max || value < min) throw new RangeError('value is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('index out of range')
  if (offset < 0) throw new RangeError('index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; i--) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; i++) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    target._set(this.subarray(start, start + len), targetStart)
  }

  return len
}

// fill(value, start=0, end=buffer.length)
Buffer.prototype.fill = function fill (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (end < start) throw new RangeError('end < start')

  // Fill 0 bytes; we're done
  if (end === start) return
  if (this.length === 0) return

  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')
  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')

  var i
  if (typeof value === 'number') {
    for (i = start; i < end; i++) {
      this[i] = value
    }
  } else {
    var bytes = utf8ToBytes(value.toString())
    var len = bytes.length
    for (i = start; i < end; i++) {
      this[i] = bytes[i % len]
    }
  }

  return this
}

/**
 * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.
 * Added in Node 0.12. Only available in browsers that support ArrayBuffer.
 */
Buffer.prototype.toArrayBuffer = function toArrayBuffer () {
  if (typeof Uint8Array !== 'undefined') {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1) {
        buf[i] = this[i]
      }
      return buf.buffer
    }
  } else {
    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')
  }
}

// HELPER FUNCTIONS
// ================

var BP = Buffer.prototype

/**
 * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods
 */
Buffer._augment = function _augment (arr) {
  arr.constructor = Buffer
  arr._isBuffer = true

  // save reference to original Uint8Array set method before overwriting
  arr._set = arr.set

  // deprecated
  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.equals = BP.equals
  arr.compare = BP.compare
  arr.indexOf = BP.indexOf
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUIntLE = BP.readUIntLE
  arr.readUIntBE = BP.readUIntBE
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readIntLE = BP.readIntLE
  arr.readIntBE = BP.readIntBE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUIntLE = BP.writeUIntLE
  arr.writeUIntBE = BP.writeUIntBE
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeIntLE = BP.writeIntLE
  arr.writeIntBE = BP.writeIntBE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; i++) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"base64-js":2,"ieee754":5,"is-array":7}],4:[function(require,module,exports){
"use strict"

module.exports = createRBTree

var RED   = 0
var BLACK = 1

function RBNode(color, key, value, left, right, count) {
  this._color = color
  this.key = key
  this.value = value
  this.left = left
  this.right = right
  this._count = count
}

function cloneNode(node) {
  return new RBNode(node._color, node.key, node.value, node.left, node.right, node._count)
}

function repaint(color, node) {
  return new RBNode(color, node.key, node.value, node.left, node.right, node._count)
}

function recount(node) {
  node._count = 1 + (node.left ? node.left._count : 0) + (node.right ? node.right._count : 0)
}

function RedBlackTree(compare, root) {
  this._compare = compare
  this.root = root
}

var proto = RedBlackTree.prototype

Object.defineProperty(proto, "keys", {
  get: function() {
    var result = []
    this.forEach(function(k,v) {
      result.push(k)
    })
    return result
  }
})

Object.defineProperty(proto, "values", {
  get: function() {
    var result = []
    this.forEach(function(k,v) {
      result.push(v)
    })
    return result
  }
})

//Returns the number of nodes in the tree
Object.defineProperty(proto, "length", {
  get: function() {
    if(this.root) {
      return this.root._count
    }
    return 0
  }
})

//Insert a new item into the tree
proto.insert = function(key, value) {
  var cmp = this._compare
  //Find point to insert new node at
  var n = this.root
  var n_stack = []
  var d_stack = []
  while(n) {
    var d = cmp(key, n.key)
    n_stack.push(n)
    d_stack.push(d)
    if(d <= 0) {
      n = n.left
    } else {
      n = n.right
    }
  }
  //Rebuild path to leaf node
  n_stack.push(new RBNode(RED, key, value, null, null, 1))
  for(var s=n_stack.length-2; s>=0; --s) {
    var n = n_stack[s]
    if(d_stack[s] <= 0) {
      n_stack[s] = new RBNode(n._color, n.key, n.value, n_stack[s+1], n.right, n._count+1)
    } else {
      n_stack[s] = new RBNode(n._color, n.key, n.value, n.left, n_stack[s+1], n._count+1)
    }
  }
  //Rebalance tree using rotations
  //console.log("start insert", key, d_stack)
  for(var s=n_stack.length-1; s>1; --s) {
    var p = n_stack[s-1]
    var n = n_stack[s]
    if(p._color === BLACK || n._color === BLACK) {
      break
    }
    var pp = n_stack[s-2]
    if(pp.left === p) {
      if(p.left === n) {
        var y = pp.right
        if(y && y._color === RED) {
          //console.log("LLr")
          p._color = BLACK
          pp.right = repaint(BLACK, y)
          pp._color = RED
          s -= 1
        } else {
          //console.log("LLb")
          pp._color = RED
          pp.left = p.right
          p._color = BLACK
          p.right = pp
          n_stack[s-2] = p
          n_stack[s-1] = n
          recount(pp)
          recount(p)
          if(s >= 3) {
            var ppp = n_stack[s-3]
            if(ppp.left === pp) {
              ppp.left = p
            } else {
              ppp.right = p
            }
          }
          break
        }
      } else {
        var y = pp.right
        if(y && y._color === RED) {
          //console.log("LRr")
          p._color = BLACK
          pp.right = repaint(BLACK, y)
          pp._color = RED
          s -= 1
        } else {
          //console.log("LRb")
          p.right = n.left
          pp._color = RED
          pp.left = n.right
          n._color = BLACK
          n.left = p
          n.right = pp
          n_stack[s-2] = n
          n_stack[s-1] = p
          recount(pp)
          recount(p)
          recount(n)
          if(s >= 3) {
            var ppp = n_stack[s-3]
            if(ppp.left === pp) {
              ppp.left = n
            } else {
              ppp.right = n
            }
          }
          break
        }
      }
    } else {
      if(p.right === n) {
        var y = pp.left
        if(y && y._color === RED) {
          //console.log("RRr", y.key)
          p._color = BLACK
          pp.left = repaint(BLACK, y)
          pp._color = RED
          s -= 1
        } else {
          //console.log("RRb")
          pp._color = RED
          pp.right = p.left
          p._color = BLACK
          p.left = pp
          n_stack[s-2] = p
          n_stack[s-1] = n
          recount(pp)
          recount(p)
          if(s >= 3) {
            var ppp = n_stack[s-3]
            if(ppp.right === pp) {
              ppp.right = p
            } else {
              ppp.left = p
            }
          }
          break
        }
      } else {
        var y = pp.left
        if(y && y._color === RED) {
          //console.log("RLr")
          p._color = BLACK
          pp.left = repaint(BLACK, y)
          pp._color = RED
          s -= 1
        } else {
          //console.log("RLb")
          p.left = n.right
          pp._color = RED
          pp.right = n.left
          n._color = BLACK
          n.right = p
          n.left = pp
          n_stack[s-2] = n
          n_stack[s-1] = p
          recount(pp)
          recount(p)
          recount(n)
          if(s >= 3) {
            var ppp = n_stack[s-3]
            if(ppp.right === pp) {
              ppp.right = n
            } else {
              ppp.left = n
            }
          }
          break
        }
      }
    }
  }
  //Return new tree
  n_stack[0]._color = BLACK
  return new RedBlackTree(cmp, n_stack[0])
}


//Visit all nodes inorder
function doVisitFull(visit, node) {
  if(node.left) {
    var v = doVisitFull(visit, node.left)
    if(v) { return v }
  }
  var v = visit(node.key, node.value)
  if(v) { return v }
  if(node.right) {
    return doVisitFull(visit, node.right)
  }
}

//Visit half nodes in order
function doVisitHalf(lo, compare, visit, node) {
  var l = compare(lo, node.key)
  if(l <= 0) {
    if(node.left) {
      var v = doVisitHalf(lo, compare, visit, node.left)
      if(v) { return v }
    }
    var v = visit(node.key, node.value)
    if(v) { return v }
  }
  if(node.right) {
    return doVisitHalf(lo, compare, visit, node.right)
  }
}

//Visit all nodes within a range
function doVisit(lo, hi, compare, visit, node) {
  var l = compare(lo, node.key)
  var h = compare(hi, node.key)
  var v
  if(l <= 0) {
    if(node.left) {
      v = doVisit(lo, hi, compare, visit, node.left)
      if(v) { return v }
    }
    if(h > 0) {
      v = visit(node.key, node.value)
      if(v) { return v }
    }
  }
  if(h > 0 && node.right) {
    return doVisit(lo, hi, compare, visit, node.right)
  }
}


proto.forEach = function rbTreeForEach(visit, lo, hi) {
  if(!this.root) {
    return
  }
  switch(arguments.length) {
    case 1:
      return doVisitFull(visit, this.root)
    break

    case 2:
      return doVisitHalf(lo, this._compare, visit, this.root)
    break

    case 3:
      if(this._compare(lo, hi) >= 0) {
        return
      }
      return doVisit(lo, hi, this._compare, visit, this.root)
    break
  }
}

//First item in list
Object.defineProperty(proto, "begin", {
  get: function() {
    var stack = []
    var n = this.root
    while(n) {
      stack.push(n)
      n = n.left
    }
    return new RedBlackTreeIterator(this, stack)
  }
})

//Last item in list
Object.defineProperty(proto, "end", {
  get: function() {
    var stack = []
    var n = this.root
    while(n) {
      stack.push(n)
      n = n.right
    }
    return new RedBlackTreeIterator(this, stack)
  }
})

//Find the ith item in the tree
proto.at = function(idx) {
  if(idx < 0) {
    return new RedBlackTreeIterator(this, [])
  }
  var n = this.root
  var stack = []
  while(true) {
    stack.push(n)
    if(n.left) {
      if(idx < n.left._count) {
        n = n.left
        continue
      }
      idx -= n.left._count
    }
    if(!idx) {
      return new RedBlackTreeIterator(this, stack)
    }
    idx -= 1
    if(n.right) {
      if(idx >= n.right._count) {
        break
      }
      n = n.right
    } else {
      break
    }
  }
  return new RedBlackTreeIterator(this, [])
}

proto.ge = function(key) {
  var cmp = this._compare
  var n = this.root
  var stack = []
  var last_ptr = 0
  while(n) {
    var d = cmp(key, n.key)
    stack.push(n)
    if(d <= 0) {
      last_ptr = stack.length
    }
    if(d <= 0) {
      n = n.left
    } else {
      n = n.right
    }
  }
  stack.length = last_ptr
  return new RedBlackTreeIterator(this, stack)
}

proto.gt = function(key) {
  var cmp = this._compare
  var n = this.root
  var stack = []
  var last_ptr = 0
  while(n) {
    var d = cmp(key, n.key)
    stack.push(n)
    if(d < 0) {
      last_ptr = stack.length
    }
    if(d < 0) {
      n = n.left
    } else {
      n = n.right
    }
  }
  stack.length = last_ptr
  return new RedBlackTreeIterator(this, stack)
}

proto.lt = function(key) {
  var cmp = this._compare
  var n = this.root
  var stack = []
  var last_ptr = 0
  while(n) {
    var d = cmp(key, n.key)
    stack.push(n)
    if(d > 0) {
      last_ptr = stack.length
    }
    if(d <= 0) {
      n = n.left
    } else {
      n = n.right
    }
  }
  stack.length = last_ptr
  return new RedBlackTreeIterator(this, stack)
}

proto.le = function(key) {
  var cmp = this._compare
  var n = this.root
  var stack = []
  var last_ptr = 0
  while(n) {
    var d = cmp(key, n.key)
    stack.push(n)
    if(d >= 0) {
      last_ptr = stack.length
    }
    if(d < 0) {
      n = n.left
    } else {
      n = n.right
    }
  }
  stack.length = last_ptr
  return new RedBlackTreeIterator(this, stack)
}

//Finds the item with key if it exists
proto.find = function(key) {
  var cmp = this._compare
  var n = this.root
  var stack = []
  while(n) {
    var d = cmp(key, n.key)
    stack.push(n)
    if(d === 0) {
      return new RedBlackTreeIterator(this, stack)
    }
    if(d <= 0) {
      n = n.left
    } else {
      n = n.right
    }
  }
  return new RedBlackTreeIterator(this, [])
}

//Removes item with key from tree
proto.remove = function(key) {
  var iter = this.find(key)
  if(iter) {
    return iter.remove()
  }
  return this
}

//Returns the item at `key`
proto.get = function(key) {
  var cmp = this._compare
  var n = this.root
  while(n) {
    var d = cmp(key, n.key)
    if(d === 0) {
      return n.value
    }
    if(d <= 0) {
      n = n.left
    } else {
      n = n.right
    }
  }
  return
}

//Iterator for red black tree
function RedBlackTreeIterator(tree, stack) {
  this.tree = tree
  this._stack = stack
}

var iproto = RedBlackTreeIterator.prototype

//Test if iterator is valid
Object.defineProperty(iproto, "valid", {
  get: function() {
    return this._stack.length > 0
  }
})

//Node of the iterator
Object.defineProperty(iproto, "node", {
  get: function() {
    if(this._stack.length > 0) {
      return this._stack[this._stack.length-1]
    }
    return null
  },
  enumerable: true
})

//Makes a copy of an iterator
iproto.clone = function() {
  return new RedBlackTreeIterator(this.tree, this._stack.slice())
}

//Swaps two nodes
function swapNode(n, v) {
  n.key = v.key
  n.value = v.value
  n.left = v.left
  n.right = v.right
  n._color = v._color
  n._count = v._count
}

//Fix up a double black node in a tree
function fixDoubleBlack(stack) {
  var n, p, s, z
  for(var i=stack.length-1; i>=0; --i) {
    n = stack[i]
    if(i === 0) {
      n._color = BLACK
      return
    }
    //console.log("visit node:", n.key, i, stack[i].key, stack[i-1].key)
    p = stack[i-1]
    if(p.left === n) {
      //console.log("left child")
      s = p.right
      if(s.right && s.right._color === RED) {
        //console.log("case 1: right sibling child red")
        s = p.right = cloneNode(s)
        z = s.right = cloneNode(s.right)
        p.right = s.left
        s.left = p
        s.right = z
        s._color = p._color
        n._color = BLACK
        p._color = BLACK
        z._color = BLACK
        recount(p)
        recount(s)
        if(i > 1) {
          var pp = stack[i-2]
          if(pp.left === p) {
            pp.left = s
          } else {
            pp.right = s
          }
        }
        stack[i-1] = s
        return
      } else if(s.left && s.left._color === RED) {
        //console.log("case 1: left sibling child red")
        s = p.right = cloneNode(s)
        z = s.left = cloneNode(s.left)
        p.right = z.left
        s.left = z.right
        z.left = p
        z.right = s
        z._color = p._color
        p._color = BLACK
        s._color = BLACK
        n._color = BLACK
        recount(p)
        recount(s)
        recount(z)
        if(i > 1) {
          var pp = stack[i-2]
          if(pp.left === p) {
            pp.left = z
          } else {
            pp.right = z
          }
        }
        stack[i-1] = z
        return
      }
      if(s._color === BLACK) {
        if(p._color === RED) {
          //console.log("case 2: black sibling, red parent", p.right.value)
          p._color = BLACK
          p.right = repaint(RED, s)
          return
        } else {
          //console.log("case 2: black sibling, black parent", p.right.value)
          p.right = repaint(RED, s)
          continue
        }
      } else {
        //console.log("case 3: red sibling")
        s = cloneNode(s)
        p.right = s.left
        s.left = p
        s._color = p._color
        p._color = RED
        recount(p)
        recount(s)
        if(i > 1) {
          var pp = stack[i-2]
          if(pp.left === p) {
            pp.left = s
          } else {
            pp.right = s
          }
        }
        stack[i-1] = s
        stack[i] = p
        if(i+1 < stack.length) {
          stack[i+1] = n
        } else {
          stack.push(n)
        }
        i = i+2
      }
    } else {
      //console.log("right child")
      s = p.left
      if(s.left && s.left._color === RED) {
        //console.log("case 1: left sibling child red", p.value, p._color)
        s = p.left = cloneNode(s)
        z = s.left = cloneNode(s.left)
        p.left = s.right
        s.right = p
        s.left = z
        s._color = p._color
        n._color = BLACK
        p._color = BLACK
        z._color = BLACK
        recount(p)
        recount(s)
        if(i > 1) {
          var pp = stack[i-2]
          if(pp.right === p) {
            pp.right = s
          } else {
            pp.left = s
          }
        }
        stack[i-1] = s
        return
      } else if(s.right && s.right._color === RED) {
        //console.log("case 1: right sibling child red")
        s = p.left = cloneNode(s)
        z = s.right = cloneNode(s.right)
        p.left = z.right
        s.right = z.left
        z.right = p
        z.left = s
        z._color = p._color
        p._color = BLACK
        s._color = BLACK
        n._color = BLACK
        recount(p)
        recount(s)
        recount(z)
        if(i > 1) {
          var pp = stack[i-2]
          if(pp.right === p) {
            pp.right = z
          } else {
            pp.left = z
          }
        }
        stack[i-1] = z
        return
      }
      if(s._color === BLACK) {
        if(p._color === RED) {
          //console.log("case 2: black sibling, red parent")
          p._color = BLACK
          p.left = repaint(RED, s)
          return
        } else {
          //console.log("case 2: black sibling, black parent")
          p.left = repaint(RED, s)
          continue
        }
      } else {
        //console.log("case 3: red sibling")
        s = cloneNode(s)
        p.left = s.right
        s.right = p
        s._color = p._color
        p._color = RED
        recount(p)
        recount(s)
        if(i > 1) {
          var pp = stack[i-2]
          if(pp.right === p) {
            pp.right = s
          } else {
            pp.left = s
          }
        }
        stack[i-1] = s
        stack[i] = p
        if(i+1 < stack.length) {
          stack[i+1] = n
        } else {
          stack.push(n)
        }
        i = i+2
      }
    }
  }
}

//Removes item at iterator from tree
iproto.remove = function() {
  var stack = this._stack
  if(stack.length === 0) {
    return this.tree
  }
  //First copy path to node
  var cstack = new Array(stack.length)
  var n = stack[stack.length-1]
  cstack[cstack.length-1] = new RBNode(n._color, n.key, n.value, n.left, n.right, n._count)
  for(var i=stack.length-2; i>=0; --i) {
    var n = stack[i]
    if(n.left === stack[i+1]) {
      cstack[i] = new RBNode(n._color, n.key, n.value, cstack[i+1], n.right, n._count)
    } else {
      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)
    }
  }

  //Get node
  n = cstack[cstack.length-1]
  //console.log("start remove: ", n.value)

  //If not leaf, then swap with previous node
  if(n.left && n.right) {
    //console.log("moving to leaf")

    //First walk to previous leaf
    var split = cstack.length
    n = n.left
    while(n.right) {
      cstack.push(n)
      n = n.right
    }
    //Copy path to leaf
    var v = cstack[split-1]
    cstack.push(new RBNode(n._color, v.key, v.value, n.left, n.right, n._count))
    cstack[split-1].key = n.key
    cstack[split-1].value = n.value

    //Fix up stack
    for(var i=cstack.length-2; i>=split; --i) {
      n = cstack[i]
      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)
    }
    cstack[split-1].left = cstack[split]
  }
  //console.log("stack=", cstack.map(function(v) { return v.value }))

  //Remove leaf node
  n = cstack[cstack.length-1]
  if(n._color === RED) {
    //Easy case: removing red leaf
    //console.log("RED leaf")
    var p = cstack[cstack.length-2]
    if(p.left === n) {
      p.left = null
    } else if(p.right === n) {
      p.right = null
    }
    cstack.pop()
    for(var i=0; i<cstack.length; ++i) {
      cstack[i]._count--
    }
    return new RedBlackTree(this.tree._compare, cstack[0])
  } else {
    if(n.left || n.right) {
      //Second easy case:  Single child black parent
      //console.log("BLACK single child")
      if(n.left) {
        swapNode(n, n.left)
      } else if(n.right) {
        swapNode(n, n.right)
      }
      //Child must be red, so repaint it black to balance color
      n._color = BLACK
      for(var i=0; i<cstack.length-1; ++i) {
        cstack[i]._count--
      }
      return new RedBlackTree(this.tree._compare, cstack[0])
    } else if(cstack.length === 1) {
      //Third easy case: root
      //console.log("ROOT")
      return new RedBlackTree(this.tree._compare, null)
    } else {
      //Hard case: Repaint n, and then do some nasty stuff
      //console.log("BLACK leaf no children")
      for(var i=0; i<cstack.length; ++i) {
        cstack[i]._count--
      }
      var parent = cstack[cstack.length-2]
      fixDoubleBlack(cstack)
      //Fix up links
      if(parent.left === n) {
        parent.left = null
      } else {
        parent.right = null
      }
    }
  }
  return new RedBlackTree(this.tree._compare, cstack[0])
}

//Returns key
Object.defineProperty(iproto, "key", {
  get: function() {
    if(this._stack.length > 0) {
      return this._stack[this._stack.length-1].key
    }
    return
  },
  enumerable: true
})

//Returns value
Object.defineProperty(iproto, "value", {
  get: function() {
    if(this._stack.length > 0) {
      return this._stack[this._stack.length-1].value
    }
    return
  },
  enumerable: true
})


//Returns the position of this iterator in the sorted list
Object.defineProperty(iproto, "index", {
  get: function() {
    var idx = 0
    var stack = this._stack
    if(stack.length === 0) {
      var r = this.tree.root
      if(r) {
        return r._count
      }
      return 0
    } else if(stack[stack.length-1].left) {
      idx = stack[stack.length-1].left._count
    }
    for(var s=stack.length-2; s>=0; --s) {
      if(stack[s+1] === stack[s].right) {
        ++idx
        if(stack[s].left) {
          idx += stack[s].left._count
        }
      }
    }
    return idx
  },
  enumerable: true
})

//Advances iterator to next element in list
iproto.next = function() {
  var stack = this._stack
  if(stack.length === 0) {
    return
  }
  var n = stack[stack.length-1]
  if(n.right) {
    n = n.right
    while(n) {
      stack.push(n)
      n = n.left
    }
  } else {
    stack.pop()
    while(stack.length > 0 && stack[stack.length-1].right === n) {
      n = stack[stack.length-1]
      stack.pop()
    }
  }
}

//Checks if iterator is at end of tree
Object.defineProperty(iproto, "hasNext", {
  get: function() {
    var stack = this._stack
    if(stack.length === 0) {
      return false
    }
    if(stack[stack.length-1].right) {
      return true
    }
    for(var s=stack.length-1; s>0; --s) {
      if(stack[s-1].left === stack[s]) {
        return true
      }
    }
    return false
  }
})

//Update value
iproto.update = function(value) {
  var stack = this._stack
  if(stack.length === 0) {
    throw new Error("Can't update empty node!")
  }
  var cstack = new Array(stack.length)
  var n = stack[stack.length-1]
  cstack[cstack.length-1] = new RBNode(n._color, n.key, value, n.left, n.right, n._count)
  for(var i=stack.length-2; i>=0; --i) {
    n = stack[i]
    if(n.left === stack[i+1]) {
      cstack[i] = new RBNode(n._color, n.key, n.value, cstack[i+1], n.right, n._count)
    } else {
      cstack[i] = new RBNode(n._color, n.key, n.value, n.left, cstack[i+1], n._count)
    }
  }
  return new RedBlackTree(this.tree._compare, cstack[0])
}

//Moves iterator backward one element
iproto.prev = function() {
  var stack = this._stack
  if(stack.length === 0) {
    return
  }
  var n = stack[stack.length-1]
  if(n.left) {
    n = n.left
    while(n) {
      stack.push(n)
      n = n.right
    }
  } else {
    stack.pop()
    while(stack.length > 0 && stack[stack.length-1].left === n) {
      n = stack[stack.length-1]
      stack.pop()
    }
  }
}

//Checks if iterator is at start of tree
Object.defineProperty(iproto, "hasPrev", {
  get: function() {
    var stack = this._stack
    if(stack.length === 0) {
      return false
    }
    if(stack[stack.length-1].left) {
      return true
    }
    for(var s=stack.length-1; s>0; --s) {
      if(stack[s-1].right === stack[s]) {
        return true
      }
    }
    return false
  }
})

//Default comparison function
function defaultCompare(a, b) {
  if(a < b) {
    return -1
  }
  if(a > b) {
    return 1
  }
  return 0
}

//Build a tree
function createRBTree(compare) {
  return new RedBlackTree(compare || defaultCompare, null)
}
},{}],5:[function(require,module,exports){
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],6:[function(require,module,exports){
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],7:[function(require,module,exports){

/**
 * isArray
 */

var isArray = Array.isArray;

/**
 * toString
 */

var str = Object.prototype.toString;

/**
 * Whether or not the given `val`
 * is an array.
 *
 * example:
 *
 *        isArray([]);
 *        // > true
 *        isArray(arguments);
 *        // > false
 *        isArray('');
 *        // > false
 *
 * @param {mixed} val
 * @return {bool}
 */

module.exports = isArray || function (val) {
  return !! val && '[object Array]' == str.call(val);
};

},{}],8:[function(require,module,exports){
/**
 * Determine if an object is Buffer
 *
 * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * License:  MIT
 *
 * `npm install is-buffer`
 */

module.exports = function (obj) {
  return !!(obj != null &&
    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)
      (obj.constructor &&
      typeof obj.constructor.isBuffer === 'function' &&
      obj.constructor.isBuffer(obj))
    ))
}

},{}],9:[function(require,module,exports){
(function (process,global,Buffer){
var inherits          = require('inherits')
  , AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN
  , AbstractIterator  = require('abstract-leveldown').AbstractIterator
  , ltgt              = require('ltgt')
  , setImmediate      = global.setImmediate || process.nextTick
  , createRBT = require('functional-red-black-tree')
  , globalStore       = {}

function toKey (key) {
  return typeof key == 'string' ? '$' + key : JSON.stringify(key)
}

function gt(value) {
  return ltgt.compare(value, this._end) > 0
}

function gte(value) {
  return ltgt.compare(value, this._end) >= 0
}

function lt(value) {
  return ltgt.compare(value, this._end) < 0
}

function lte(value) {
  return ltgt.compare(value, this._end) <= 0
}


function MemIterator (db, options) {
  AbstractIterator.call(this, db)
  this._limit   = options.limit

  if (this._limit === -1)
    this._limit = Infinity

  var tree = db._store[db._location];

  this.keyAsBuffer = options.keyAsBuffer !== false
  this.valueAsBuffer = options.valueAsBuffer !== false
  this._reverse   = options.reverse
  this._options = options
  this._done = 0

  if (!this._reverse) {
    this._incr = 'next';
    this._start = ltgt.lowerBound(options);
    this._end = ltgt.upperBound(options)

    if (typeof this._start === 'undefined')
      this._tree = tree.begin;
    else if (ltgt.lowerBoundInclusive(options))
      this._tree = tree.ge(this._start);
    else
      this._tree = tree.gt(this._start);

    if (this._end) {
      if (ltgt.upperBoundInclusive(options))
        this._test = lte
      else
        this._test = lt
    }

  } else {
    this._incr = 'prev';
    this._start = ltgt.upperBound(options)
    this._end = ltgt.lowerBound(options)

    if (typeof this._start === 'undefined')
      this._tree = tree.end;
    else if (ltgt.upperBoundInclusive(options))
      this._tree = tree.le(this._start)
    else
      this._tree = tree.lt(this._start)

    if (this._end) {
      if (ltgt.lowerBoundInclusive(options))
        this._test = gte
      else
        this._test = gt
    }

  }

}

inherits(MemIterator, AbstractIterator)

MemIterator.prototype._next = function (callback) {
  var key
    , value

  if (this._done++ >= this._limit)
    return setImmediate(callback)

  if (!this._tree.valid)
    return setImmediate(callback)

  key = this._tree.key
  value = this._tree.value

  if (!this._test(key))
    return setImmediate(callback)

  if (this.keyAsBuffer)
    key = new Buffer(key)

  if (this.valueAsBuffer)
    value = new Buffer(value)

  this._tree[this._incr]()

  setImmediate(function callNext() {
    callback(null, key, value)
  })
}

MemIterator.prototype._test = function () {return true}

function MemDOWN (location) {
  if (!(this instanceof MemDOWN))
    return new MemDOWN(location)

  AbstractLevelDOWN.call(this, typeof location == 'string' ? location : '')

  this._location = this.location ? toKey(this.location) : '_tree'
  this._store = this.location ? globalStore: this
  this._store[this._location] = this._store[this._location] || createRBT()
}

MemDOWN.clearGlobalStore = function (strict) {
  if (strict) {
    Object.keys(globalStore).forEach(function (key) {
      delete globalStore[key];
    })
  } else {
    globalStore = {}
  }
}

inherits(MemDOWN, AbstractLevelDOWN)

MemDOWN.prototype._open = function (options, callback) {
  var self = this
  setImmediate(function callNext() { callback(null, self) })
}

MemDOWN.prototype._put = function (key, value, options, callback) {
  if (typeof value === 'undefined' || value === null) value = ''
  this._store[this._location] = this._store[this._location].remove(key).insert(key, value)
  setImmediate(callback)
}

MemDOWN.prototype._get = function (key, options, callback) {
  var value = this._store[this._location].get(key)

  if (value === undefined) {
    // 'NotFound' error, consistent with LevelDOWN API
    var err = new Error('NotFound')
    return setImmediate(function callNext() { callback(err) })
  }

  if (options.asBuffer !== false && !this._isBuffer(value))
    value = new Buffer(String(value))

  setImmediate(function callNext () {
    callback(null, value)
  })

}

MemDOWN.prototype._del = function (key, options, callback) {
  this._store[this._location] = this._store[this._location].remove(key)
  setImmediate(callback)
}

MemDOWN.prototype._batch = function (array, options, callback) {
  var err
    , i = -1
    , key
    , value
    , len = array.length
    , tree = this._store[this._location]

  while (++i < len) {
    if (!array[i])
      continue;

    key = this._isBuffer(array[i].key) ? array[i].key : String(array[i].key)
    err = this._checkKey(key, 'key')
    if (err)
      return setImmediate(function errorCall() { callback(err) })

    tree = tree.remove(array[i].key)
    // we always remove as insert doesn't replace

    if (array[i].type === 'put') {

      value = this._isBuffer(array[i].value) ? array[i].value : String(array[i].value)
      err = this._checkKey(value, 'value')

      if (err)
        return setImmediate(function errorCall() { callback(err) })

      tree = tree.insert(key, value)
    }

  }

  this._store[this._location] = tree;

  setImmediate(callback)
}

MemDOWN.prototype._iterator = function (options) {
  return new MemIterator(this, options)
}

MemDOWN.prototype._isBuffer = function (obj) {
  return Buffer.isBuffer(obj)
}

MemDOWN.destroy = function (name, callback) {
  var key = toKey(name)

  if (key in globalStore)
    delete globalStore[key]

  setImmediate(callback)
}

module.exports = MemDOWN

}).call(this,require('_process'),typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {},require("buffer").Buffer)
},{"_process":16,"abstract-leveldown":13,"buffer":3,"functional-red-black-tree":4,"inherits":6,"ltgt":15}],10:[function(require,module,exports){
(function (process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

function AbstractChainedBatch (db) {
  this._db         = db
  this._operations = []
  this._written    = false
}

AbstractChainedBatch.prototype._checkWritten = function () {
  if (this._written)
    throw new Error('write() already called on this batch')
}

AbstractChainedBatch.prototype.put = function (key, value) {
  this._checkWritten()

  var err = this._db._checkKey(key, 'key', this._db._isBuffer)
  if (err)
    throw err

  if (!this._db._isBuffer(key)) key = String(key)
  if (!this._db._isBuffer(value)) value = String(value)

  if (typeof this._put == 'function' )
    this._put(key, value)
  else
    this._operations.push({ type: 'put', key: key, value: value })

  return this
}

AbstractChainedBatch.prototype.del = function (key) {
  this._checkWritten()

  var err = this._db._checkKey(key, 'key', this._db._isBuffer)
  if (err) throw err

  if (!this._db._isBuffer(key)) key = String(key)

  if (typeof this._del == 'function' )
    this._del(key)
  else
    this._operations.push({ type: 'del', key: key })

  return this
}

AbstractChainedBatch.prototype.clear = function () {
  this._checkWritten()

  this._operations = []

  if (typeof this._clear == 'function' )
    this._clear()

  return this
}

AbstractChainedBatch.prototype.write = function (options, callback) {
  this._checkWritten()

  if (typeof options == 'function')
    callback = options
  if (typeof callback != 'function')
    throw new Error('write() requires a callback argument')
  if (typeof options != 'object')
    options = {}

  this._written = true

  if (typeof this._write == 'function' )
    return this._write(callback)

  if (typeof this._db._batch == 'function')
    return this._db._batch(this._operations, options, callback)

  process.nextTick(callback)
}

module.exports = AbstractChainedBatch
}).call(this,require('_process'))
},{"_process":16}],11:[function(require,module,exports){
(function (process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

function AbstractIterator (db) {
  this.db = db
  this._ended = false
  this._nexting = false
}

AbstractIterator.prototype.next = function (callback) {
  var self = this

  if (typeof callback != 'function')
    throw new Error('next() requires a callback argument')

  if (self._ended)
    return callback(new Error('cannot call next() after end()'))
  if (self._nexting)
    return callback(new Error('cannot call next() before previous next() has completed'))

  self._nexting = true
  if (typeof self._next == 'function') {
    return self._next(function () {
      self._nexting = false
      callback.apply(null, arguments)
    })
  }

  process.nextTick(function () {
    self._nexting = false
    callback()
  })
}

AbstractIterator.prototype.end = function (callback) {
  if (typeof callback != 'function')
    throw new Error('end() requires a callback argument')

  if (this._ended)
    return callback(new Error('end() already called on iterator'))

  this._ended = true

  if (typeof this._end == 'function')
    return this._end(callback)

  process.nextTick(callback)
}

module.exports = AbstractIterator

}).call(this,require('_process'))
},{"_process":16}],12:[function(require,module,exports){
(function (Buffer,process){
/* Copyright (c) 2013 Rod Vagg, MIT License */

var xtend                = require('xtend')
  , AbstractIterator     = require('./abstract-iterator')
  , AbstractChainedBatch = require('./abstract-chained-batch')

function AbstractLevelDOWN (location) {
  if (!arguments.length || location === undefined)
    throw new Error('constructor requires at least a location argument')

  if (typeof location != 'string')
    throw new Error('constructor requires a location string argument')

  this.location = location
  this.status = 'new'
}

AbstractLevelDOWN.prototype.open = function (options, callback) {
  var self      = this
    , oldStatus = this.status

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('open() requires a callback argument')

  if (typeof options != 'object')
    options = {}

  options.createIfMissing = options.createIfMissing != false
  options.errorIfExists = !!options.errorIfExists

  if (typeof this._open == 'function') {
    this.status = 'opening'
    this._open(options, function (err) {
      if (err) {
        self.status = oldStatus
        return callback(err)
      }
      self.status = 'open'
      callback()
    })
  } else {
    this.status = 'open'
    process.nextTick(callback)
  }
}

AbstractLevelDOWN.prototype.close = function (callback) {
  var self      = this
    , oldStatus = this.status

  if (typeof callback != 'function')
    throw new Error('close() requires a callback argument')

  if (typeof this._close == 'function') {
    this.status = 'closing'
    this._close(function (err) {
      if (err) {
        self.status = oldStatus
        return callback(err)
      }
      self.status = 'closed'
      callback()
    })
  } else {
    this.status = 'closed'
    process.nextTick(callback)
  }
}

AbstractLevelDOWN.prototype.get = function (key, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('get() requires a callback argument')

  if (err = this._checkKey(key, 'key', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  if (typeof options != 'object')
    options = {}

  options.asBuffer = options.asBuffer != false

  if (typeof this._get == 'function')
    return this._get(key, options, callback)

  process.nextTick(function () { callback(new Error('NotFound')) })
}

AbstractLevelDOWN.prototype.put = function (key, value, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('put() requires a callback argument')

  if (err = this._checkKey(key, 'key', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  // coerce value to string in node, don't touch it in browser
  // (indexeddb can store any JS type)
  if (value != null && !this._isBuffer(value) && !process.browser)
    value = String(value)

  if (typeof options != 'object')
    options = {}

  if (typeof this._put == 'function')
    return this._put(key, value, options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.del = function (key, options, callback) {
  var err

  if (typeof options == 'function')
    callback = options

  if (typeof callback != 'function')
    throw new Error('del() requires a callback argument')

  if (err = this._checkKey(key, 'key', this._isBuffer))
    return callback(err)

  if (!this._isBuffer(key))
    key = String(key)

  if (typeof options != 'object')
    options = {}

  if (typeof this._del == 'function')
    return this._del(key, options, callback)

  process.nextTick(callback)
}

AbstractLevelDOWN.prototype.batch = function (array, options, callback) {
  if (!arguments.length)
    return this._chainedBatch()

  if (typeof options == 'function')
    callback = options

  if (typeof array == 'function')
    callback = array

  if (typeof callback != 'function')
    throw new Error('batch(array) requires a callback argument')

  if (!Array.isArray(array))
    return callback(new Error('batch(array) requires an array argument'))

  if (!options || typeof options != 'object')
    options = {}

  var i = 0
    , l = array.length
    , e
    , err

  for (; i < l; i++) {
    e = array[i]
    if (typeof e != 'object')
      continue

    if (err = this._checkKey(e.type, 'type', this._isBuffer))
      return callback(err)

    if (err = this._checkKey(e.key, 'key', this._isBuffer))
      return callback(err)
  }

  if (typeof this._batch == 'function')
    return this._batch(array, options, callback)

  process.nextTick(callback)
}

//TODO: remove from here, not a necessary primitive
AbstractLevelDOWN.prototype.approximateSize = function (start, end, callback) {
  if (   start == null
      || end == null
      || typeof start == 'function'
      || typeof end == 'function') {
    throw new Error('approximateSize() requires valid `start`, `end` and `callback` arguments')
  }

  if (typeof callback != 'function')
    throw new Error('approximateSize() requires a callback argument')

  if (!this._isBuffer(start))
    start = String(start)

  if (!this._isBuffer(end))
    end = String(end)

  if (typeof this._approximateSize == 'function')
    return this._approximateSize(start, end, callback)

  process.nextTick(function () {
    callback(null, 0)
  })
}

AbstractLevelDOWN.prototype._setupIteratorOptions = function (options) {
  var self = this

  options = xtend(options)

  ;[ 'start', 'end', 'gt', 'gte', 'lt', 'lte' ].forEach(function (o) {
    if (options[o] && self._isBuffer(options[o]) && options[o].length === 0)
      delete options[o]
  })

  options.reverse = !!options.reverse
  options.keys = options.keys != false
  options.values = options.values != false
  options.limit = 'limit' in options ? options.limit : -1
  options.keyAsBuffer = options.keyAsBuffer != false
  options.valueAsBuffer = options.valueAsBuffer != false

  return options
}

AbstractLevelDOWN.prototype.iterator = function (options) {
  if (typeof options != 'object')
    options = {}

  options = this._setupIteratorOptions(options)

  if (typeof this._iterator == 'function')
    return this._iterator(options)

  return new AbstractIterator(this)
}

AbstractLevelDOWN.prototype._chainedBatch = function () {
  return new AbstractChainedBatch(this)
}

AbstractLevelDOWN.prototype._isBuffer = function (obj) {
  return Buffer.isBuffer(obj)
}

AbstractLevelDOWN.prototype._checkKey = function (obj, type) {

  if (obj === null || obj === undefined)
    return new Error(type + ' cannot be `null` or `undefined`')

  if (this._isBuffer(obj)) {
    if (obj.length === 0)
      return new Error(type + ' cannot be an empty Buffer')
  } else if (String(obj) === '')
    return new Error(type + ' cannot be an empty String')
}

module.exports = AbstractLevelDOWN

}).call(this,{"isBuffer":require("../../../is-buffer/index.js")},require('_process'))
},{"../../../is-buffer/index.js":8,"./abstract-chained-batch":10,"./abstract-iterator":11,"_process":16,"xtend":17}],13:[function(require,module,exports){
exports.AbstractLevelDOWN    = require('./abstract-leveldown')
exports.AbstractIterator     = require('./abstract-iterator')
exports.AbstractChainedBatch = require('./abstract-chained-batch')
exports.isLevelDOWN          = require('./is-leveldown')

},{"./abstract-chained-batch":10,"./abstract-iterator":11,"./abstract-leveldown":12,"./is-leveldown":14}],14:[function(require,module,exports){
var AbstractLevelDOWN = require('./abstract-leveldown')

function isLevelDOWN (db) {
  if (!db || typeof db !== 'object')
    return false
  return Object.keys(AbstractLevelDOWN.prototype).filter(function (name) {
    // TODO remove approximateSize check when method is gone
    return name[0] != '_' && name != 'approximateSize'
  }).every(function (name) {
    return typeof db[name] == 'function'
  })
}

module.exports = isLevelDOWN

},{"./abstract-leveldown":12}],15:[function(require,module,exports){
(function (Buffer){

exports.compare = function (a, b) {

  if(Buffer.isBuffer(a)) {
    var l = Math.min(a.length, b.length)
    for(var i = 0; i < l; i++) {
      var cmp = a[i] - b[i]
      if(cmp) return cmp
    }
    return a.length - b.length
  }

  return a < b ? -1 : a > b ? 1 : 0
}

function has(obj, key) {
  return Object.hasOwnProperty.call(obj, key)
}

// to be compatible with the current abstract-leveldown tests
// nullish or empty strings.
// I could use !!val but I want to permit numbers and booleans,
// if possible.

function isDef (val) {
  return val != null && val !== ''
}

var lowerBound = exports.lowerBound = function (range) {
  return (
      isDef(range.gt)                      ? range.gt
    : isDef(range.gte)                     ? range.gte
    : isDef(range.min)                     ? range.min
    : isDef(range.start) && !range.reverse ? range.start
    : isDef(range.end) && range.reverse    ? range.end
    :                                        undefined
  )
}

exports.lowerBoundInclusive = function (range) {
  return isDef(range.gt) ? false : true
}

exports.upperBoundInclusive =
  function (range) {
    return isDef(range.lt) ? false : true
  }

var lowerBoundExclusive = exports.lowerBoundExclusive =
  function (range) {
    return isDef(range.gt) ? true : false
  }

var upperBoundExclusive = exports.upperBoundExclusive =
  function (range) {
    return isDef(range.lt) ? true : false
  }

var upperBound = exports.upperBound = function (range) {
  return (
      isDef(range.lt)                     ? range.lt
    : isDef(range.lte)                    ? range.lte
    : isDef(range.max)                    ? range.max
    : isDef(range.start) && range.reverse ? range.start
    : isDef(range.end) && !range.reverse  ? range.end
    :                                       undefined
  )
}


exports.contains = function (range, key, compare) {
  compare = compare || exports.compare

  var lb = lowerBound(range)
  if(isDef(lb)) {
    var cmp = compare(key, lb)
    if(cmp < 0 || (cmp === 0 && lowerBoundExclusive(range)))
      return false
  }

  var ub = upperBound(range)
  if(isDef(ub)) {
    var cmp = compare(key, ub)
    if(cmp > 0 || (cmp === 0) && upperBoundExclusive(range))
      return false
  }

  return true
}

exports.filter = function (range, compare) {
  return function (key) {
    return exports.contains(range, key, compare)
  }
}

}).call(this,{"isBuffer":require("../../../is-buffer/index.js")})
},{"../../../is-buffer/index.js":8}],16:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        setTimeout(drainQueue, 0);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],17:[function(require,module,exports){
module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}

},{}]},{},[1]);

'use strict';

System.register('common/data/sb-service/test/mock/MockClient.js', [], function (_export, _context) {
	var _createClass, MockClient;

	function _classCallCheck(instance, Constructor) {
		if (!(instance instanceof Constructor)) {
			throw new TypeError("Cannot call a class as a function");
		}
	}

	return {
		setters: [],
		execute: function () {
			_createClass = function () {
				function defineProperties(target, props) {
					for (var i = 0; i < props.length; i++) {
						var descriptor = props[i];
						descriptor.enumerable = descriptor.enumerable || false;
						descriptor.configurable = true;
						if ("value" in descriptor) descriptor.writable = true;
						Object.defineProperty(target, descriptor.key, descriptor);
					}
				}

				return function (Constructor, protoProps, staticProps) {
					if (protoProps) defineProperties(Constructor.prototype, protoProps);
					if (staticProps) defineProperties(Constructor, staticProps);
					return Constructor;
				};
			}();

			_export('MockClient', MockClient = function () {
				function MockClient(serviceComponent) {
					_classCallCheck(this, MockClient);

					this.serviceComponent = serviceComponent;
				}

				_createClass(MockClient, [{
					key: 'read',
					value: function read(prefix, reader, uid) {
						this.serviceComponent.fire('sb-read', { prefix: prefix, reader: reader, uid: uid });
						return Promise.resolve();
					}
				}, {
					key: 'load',
					value: function load(prefix, loader, uid, context) {
						this.serviceComponent.fire('sb-load', { prefix: prefix, loader: loader, uid: uid, context: context });
						return Promise.resolve();
					}
				}, {
					key: 'save',
					value: function save(prefix, saver, model) {
						this.serviceComponent.fire('sb-save', { prefix: prefix, saver: saver, model: model });
						return Promise.resolve();
					}
				}, {
					key: 'md',
					value: function md(prefix, type, fullNames) {
						this.serviceComponent.fire('sb-md', { prefix: prefix, mdType: type, mdItems: fullNames });
						return Promise.resolve();
					}
				}]);

				return MockClient;
			}());

			_export('MockClient', MockClient);
		}
	};
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1vY2tDbGllbnQuanMiXSwibmFtZXMiOlsiTW9ja0NsaWVudCIsInNlcnZpY2VDb21wb25lbnQiLCJwcmVmaXgiLCJyZWFkZXIiLCJ1aWQiLCJmaXJlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJsb2FkZXIiLCJjb250ZXh0Iiwic2F2ZXIiLCJtb2RlbCIsInR5cGUiLCJmdWxsTmFtZXMiLCJtZFR5cGUiLCJtZEl0ZW1zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkFBYUEsVTtBQUVaLHdCQUFZQyxnQkFBWixFQUE4QjtBQUFBOztBQUM3QixVQUFLQSxnQkFBTCxHQUF3QkEsZ0JBQXhCO0FBQ0E7Ozs7MEJBRUlDLE0sRUFBUUMsTSxFQUFRQyxHLEVBQUs7QUFDekIsV0FBS0gsZ0JBQUwsQ0FBc0JJLElBQXRCLENBQTJCLFNBQTNCLEVBQXNDLEVBQUNILFFBQVFBLE1BQVQsRUFBaUJDLFFBQVFBLE1BQXpCLEVBQWlDQyxLQUFLQSxHQUF0QyxFQUF0QztBQUNBLGFBQU9FLFFBQVFDLE9BQVIsRUFBUDtBQUNBOzs7MEJBRUlMLE0sRUFBUU0sTSxFQUFRSixHLEVBQUtLLE8sRUFBUztBQUNsQyxXQUFLUixnQkFBTCxDQUFzQkksSUFBdEIsQ0FBMkIsU0FBM0IsRUFBc0MsRUFBQ0gsUUFBUUEsTUFBVCxFQUFpQk0sUUFBUUEsTUFBekIsRUFBaUNKLEtBQUtBLEdBQXRDLEVBQTJDSyxTQUFTQSxPQUFwRCxFQUF0QztBQUNBLGFBQU9ILFFBQVFDLE9BQVIsRUFBUDtBQUNBOzs7MEJBRUlMLE0sRUFBUVEsSyxFQUFPQyxLLEVBQU87QUFDMUIsV0FBS1YsZ0JBQUwsQ0FBc0JJLElBQXRCLENBQTJCLFNBQTNCLEVBQXNDLEVBQUNILFFBQVFBLE1BQVQsRUFBaUJRLE9BQU9BLEtBQXhCLEVBQStCQyxPQUFPQSxLQUF0QyxFQUF0QztBQUNBLGFBQU9MLFFBQVFDLE9BQVIsRUFBUDtBQUNBOzs7d0JBRUVMLE0sRUFBUVUsSSxFQUFNQyxTLEVBQVc7QUFDM0IsV0FBS1osZ0JBQUwsQ0FBc0JJLElBQXRCLENBQTJCLE9BQTNCLEVBQW9DLEVBQUNILFFBQVFBLE1BQVQsRUFBaUJZLFFBQVFGLElBQXpCLEVBQStCRyxTQUFTRixTQUF4QyxFQUFwQztBQUNBLGFBQU9QLFFBQVFDLE9BQVIsRUFBUDtBQUNBIiwiZmlsZSI6Ik1vY2tDbGllbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTW9ja0NsaWVudCB7XG5cblx0Y29uc3RydWN0b3Ioc2VydmljZUNvbXBvbmVudCkge1xuXHRcdHRoaXMuc2VydmljZUNvbXBvbmVudCA9IHNlcnZpY2VDb21wb25lbnQ7XG5cdH1cblxuXHRyZWFkKHByZWZpeCwgcmVhZGVyLCB1aWQpIHtcblx0XHR0aGlzLnNlcnZpY2VDb21wb25lbnQuZmlyZSgnc2ItcmVhZCcsIHtwcmVmaXg6IHByZWZpeCwgcmVhZGVyOiByZWFkZXIsIHVpZDogdWlkfSApO1xuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcblx0fVxuXG5cdGxvYWQocHJlZml4LCBsb2FkZXIsIHVpZCwgY29udGV4dCkge1xuXHRcdHRoaXMuc2VydmljZUNvbXBvbmVudC5maXJlKCdzYi1sb2FkJywge3ByZWZpeDogcHJlZml4LCBsb2FkZXI6IGxvYWRlciwgdWlkOiB1aWQsIGNvbnRleHQ6IGNvbnRleHR9ICk7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuXHR9XG5cblx0c2F2ZShwcmVmaXgsIHNhdmVyLCBtb2RlbCkge1xuXHRcdHRoaXMuc2VydmljZUNvbXBvbmVudC5maXJlKCdzYi1zYXZlJywge3ByZWZpeDogcHJlZml4LCBzYXZlcjogc2F2ZXIsIG1vZGVsOiBtb2RlbH0gKTtcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG5cdH1cblxuXHRtZChwcmVmaXgsIHR5cGUsIGZ1bGxOYW1lcykge1xuXHRcdHRoaXMuc2VydmljZUNvbXBvbmVudC5maXJlKCdzYi1tZCcsIHtwcmVmaXg6IHByZWZpeCwgbWRUeXBlOiB0eXBlLCBtZEl0ZW1zOiBmdWxsTmFtZXN9ICk7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuXHR9XG59Il19